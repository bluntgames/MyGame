 CHEAT: stays in the default value if cheats are not disabled
 REQUIRE_NET_SYNC: cannot be changed on client and when connecting it's sent to the client
 SAVEGAME: stored when saving a savegame
 READONLY: can not be changed by the user
-------------------------

Command: _TestFormatMessage 
script: 
help: 

Command: ai_CheckGoalpipes 
script: 
help: Checks goalpipes and dumps report to console.

Command: ai_commTest 
script: 
help: Tests communication for the specified AI actor.
If no communication name is specified all communications will be played.
Usage: ai_commTest <actorName> [commName]


Command: ai_commTestStop 
script: 
help: Stop currently playing communication for the specified AI actor.
Usage: ai_commTestStop <actorName>


Command: ai_DebugAgent 
script: 
help: Start debugging an agent more in-depth. Pick by name, closest or in center of view.
Example: ai_DebugAgent closest
Example: ai_DebugAgent centerview
Example: ai_DebugAgent name
Call without parameters to stop the in-depth debugging.
Example: ai_DebugAgent


Command: ai_debugMNMAgentType 
script: 
help: Enabled MNM debug draw for an specific agent type.
Usage: ai_debugMNMAgentType [AgentTypeName]


Command: ai_dumpCheckpoints 
script: 
help: Dump CodeCoverage checkpoints to file

Command: ai_MNMCalculateAccessibility 
script: 
help: Calculate mesh reachability starting from designers placed MNM Seeds.


Command: ai_MNMComputeConnectedIslands 
script: 
help: Computes connected islands on the mnm mesh.


Command: ai_Recorder_Start 
script: 
help: Reset and start the AI Recorder on demand

Command: ai_Recorder_Stop 
script: 
help: Stop the AI Recorder. If logging in memory, saves it to disk.

Command: ai_reload 
script: 
help: Reload AI system scripts and data

Command: ai_resetCommStats 
script: 
help: Resets current communication statistics.
Usage: ai_resetCommStats


Command: ai_writeCommStats 
script: 
help: Dumps current statistics to log file.
Usage: ai_writeCommStats


Command: audit_cvars 
script: 
help: Logs all console commands and cvars

Command: Bind 
script: 
help: 

Command: ca_DebugText DUMPTODISK
script: 
help: if this is 1, it will print some debug text on the screen
if you give a file path or part of it instead, only the info for that character will appear

Command: ConsoleHide 
script: 
help: Closes the console

Command: ConsoleShow 
script: 
help: Opens the console

Command: debugCameraInvertY 
script: 
help: Toggle debug camera Y-axis inversion.


Command: debugCameraMove 
script: 
help: Move the debug camera the specified distance (x y z).


Command: debugCameraToggle 
script: 
help: Toggle the debug camera.


Command: DrillerStart 
script: 
help: Start a driller capture.

Command: DrillerStop 
script: 
help: Stop a driller capture.

Command: ds_Dump 
script: 
help: 

Command: ds_DumpSessions 
script: 
help: 

Command: ds_Reload 
script: 
help: 

Command: dump_action_maps 
script: 
help: Prints all action map bindings to console

Command: dump_maps 
script: 
help: Dumps currently scanned maps

Command: dump_stats 
script: 
help: Dumps some player statistics

Command: DumpCommandsVars 
script: 
help: This console command dumps all console variables and commands to disk
DumpCommandsVars [prefix]

Command: DumpVars 
script: 
help: This console command dumps all console variables to disk
DumpVars [IncludeCheatCvars]

Command: e_DebugDrawListCMD 
script: 
help: Issue commands to control e_DebugDraw list debuginfo behaviour
'Freeze' (F) - stops refreshing stats
'Continue' (C) - unfreezes
'DumpLog' (D) - dumps the current on-screen info into the log

Command: e_ParticleListEffects 
script: 
help: Writes all effects used and counts to log

Command: e_ParticleListEmitters 
script: 
help: Writes all emitters to log

Command: e_ParticleMemory 
script: 
help: Displays current particle memory usage

Command: e_ReloadSurfaces 
script: 
help: Reload physical properties of all materials

Command: e_StatoscopeAddUserMarker 
script: 
help: Add a user marker to the perf stat logging for this frame

Command: eqp_DumpPacks 
script: 
help: Prints all equipment pack information to console

Command: es_compile_area_grid 
script: 
help: Trigger a recompile of the area grid

Command: es_debugAnim 
script: 
help: Debug entity animation (toggle on off)

Command: es_dump_bookmarks 
script: 
help: Dumps information about all bookmarked entities

Command: es_dump_entities 
script: 
help: Dumps current entities and their states!

Command: es_dump_entity_classes_in_use 
script: 
help: Dumps all used entity classes

Command: exec 
script: 
help: executes a batch file of console commands

Command: ffs_PlayEffect 
script: 
help: Play force feedback effect, passed by name as first parameter

Command: ffs_Reload 
script: 
help: Reload force feedback system data

Command: ffs_StopAllEffects 
script: 
help: Stop force feedback effect, passed by name as first parameter

Command: fg_InspectAction 
script: 
help: Inspects the specified AIAction graph

Command: fg_InspectEntity 
script: 
help: Inspects the specified Entity graph

Command: fg_Inspector 
script: 
help: Toggles FlowGraph System DefaultInspector.
Usage: fg_Inspector [0/1]
Default is 0 (off).

Command: g_dump_stats 
script: 
help: 

Command: g_dumpClassRegistry 
script: 
help: Print to console the list of classes and their associated ids

Command: g_saveLoadDumpEntity 
script: 
help: Print to console the xml data saved for a specified entity

Command: gamedata_playback 
script: 
help: 

Command: gamedata_record 
script: 
help: 

Command: gamedata_stop_record_or_playback 
script: 
help: 

Command: gm_setdebugdraw 
script: 
help: Helper for setting up debug draw level: e.g. gm_setdebugdraw Basic+Stats+Trace.Options are Basic, Trace, Stats, Replicas, and Actors.

Command: gt_AddToDebugList 
script: 
help: Adds a game token by name to the list of game tokens to be shown on screen

Command: gt_RemoveFromDebugList 
script: 
help: Removes a game token by name from the list of game tokens to be shown on screen

Command: hmd_recenter_pose 
script: 
help: Re-centers sensor orientation of the HMD.

Command: hmd_tracking_level 
script: 
help: Set the HMD center reference point.
0 - Camera (Actor's head)
1 - Actor's feet (floor)


Command: i_dropitem 
script: 
help: Drops the current selected item!

Command: i_giveallitems 
script: 
help: Gives all available items to the player!

Command: i_giveammo 
script: 
help: Sets specified ammo to the specified amount in the player's inventory.
Usage: i_giveammo PistolBullet 999

Command: i_givedebugitems 
script: 
help: Gives special debug items to the player!

Command: i_giveitem 
script: 
help: Gives specified item to the player!

Command: i_listitems 
script: 
help: List all item names matching the string provided as parameter.

Command: i_saveweaponposition 
script: 
help: Saves weapon offset

Command: load RESTRICTEDMODE
script: 
help: Load game

Command: LoadConfig 
script: 
help: Load .cfg file from disk (from the {Game}/Config directory)
e.g. LoadConfig lowspec.cfg
Usage: LoadConfig <filename>

Command: LocalizationDumpLoadedInfo 
script: 
help: Dump out into about the loaded localization files

Command: log_flush 
script: 
help: Flush the log file

Command: lua_dump_state 
script: 
help: Dumps the current state of the lua memory (defined symbols and values) into the file LuaState.txt

Command: lua_garbagecollect 
script: 
help: Forces a garbage collection of the lua state

Command: lua_reload_script 
script: 
help: Reloads given script files and their dependencies

Command: map 
script: 
help: Load a map

Command: memDumpAllocs 
script: 
help: print allocs with stack traces

Command: memReplayAddSizerTree 
script: 
help: output in-game sizer information to the log

Command: memReplayDumpSymbols 
script: 
help: dump symbol info to mem replay log

Command: memReplayInfo 
script: 
help: output some info about the replay log

Command: memReplayLabel 
script: 
help: record a label in the mem replay log

Command: memReplayPause 
script: 
help: Pause collection of mem replay data

Command: memReplayResume 
script: 
help: Resume collection of mem replay data (use with -memReplayPaused cmdline)

Command: memReplayStop 
script: 
help: stop logging to mem replay

Command: memResetAllocs 
script: 
help: clears memHierarchy tree

Command: metastream_start 
script: 
help: Starts the Metastream HTTP server

Command: metastream_stop 
script: 
help: Stops the Metastream HTTP server

Command: mfx_Reload 
script: 
help: Reload MFX Spreadsheet

Command: mfx_ReloadFGEffects 
script: 
help: Reload MaterialEffect's FlowGraphs

Command: mn_DebugAI 
script: 
help: 

Command: mn_listAssets 
script: 
help: Lists all the currently referenced animation assets

Command: mn_reload 
script: 
help: Reloads animation databases

Command: open_url 
script: 
help: 

Command: osm_setFBScale 
script: 
help: Sets the framebuffer scale to either a single scale on both X and Y, or independent scales.
NOTE: Will be overridden immediately if Overload scene manager is still enabled - see osm_enabled

Command: play 
script: 
help: Play back a recorded game

Command: q_Quality 
script: 
help: If called with a parameter it sets the quality of all q_.. variables
otherwise it prints their current state
Usage: q_Quality [0=low/1=med/2=high/3=very high]

Command: quit RESTRICTEDMODE
script: System.Quit()
help: Quit/Shutdown the engine

Command: r_ColorGradingChartImage 
script: 
help: If called with a parameter it loads a color chart image. This image will overwrite
 the dynamic color chart blending result and be used during post processing instead.
If called with no parameter it displays the name of the previously loaded chart.
To reset a previously loaded chart call r_ColorGradingChartImage 0.
Usage: r_ColorGradingChartImage [path of color chart image/reset]

Command: r_DumpFontNames 
script: 
help: Logs a list of fonts currently loaded

Command: r_DumpFontTexture 
script: 
help: Dumps the specified font's texture to a bitmap file
Use r_DumpFontTexture to get the loaded font names
Usage: r_DumpFontTexture <fontname>

Command: r_getposteffectparamf 
script: 
help: Outputs post effect param value (float) to logUsage: r_setposteffectparamf [posteffectparamname]
Example: r_getposteffectparamf HUD3D_FOV


Command: r_OptimiseShaders 
script: 
help: 

Command: r_OverscanBorders 
script: 
help: Changes the size of the overscan borders for the left/right and top/bottom
of the screen for adjusting the title safe area. This is for logo placements
and text printout to account for the TV overscan and is mostly needed for consoles.
If only one value is specified, the overscan borders for left/right and top/bottom
are set simultaneously, but you may also specify different percentages for left/right
and top/bottom.
Usage: r_OverscanBorders [0..25]
       r_OverscanBorders [0..25] [0..25]
Default is 0=off, >0 defines the size of the overscan borders for left/right
or top/bottom as percentages of the whole screen size (e.g. 7.5).

Command: r_PrecacheShaderList 
script: 
help: 

Command: r_setposteffectparamf 
script: 
help: Sets post effect param (float)nUsage: r_setposteffectparamf [posteffectparamname, value, forceValue(OPTIONAL)]
Example: r_setposteffectparamf HUD3D_FOV 35.0	 (Doesn't force value)
Example: r_setposteffectparamf HUD3D_FOV 35.0 1 (Forces value)


Command: r_ShowRenderTarget 
script: 
help: Displays render targets - for debug purpose
[Usage]
r_ShowRenderTarget -l : list all available render targets
r_ShowRenderTarget -l hdr : list all available render targets whose name contain 'hdr'
r_ShowRenderTarget -nf zpass : show any render targets whose name contain 'zpass' with no filtering in 2x2(default) table
r_ShowRenderTarget -c:3 pass : show any render targets whose name contain 'pass' in 3x3 table
r_ShowRenderTarget z hdr : show any render targets whose name contain either 'z' or 'hdr'
r_ShowRenderTarget scene:rg scene:b : show any render targets whose name contain 'scene' first with red-green channels only and then with a blue channel only
r_ShowRenderTarget scenetarget:rgba:2 : show any render targets whose name contain 'scenetarget' with all channels multiplied by 2
r_ShowRenderTarget scene:b hdr:a : show any render targets whose name contain 'scene' with a blue channel only and ones whose name contain 'hdr' with an alpha channel only
r_ShowRenderTarget -e $ztarget : show a render target whose name exactly matches '$ztarget'
r_ShowRenderTarget -s scene : separately shows each channel of any 'scene' render targets
r_ShowRenderTarget -k scene : shows any 'scene' render targets with RGBK decoding
r_ShowRenderTarget -a scene : shows any 'scene' render targets with 101110/8888 aliasing

Command: r_StatsShaderList 
script: 
help: 

Command: readabilityReload 
script: 
help: Reloads readability xml files.

Command: RecordClip 
script: 
help: Records a video clip of the game
Usage: RecordClipCmd <exec/config> <time before> <time after> <local backup (backup/no_backup)> <annotation text>
e.g. RecordClipCmd config 10 5 backup My Test Video
     Configures the recording parameters
e.g. RecordClipCmd config
     Shows the current parameters
e.g. RecordClipCmd
     Records a video clip using the stored parameters
e.g. RecordClipCmd exec 3 6 no_backup Other Test Video
     Records a video clip using the given recording parameters and updates the configuration


Command: ReloadDialogData 
script: 
help: Reloads all localization dependent XML sheets for the currently set language.

Command: resetcvars 
script: 
help: Resets all cvars to their initial values

Command: s_ExecuteTrigger 
script: 
help: Execute an Audio Trigger.
The first argument is the name of the AudioTrigger to be executed, the second argument is an optional AudioObject ID.
If the second argument is provided, the AudioTrigger is executed on the AudioObject with the given ID,
otherwise, the AudioTrigger is executed on the GlobalAudioObject
Usage: s_ExecuteTrigger Play_chicken_idle 605 or s_ExecuteTrigger MuteDialog


Command: s_Microphone 
script: 
help: Turn on/off microphone input.  Uses Audio Input Source (Wwise).
First argument is 0 or 1 to turn off or on the Microphone, respectively.
Second argument is the name of the ATL trigger to use (when turning microphone on) for Audio Input.
Usage: s_Microphone 1 Play_audio_input_2D
Usage: s_Microphone 0


Command: s_PlayFile 
script: 
help: Play an audio file directly.  Uses Audio Input Source (Wwise).
First argument is the name of the file to play.  Only .wav and .pcm (raw) files are supported right now.
Second argument is the name of the audio trigger to use.Usage: s_PlayFile "sounds\wwise\external_sources\sfx\my_file.wav" Play_audio_input_2D


Command: s_SetRtpc 
script: 
help: Set an Audio RTPC value.
The first argument is the name of the AudioRtpc to be set, the second argument is the float value to be set,the third argument is an optional AudioObject ID.
If the third argument is provided, the AudioRtpc is set on the AudioObject with the given ID,
otherwise, the AudioRtpc is set on the GlobalAudioObject
Usage: s_SetRtpc character_speed  0.0  601 or s_SetRtpc volume_music 1.0


Command: s_SetSwitchState 
script: 
help: Set an Audio Switch to a provided State.
The first argument is the name of the AudioSwitch to, the second argument is the name of the SwitchState to be set,the third argument is an optional AudioObject ID.
If the third argument is provided, the AudioSwitch is set on the AudioObject with the given ID,
otherwise, the AudioSwitch is set on the GlobalAudioObject
Usage: s_SetSwitchState SurfaceType concrete 601 or s_SetSwitchState weather rain


Command: s_StopTrigger 
script: 
help: Execute an Audio Trigger.
The first argument is the name of the AudioTrigger to be stopped, the second argument is an optional AudioObject ID.
If the second argument is provided, the AudioTrigger is stopped on the AudioObject with the given ID,
otherwise, the AudioTrigger is stopped on the GlobalAudioObject
Usage: s_StopTrigger Play_chicken_idle 605 or s_StopTrigger MuteDialog


Command: save RESTRICTEDMODE
script: 
help: Save game

Command: save_genstrings 
script: 
help: 

Command: SaveLevelStats 
script: 
help: Calling this command creates multiple XML files with level statistics.
The data includes file usage, dependencies, size in more/disk.
The files can be loaded in Excel.

Command: sc_update 
script: 
help: Loads any new SoftCode modules

Command: Screenshot 
script: 
help: Create a screenshot with annotation
e.g. Screenshot beach scene with shark
Usage: Screenshot <annotation text>

Command: sys_crashtest 
script: 
help: Make the game crash
0=off
1=null pointer exception
2=floating point exception
3=memory allocation exception
4=cry fatal error is called
5=memory allocation for small blocks
6=assert
7=debugbreak
8=10min sleep

Command: sys_job_system_dump_job_list 
script: 
help: Show a list of all registered job in the console

Command: sys_LvlRes_finalstep 
script: 
help: to combine all recorded level resources and create final stripped build (pass directory name as parameter)

Command: sys_LvlRes_findunused 
script: 
help: find unused level resources

Command: sys_RestoreSpec 
script: 
help: Restore or test the cvar settings of game specific spec settings,
'test*' and 'info' log to the log file only
Usage: sys_RestoreSpec [test|test*|apply|info]

Command: sys_SetLogLevel 
script: 
help: Set AWS log level [0 - 6].

Command: sys_StroboscopeDumpResults 
script: 
help: Dumps the results onto disk.

Command: sys_StroboscopeStart 
script: 
help: Starts the stroboscope profiler.
Usage:
sys_StroboscopeStart [Duration] [StartDelay] [Throttle] [ThreadId...]

Command: sys_StroboscopeStop 
script: 
help: Stops the stroboscope profiler.

Command: test_profile 
script: 
help: 

Command: test_reset 
script: 
help: 

Command: ui_TestCanvasCreate 
script: 
help: 

Command: ui_TestCanvasRemove 
script: 
help: 

Command: unload 
script: 
help: Unload current map

Command: v_dump_classes 
script: 
help: Outputs a list of vehicle classes in use

Command: v_exit_player 
script: 
help: Makes the local player exit his current vehicle.

Command: v_reload_system 
script: VehicleSystem.ReloadVehicleSystem()
help: Reloads VehicleSystem script

Command: version 
script: 
help: Shows game version number

Command: VisRegTest 
script: 
help: Run visual regression test.
Usage: VisRegTest [<name>=test] [<config>=visregtest.xml] [quit=false]

Command: wait_frames 
script: 
help: Forces the console to wait for a given number of frames before the next deferred command is processed
Works only in deferred command mode

Command: wait_seconds 
script: 
help: Forces the console to wait for a given number of seconds before the next deferred command is processed
Works only in deferred command mode

variable: a_poseAlignerDebugDraw 
type: int
current: 0
help: Enable PoseAligner debug drawing.

variable: a_poseAlignerEnable 
type: int
current: 1
help: Enable PoseAligner.

variable: a_poseAlignerForceLock 
type: int
current: 0
help: PoseAligner force lock.

variable: a_poseAlignerForceNoIntersections 
type: int
current: 0
help: PoseAligner forces no intersections, might make animation more 'poppy'.

variable: a_poseAlignerForceNoRootOffset 
type: int
current: 0
help: PoseAligner forces no root offset.

variable: a_poseAlignerForceTargetSmoothing 
type: int
current: 0
help: PoseAligner forces smoothing of target position and normal.

variable: a_poseAlignerForceWeightOne 
type: int
current: 0
help: PoseAligner forces targeting weight to always be one.

variable: ac_ColliderModeAI 
type: int
current: 0
help: Force override collider mode for all AI.

variable: ac_ColliderModePlayer 
type: int
current: 0
help: Force override collider mode for all players.

variable: ac_debugAnimEffects 
type: int
current: 0
help: Print log messages when anim events spawn effects.

variable: ac_debugAnimTarget 
type: int
current: 0
help: Display debug history graphs of anim target correction.

variable: ac_debugColliderMode 
type: int
current: 0
help: Display filtered and requested collider modes.

variable: ac_debugEntityParams 
type: int
current: 0
help: Display entity params graphs

variable: ac_DebugFilter 
type: string
current: 0
help: Debug specified entity name only.

variable: ac_debugLocations 
type: int
current: 0
help: Debug render entity location.

variable: ac_debugLocationsGraphs 
type: int
current: 0
help: Display debug history graphs of entity locations and movement.

variable: ac_debugMotionParams 
type: int
current: 0
help: Display graph of motion parameters.

variable: ac_debugMovementControlMethods 
type: int
current: 0
help: Display movement control methods.

variable: ac_debugText 
type: int
current: 0
help: Display entity/animation location/movement values, etc.

variable: ac_debugXXXValues 
type: int
current: 0
help: Display some values temporarily hooked into temp history graphs.

variable: ac_disableSlidingContactEvents 
type: int
current: 0
help: Force disable sliding contact events.

variable: ac_enableExtraSolidCollider 
type: int
current: 1
help: Enable extra solid collider (for non-pushable characters).

variable: ac_entityAnimClamp 
type: int
current: 1
help: Forces the entity movement to be limited by animation.

variable: ac_forceSimpleMovement 
type: int
current: 0
help: Force enable simplified movement (not visible, dedicated server, etc).

variable: ac_frametime 
type: int
current: 0
help: Display a graph of the frametime.

variable: ac_movementControlMethodFilter 
type: int
current: 0
help: Force reinterprets Decoupled/CatchUp MCM specified by AG as Entity MCM (H/V overrides override this).

variable: ac_movementControlMethodHor 
type: int
current: 0
help: Overrides the horizontal movement control method specified by AG (overrides filter).

variable: ac_movementControlMethodVer 
type: int
current: 0
help: Overrides the vertical movement control method specified by AG (overrides filter).

variable: ac_templateMCMs 
type: int
current: 1
help: Use MCMs from AG state templates instead of AG state headers.

variable: ac_useMovementPrediction 
type: int
current: 1
help: When using animation driven motion sample animation for the root one frame ahead to take into account 1 frame of physics delay

variable: ac_useQueuedRotation 
type: int
current: 0
help: Instead of applying rotation directly, queue it until the beginning of the next frame (synchronizes rotation with translation coming from asynchronous physics)

variable: ag_debugExactPos 
type: int
current: 0
help: Enable/disable exact positioning debugger

variable: ag_defaultAIStance 
type: string
current: combat
help: Specifies default stance name for AI

variable: ag_travelSpeedSmoothing 
type: int
current: 1
help: Enables/Disables travel speed smoothing.

variable: ag_turnAngleSmoothing 
type: int
current: 1
help: Enables/Disables turn angle smoothing.

variable: ag_turnSpeedParamScale 
type: float
current: 0.2
help: Scale the turn speed animation param (used for leaning)

variable: ag_turnSpeedSmoothing 
type: int
current: 1
help: Enables/Disables turn speed smoothing.

variable: ai_AdjustPathsAroundDynamicObstacles 
type: int
current: 1
help: Set to 1/0 to enable/disable AI path adjustment around dynamic obstacles

variable: ai_AgentStatsDist 
type: float
current: 150
help: Sets agent statistics draw distance, such as current goalpipe, command and target.
Only information on enabled AI objects will be displayed.
To display more information on particular AI agent, use ai_StatsTarget.
Yellow line represents direction where AI is trying to move;
Red line represents direction where AI is trying to look;
Blue line represents forward dir (entity forward);
Usage: ai_AgentStatsDist [view distance]
Default is 20 meters. Works with ai_DebugDraw enabled.

variable: ai_AllowedToHit 
type: int
current: 1
help: If turned off, all agents will miss all the time.

variable: ai_AllowedToHitPlayer 
type: int
current: 1
help: If turned off, all agents will miss the player all the time.

variable: ai_AllTime 
type: int
current: 0
help: Displays the update times of all agents, in milliseconds.
Usage: ai_AllTime [0/1]
Default is 0 (off). Times all agents and displays the time used updating
each of them. The name is colour coded to represent the update time.
	Green: less than 1 ms (ok)
	White: 1 ms to 5 ms
	Red: more than 5 ms
You must enable ai_DebugDraw before you can use this tool.

variable: ai_AmbientFireEnable 
type: int
current: 1
help: Enable ambient fire system.

variable: ai_AmbientFireQuota 
type: int
current: 2
help: Number of units allowed to hit the player at a time.

variable: ai_AmbientFireUpdateInterval 
type: float
current: 1
help: Ambient fire update interval. Controls how often puppet's ambient fire status is updated.

variable: ai_AttemptStraightPath 
type: int
current: 1
help: Toggles AI attempting a simple straight path when possible.
Default is 1 (on).

variable: ai_BannedNavSoTime 
type: float
current: 15
help: Time indicating how long invalid navsos should be banned.

variable: ai_BeautifyPath 
type: int
current: 1
help: Toggles AI optimisation of the generated path.
Usage: ai_BeautifyPath [0/1]
Default is 1 (on). Optimisation is on by default. Set to 0 to
disable path optimisation (AI uses non-optimised path).

variable: ai_BubblesSystem 
type: int
current: 1
help: Enables/disables bubble notifier.

variable: ai_BubblesSystemAlertnessFilter 
type: int
current: 7
help: Specifies the type of messages you want to receive:
0 - none
1 - Only logs in the console
2 - Only bubbles
3 - Logs and bubbles
4 - Only blocking popups
5 - Blocking popups and logs
6 - Blocking popups and bubbles
7 - All notifications

variable: ai_BubblesSystemDecayTime 
type: float
current: 15
help: Specifies the decay time for the bubbles drawn on screen.

variable: ai_BubblesSystemFontSize 
type: float
current: 45
help: Font size for the BubblesSystem.

variable: ai_BubblesSystemUseDepthTest 
type: int
current: 0
help: Specifies if the BubblesSystem should use the depth test to show the messages inside the 3D world.

variable: ai_BubbleSystemAllowPrototypeDialogBubbles 
type: int
current: 0
help: Enabling the visualization of the bubbles created to prototype AI dialogs

variable: ai_BurstWhileMovingDestinationRange 
type: float
current: 9999
help: When using FIREMODE_BURST_WHILE_MOVING - only fire when within this distance to the destination.

variable: ai_CheckWalkabilityOptimalSectionLength 
type: float
current: 1.75
help: The maximum segment length used by CheckWalkabilityFast when querying for world geometry from physics.
Default: 1.75


variable: ai_CodeCoverageMode 
type: int
current: 0
help: Set current mode of Code Coverage system.
0 = off, 1 = smart, 2 = silent, 3 = force

variable: ai_CollisionAvoidanceAgentExtraFat 
type: float
current: 0.025
help: Extra radius to use in Collision Avoidance calculations as a buffer.

variable: ai_CollisionAvoidanceAgentTimeHorizon 
type: float
current: 2.5
help: Time horizon used to calculate an agent's collision free velocity against other agents.

variable: ai_CollisionAvoidanceClampVelocitiesWithNavigationMesh 
type: int
current: 0
help: Enable/Disable the clamping of the speed resulting from ORCA with the navigation mesh

variable: ai_CollisionAvoidanceEnableRadiusIncrement 
type: int
current: 1
help: Enable/disable agents adding an increment to their collision avoidance radius when moving.

variable: ai_CollisionAvoidanceMinSpeed 
type: float
current: 0.2
help: Minimum speed allowed to be used by ORCA.

variable: ai_CollisionAvoidanceObstacleTimeHorizon 
type: float
current: 1.5
help: Time horizon used to calculate an agent's collision free velocity against static obstacles.

variable: ai_CollisionAvoidancePathEndCutoffRange 
type: float
current: 0.5
help: Distance from it's current path end for an agent to stop avoiding obstacles. Other actors will still avoid the agent.

variable: ai_CollisionAvoidanceRadiusIncrementDecreaseRate 
type: float
current: 2
help: Decrease rate of the collision avoidance radius increment.

variable: ai_CollisionAvoidanceRadiusIncrementIncreaseRate 
type: float
current: 0.25
help: Increase rate of the collision avoidance radius increment.

variable: ai_CollisionAvoidanceRange 
type: float
current: 10
help: Range for collision avoidance.

variable: ai_CollisionAvoidanceSmartObjectCutoffRange 
type: float
current: 1
help: Distance from it's next smart object for an agent to stop avoiding obstacles. Other actors will still avoid the agent.

variable: ai_CollisionAvoidanceTargetCutoffRange 
type: float
current: 3
help: Distance from it's current target for an agent to stop avoiding obstacles. Other actors will still avoid the agent.

variable: ai_CollisionAvoidanceTimestep 
type: float
current: 0.1
help: TimeStep used to calculate an agent's collision free velocity.

variable: ai_CollisionAvoidanceUpdateVelocities 
type: int
current: 1
help: Enable/disable agents updating their velocities after processing collision avoidance.

variable: ai_CommunicationForceTestVoicePack 
type: int
current: 0
help: Forces all the AI agents to use a test voice pack. The test voice pack will have the specified name in the archetype or in the entity and the system will replace the _XX number with the _test string

variable: ai_CommunicationManagerHeighThresholdForTargetPosition 
type: float
current: 5
help: Defines the threshold used to detect if the target is above or below the entity that wants to play a communication.


variable: ai_CompatibilityMode 
type: string
current: crysis2
help: Set AI features to behave in earlier milestones - please use sparingly

variable: ai_CoolMissesBoxHeight 
type: float
current: 2.5
help: Vertical size of the box to collect potential cool objects to shoot at.

variable: ai_CoolMissesBoxSize 
type: float
current: 10
help: Horizontal size of the box to collect potential cool objects to shoot at.

variable: ai_CoolMissesCooldown 
type: float
current: 0.25
help: Global time between potential cool misses.

variable: ai_CoolMissesMaxLightweightEntityMass 
type: float
current: 20
help: Maximum mass of a non-destroyable, non-deformable, non-breakable rigid body entity to be considered.

variable: ai_CoolMissesMinMissDistance 
type: float
current: 7.5
help: Maximum distance to go away from the player.

variable: ai_CoolMissesProbability 
type: float
current: 0.35
help: Agents' chance to perform a cool miss!

variable: ai_CoverExactPositioning 
type: int
current: 0
help: Enables using exact positioning for arriving at cover.
Usage: ai_CoverPredictTarget [0/1]
Default x is 0 (off)
0 - disable
1 - enable


variable: ai_CoverMaxEyeCount 
type: int
current: 2
help: Max numbers of observers to consider when selecting cover.
Usage: ai_CoverMaxEyeCount <x>


variable: ai_CoverPredictTarget 
type: float
current: 1
help: Enables simple cover system target location prediction.
Usage: ai_CoverPredictTarget x
Default x is 0.0 (off)
x - how many seconds to look ahead


variable: ai_CoverSpacing 
type: float
current: 0.5
help: Minimum spacing between agents when choosing cover.
Usage: ai_CoverPredictTarget <x>
x - Spacing width in meters


variable: ai_CoverSystem 
type: int
current: 1
help: Enables the cover system.
Usage: ai_CoverSystem [0/1]
Default is 1 (on)
0 - off - use anchors
1 - use offline cover surfaces


variable: ai_CrouchVisibleRange 
type: float
current: 15
help: Max perception range for AI when player is crouching

variable: ai_CrowdControlInPathfind 
type: int
current: 0
help: Toggles AI using crowd control in pathfinding.
Usage: ai_CrowdControlInPathfind [0/1]
Default is 0 (off).

variable: ai_DebugBehaviorSelection 
type: string
current: 
help: Display behavior selection information for a specific agent
Usage: ai_DebugBehaviorSelection <name>

variable: ai_DebugCheckWalkability 
type: int
current: 0
help: Toggles output of check walkability information, as well as allowing the use of tagpoints named CheckWalkabilityTestStart/End to trigger a test each update. [default 0 is off]

variable: ai_DebugCheckWalkabilityRadius 
type: float
current: 0.5
help: Radius to use for the per-frame debug CheckWalkability test.

variable: ai_DebugCollisionAvoidanceForceSpeed 
type: float
current: 0
help: Force agents velocity to it's current direction times the specified value.

variable: ai_DebugDraw 
type: int
current: -1
help: Toggles the AI debugging view.
Usage: ai_DebugDraw [-1/0/1]
Default is 0 (minimal), value -1 will draw nothing, value 1 displays AI rays and targets 
and enables the view for other AI debugging tools.

variable: ai_DebugDrawAdaptiveUrgency 
type: int
current: 0
help: Enables drawing the adaptive movement urgency.

variable: ai_DebugDrawAmbientFire 
type: int
current: 0
help: Displays fire quota on puppets.

variable: ai_DebugDrawArrowLabelsVisibilityDistance 
type: float
current: 50
help: Provided ai_DebugDraw > 0, if the camera is closer to an agent than this distance,
agent arrows for look/fire/move arrows will have labels.
Usage: ai_DebugDrawArrowLabelsVisibilityDistance [distance]
Default is 50. 


variable: ai_DebugDrawAStarOpenList 
type: string
current: 0
help: Draws the A* open list for the specified AI agent.
Usage: ai_DebugDrawAStarOpenList [AI agent name]
Default is 0, which disables the debug draw. Requires ai_DebugPathfinding=1 to be activated.

variable: ai_DebugDrawAStarOpenListTime 
type: float
current: 10
help: The amount of time to draw the A* open list.

variable: ai_DebugDrawBannedNavsos 
type: int
current: 0
help: Toggles drawing banned navsos [default 0 is off]

variable: ai_DebugDrawCollisionAvoidance 
type: int
current: 0
help: Enable debugging obstacle avoidance system.

variable: ai_DebugDrawCollisionAvoidanceAgentName 
type: string
current: 
help: Name of the agent to draw collision avoidance data for.

variable: ai_DebugDrawCommunication 
type: int
current: 0
help: Displays communication debug information.
Usage: ai_DebugDrawCommunication [0/1/2]
 0 - disabled. (default).
 1 - draw playing and queued comms.
 2 - draw debug history for each entity.
 5 - extended debugging (to log) 6 - outputs info about each line played

variable: ai_DebugDrawCommunicationHistoryDepth 
type: int
current: 5
help: Tweaks how many historical entries are displayed per entity.
Usage: ai_DebugDrawCommunicationHistoryDepth [depth]

variable: ai_DebugDrawCoolMisses 
type: int
current: 0
help: Toggles displaying the cool miss locations around the player.
Usage: ai_DebugDrawCoolMisses [0/1]

variable: ai_DebugDrawCover 
type: int
current: 0
help: Displays cover debug information.
Usage: ai_DebugDrawCover [0/1/2]
Default is 0 (off)
0 - off
1 - currently being used
2 - all in 50m range (slow)


variable: ai_DebugDrawCoverLocations 
type: int
current: 0
help: Displays cover locations.
Usage: ai_DebugDrawCoverLocations [0/1]
Default is 0 (off)


variable: ai_DebugDrawCoverOccupancy 
type: int
current: 0
help: Renders red balls at the location of occupied cover.
Usage: ai_DebugDrawCoverOccupancy [0/1]
Default is 0 (off)
0 - off
1 - render red balls at the location of occupied cover


variable: ai_DebugDrawCoverPlanes 
type: int
current: 0
help: Displays cover planes.
Usage: ai_DebugDrawCoverPlanes [0/1]
Default is 0 (off)


variable: ai_DebugDrawCoverSampler 
type: int
current: 0
help: Displays cover sampler debug rendering.
Usage: ai_DebugDrawCoverSampler [0/1/2/3]
Default is 0 (off)
0 - off
1 - display floor sampling
2 - display surface sampling
3 - display both


variable: ai_DebugDrawCrowdControl 
type: int
current: 0
help: Draws crowd control debug information. 0=off, 1=on

variable: ai_DebugDrawDamageControl 
type: int
current: 0
help: Debugs the damage control system 0=disabled, 1=collect, 2=collect&draw.

variable: ai_DebugDrawDamageParts 
type: int
current: 0
help: Draws the damage parts of puppets and vehicles.

variable: ai_DebugDrawDynamicCoverSampler 
type: int
current: 0
help: Displays dynamic cover sampler debug rendering.
Usage: ai_DebugDrawDynamicCoverSampler [0/1]
Default is 0 (off)
0 - off
1 - on


variable: ai_DebugDrawDynamicHideObjectsRange 
type: int
current: 0
help: Sets the range for drawing dynamic hide objects around the player (needs ai_DebugDraw > 0).

variable: ai_DebugDrawEnabledActors 
type: int
current: 0
help: list of AI Actors that are enabled and metadata

variable: ai_DebugDrawEnabledPlayers 
type: int
current: 0
help: list of AI players that are enabled and metadata

variable: ai_DebugDrawExpensiveAccessoryQuota 
type: int
current: 0
help: Displays expensive accessory usage quota on puppets.

variable: ai_DebugDrawFireCommand 
type: int
current: 0
help: Toggles displaying the fire command targets and modifications.
Usage: ai_DebugDrawFireCommand [0/1]

variable: ai_DebugDrawFlight2 
type: int
current: 0
help: Set AI features to behave in earlier milestones - please use sparingly

variable: ai_DebugDrawGroups 
type: int
current: 0
help: Toggles the AI Groups debugging view.
Usage: ai_DebugDrawGroups [0/1]
Default is 0 (off). ai_DebugDrawGroups displays groups' leaders, members and their desired positions.

variable: ai_DebugDrawHidespotRange 
type: int
current: 0
help: Sets the range for drawing hidespots around the player (needs ai_DebugDraw > 0).

variable: ai_DebugDrawHideSpotSearchRays 
type: int
current: 0
help: Toggle drawing rays used in HM_ONLY_IF_CAN_SHOOT_FROM_THERE hide spot search option.
Usage: ai_DebugDrawHideSpotSearchRays [0..1]

variable: ai_DebugDrawLightLevel 
type: int
current: 0
help: Debug AI light level manager

variable: ai_DebugDrawNavigation 
type: int
current: 0
help: Displays the navigation debug information.
Usage: ai_DebugDrawNavigation [0/1]
Default is 0 (off)
0 - off
1 - triangles and contour
2 - triangles, mesh and contours
3 - triangles, mesh contours and external links
4 - triangles, mesh contours, external links and triangle IDs
5 - triangles, mesh contours, external links and island IDs


variable: ai_DebugDrawNavigationWorldMonitor 
type: int
current: 0
help: Enables displaying bounding boxes for world changes.
Usage: ai_DebugDrawNavigationWorldMonitor [0/1]
Default is 0 (off)
0 - off
1 - on


variable: ai_DebugDrawPhysicsAccess 
type: int
current: 0
help: Displays current physics access statistics for the AI module.

variable: ai_DebugDrawPlayerActions 
type: int
current: 0
help: Debug draw special player actions.

variable: ai_DebugDrawReinforcements 
type: int
current: -1
help: Enables debug draw for reinforcement logic for specified group.
Usage: ai_DebugDrawReinforcements <groupid>, or -1 to disable.

variable: ai_DebugDrawStanceSize 
type: int
current: 0
help: Draws the game logic representation of the stance size of the AI agents.

variable: ai_DebugDrawVegetationCollisionDist 
type: int
current: 0
help: Enables drawing vegetation collision closer than a distance projected onto the terrain.

variable: ai_DebugDrawVisionMap 
type: int
current: 0
help: Toggles the debug drawing of the AI VisionMap.

variable: ai_DebugDrawVisionMapObservables 
type: int
current: 1
help: Enables the debug drawing of the AI VisionMap to show the location/stats of the observables.

variable: ai_DebugDrawVisionMapObservers 
type: int
current: 1
help: Enables the debug drawing of the AI VisionMap to show the location/stats of the observers.


variable: ai_DebugDrawVisionMapObserversFOV 
type: int
current: 0
help: Enables the debug drawing of the AI VisionMap to draw representations of the observers FOV.


variable: ai_DebugDrawVisionMapStats 
type: int
current: 1
help: Enables the debug drawing of the AI VisionMap to show stats information.

variable: ai_DebugDrawVisionMapVisibilityChecks 
type: int
current: 1
help: Enables the debug drawing of the AI VisionMap to show the status of the visibility checks.

variable: ai_DebugDrawVolumeVoxels 
type: int
current: 0
help: Toggles the AI debugging drawing of voxels in volume generation.
Usage: ai_DebugDrawVolumeVoxels [0, 1, 2 etc]
Default is 0 (off)
+n draws all voxels with original value >= n
-n draws all voxels with original value =  n

variable: ai_DebugGlobalPerceptionScale 
type: int
current: 0
help: Draws global perception scale multipliers on screen

variable: ai_DebugHideSpotName 
type: string
current: 0
help: Debug HideSpot Name!

variable: ai_DebugInterestSystem 
type: int
current: 0
help: Display debugging information on interest system

variable: ai_DebugMovementSystem 
type: int
current: 0
help: Draw debug information to the screen regarding character movement.

variable: ai_DebugMovementSystemActorRequests 
type: int
current: 0
help: Draw queued movement requests of actors in the world as text above their head.
0 - Off
1 - Draw request queue of only the currently selected agent
2 - Draw request queue of all agents

variable: ai_DebugPathfinding 
type: int
current: 0
help: Toggles output of pathfinding information [default 0 is off]

variable: ai_DebugPerceptionManager 
type: int
current: 0
help: Draws perception manager performance overlay. 0=disable, 1=vis checks, 2=stimulus

variable: ai_DebugRangeSignaling 
type: int
current: 0
help: Enable Range Signaling Debug Screen

variable: ai_DebugSignalTimers 
type: int
current: 0
help: Enable Signal Timers Debug Screen

variable: ai_DebugTacticalPoints DUMPTODISK
type: int
current: 0
help: Display debugging information on tactical point selection system

variable: ai_DebugTacticalPointsBlocked DUMPTODISK
type: int
current: 0
help: Highlight with red spheres any points blocked by generation phase, e.g. occupied points

variable: ai_DebugTargetSilhouette 
type: int
current: 0
help: Draws the silhouette used for missing the target while shooting.

variable: ai_DebugTargetTracksAgent 
type: string
current: none
help: Draws the target tracks for the given agent
Usage: ai_DebugTargetTracksAgent AIName
Default is 'none'. AIName is the name of the AI agent to debug

variable: ai_DebugTargetTracksConfig 
type: int
current: 0
help: Draws the information contained in the loaded target track configurations to the screen

variable: ai_DebugTargetTracksConfig_Filter 
type: string
current: none
help: Filter what configurations are drawn when debugging target tracks
Usage: ai_DebugTargetTracks_Filter Filter
Default is 'none'. Filter is a substring that must be in the configuration name

variable: ai_DebugTargetTracksTarget 
type: int
current: 0
help: Draws lines to illustrate where each agent's target is
Usage: ai_DebugTargetTracking 0/1/2
0 = Off. 1 = Show best target. 2 = Show all possible targets.

variable: ai_DebugTimestamps 
type: int
current: 1
help: [0-1] Enable/Disable the debug text of the modular behavior tree's timestamps.

variable: ai_DebugWalkabilityCache 
type: int
current: 0
help: Toggles allowing the use of tagpoints named WalkabilityCacheOrigin to cache walkability. [default 0 is off]

variable: ai_DrawAgentFOV 
type: float
current: 0
help: Toggles the vision cone of the AI agent.
Usage: ai_DrawagentFOV [0..1]
Default is 0 (off), value 1 will draw the cone all the way to
the sight range, value 0.1 will draw the cone to distance of 10%
of the sight range, etc. ai_DebugDraw must be enabled before
this tool can be used.

variable: ai_DrawAgentStats 
type: string
current: NkcBbtGgSfdDL
help: Flag field specifying which of the overhead agent stats to display:
N - name
k - groupID
d - distances
c - cover info
B - currently selected behavior node
b - current behavior
t - target info
G - goal pipe
g - goal op
S - stance
f - fire
w - territory/wave
p - pathfinding status
l - light level (perception) status
D - various direction arrows (aim target, move target, ...) status
L - personal log
a - alertness

Default is NkcBbtGgSfdDL

variable: ai_DrawAgentStatsGroupFilter 
type: string
current: 
help: Filters Debug Draw Agent Stats displays to the specified groupIDs separated by spaces
usage: ai_DrawAgentStatsGroupFilter 1011 1012

variable: ai_DrawAreas 
type: int
current: 0
help: Enables/Disables drawing behavior related areas.

variable: ai_DrawAttentionTargetPositions 
type: int
current: 0
help: Displays markers for the AI's current attention target position. 

variable: ai_DrawBadAnchors 
type: int
current: -1
help: Toggles drawing out of bounds AI objects of particular type for debugging AI.
Valid only for 3D navigation. Draws red spheres at positions of anchors which are
located out of navigation volumes. Those anchors have to be moved.
 0 - off, 1 - on

variable: ai_DrawBulletEvents 
type: int
current: 0
help: Debug draw the bullet events the AI system processes. 0=disable, 1=enable.

variable: ai_DrawCollisionEvents 
type: int
current: 0
help: Debug draw the collision events the AI system processes. 0=disable, 1=enable.

variable: ai_DrawDistanceLUT 
type: int
current: 0
help: Draws the distance lookup table graph overlay.

variable: ai_DrawExplosions 
type: int
current: 0
help: Debug draw the explosion events the AI system processes. 0=disable, 1=enable.

variable: ai_DrawFakeDamageInd 
type: int
current: 0
help: Draws fake damage indicators on the player.

variable: ai_DrawFakeHitEffects 
type: int
current: 0
help: Draws fake hit effects the player.

variable: ai_DrawFakeTracers 
type: int
current: 0
help: Draws fake tracers around the player.

variable: ai_DrawFireEffectDecayRange 
type: float
current: 30
help: Distance under which the draw fire duration starts decaying linearly.

variable: ai_DrawFireEffectEnabled 
type: int
current: 1
help: Enabled AI to sweep fire when starting to shoot after a break.

variable: ai_DrawFireEffectMaxAngle 
type: float
current: 5
help: Maximum angle actors actors are allowed to go away from their aiming direction during draw fire.

variable: ai_DrawFireEffectMinDistance 
type: float
current: 7.5
help: Distance under which the draw fire will be disabled.

variable: ai_DrawFireEffectMinTargetFOV 
type: float
current: 7.5
help: FOV under which the draw fire will be disabled.

variable: ai_DrawFireEffectTimeScale 
type: float
current: 1
help: Scale for the weapon's draw fire time setting.

variable: ai_DrawFormations 
type: int
current: 0
help: Draws all the currently active formations of the AI agents.
Usage: ai_DrawFormations [0/1]
Default is 0 (off). Set to 1 to draw the AI formations.

variable: ai_DrawGetEnclosingFailures 
type: float
current: 0
help: Set to the number of seconds you want GetEnclosing() failures visualized.  Set to 0 to turn visualization off.

variable: ai_DrawGoals 
type: int
current: 0
help: Draws all the active goal ops debug info.
Usage: ai_DrawGoals [0/1]
Default is 0 (off). Set to 1 to draw the AI goal op debug info.

variable: ai_DrawGrenadeEvents 
type: int
current: 0
help: Debug draw the grenade events the AI system processes. 0=disable, 1=enable.

variable: ai_DrawGroupTactic 
type: int
current: 0
help: draw group tactic: 0 = disabled, 1 = draw simple, 2 = draw complex.

variable: ai_DrawHidespots 
type: int
current: 0
help: Draws latest hide-spot positions for all agents within specified range.

variable: ai_DrawModifiers 
type: int
current: 0
help: Toggles the AI debugging view of navigation modifiers.

variable: ai_DrawModularBehaviorTreeStatistics 
type: int
current: 0
help: Draw modular behavior statistics to the screen.

variable: ai_DrawNode 
type: string
current: none
help: Toggles visibility of named agent's position on AI triangulation.
See also: ai_DrawNodeLinkType and ai_DrawNodeLinkCutoff
Usage: ai_DrawNode [ai agent's name]
 none - switch off
 all - to display nodes of all the AI agents
 player - to display player's node
 AI agent's name - to display node of particular agent

variable: ai_DrawNodeLinkCutoff 
type: float
current: 0
help: Sets the link cutoff value in ai_DrawNodeLinkType. If the link value is more than
ai_DrawNodeLinkCutoff the number gets displayed in green, otherwise red.

variable: ai_DrawNodeLinkType 
type: int
current: 0
help: Sets the link parameter to draw with ai_DrawNode.
Values are:
 0 - pass radius (default)
 1 - exposure
 2 - water max depth
 3 - water min depth

variable: ai_DrawOffset 
type: float
current: 0.1
help: vertical offset during debug drawing (graph nodes, navigation paths, ...)

variable: ai_DrawPath 
type: string
current: none
help: Draws the generated paths of the AI agents. ai_drawoffset is used.
Usage: ai_DrawPath [name]
 none - off (default)
 squad - squadmates
 enemy - all the enemies

variable: ai_DrawPathAdjustment 
type: string
current: 
help: Draws the path adjustment for the AI agents.
Usage: ai_DrawPathAdjustment [name]
Default is none (nobody).

variable: ai_DrawPathFollower 
type: int
current: 0
help: Enables PathFollower debug drawing displaying agent paths and safe follow target.

variable: ai_DrawPerceptionDebugging 
type: int
current: 0
help: Draws indicators showing enemy view intersection with perception modifiers

variable: ai_DrawPerceptionHandlerModifiers 
type: string
current: none
help: Draws perception handler modifiers on a specific AI
Usage: ai_DrawPerceptionHandlerModifiers AIName
Default is 'none'. AIName is the name of the AI

variable: ai_DrawPerceptionIndicators 
type: int
current: 0
help: Draws indicators showing enemy current perception level of player

variable: ai_DrawPerceptionModifiers 
type: int
current: 0
help: Draws perception modifier areas in game mode

variable: ai_DrawPlayerRanges 
type: int
current: 0
help: Draws rings around player to assist in gauging target distance

variable: ai_DrawProbableTarget 
type: int
current: 0
help: Enables/Disables drawing the position of probable target.

variable: ai_DrawRadar 
type: int
current: 0
help: Draws AI radar: 0=no radar, >0 = size of the radar on screen

variable: ai_DrawRadarDist 
type: int
current: 20
help: AI radar draw distance in meters, default=20m.

variable: ai_DrawReadibilities 
type: int
current: 0
help: Draws all the currently active readibilities of the AI agents.
Usage: ai_DrawReadibilities [0/1]
Default is 0 (off). Set to 1 to draw the AI readibilities.

variable: ai_DrawRefPoints 
type: string
current: 
help: Toggles reference points and beacon view for debugging AI.
Usage: ai_DrawRefPoints "all", agent name, group id 
Default is the empty string (off). Indicates the AI reference points by drawing
balls at their positions.

variable: ai_DrawSelectedTargets 
type: int
current: 0
help: [0-1] Enable/Disable the debug helpers showing the AI's selected targets.

variable: ai_DrawShooting 
type: string
current: none
help: Name of puppet to show fire stats

variable: ai_DrawSmartObjects 
type: int
current: 0
help: Draws smart object debug information.
Usage: ai_DrawSmartObjects [0/1]
Default is 0 (off). Set to 1 to draw the smart objects.

variable: ai_DrawSoundEvents 
type: int
current: 0
help: Debug draw the sound events the AI system processes. 0=disable, 1=enable.

variable: ai_DrawStats 
type: int
current: 0
help: Toggles drawing stats (in a table on top left of screen) for AI objects within specified range.
Will display attention target, goal pipe and current goal.

variable: ai_DrawTargets 
type: int
current: 0
help: Distance to display the perception events of all enabled puppets.
Displays target type and priority

variable: ai_DrawTrajectory 
type: int
current: 0
help: Record and draw the actual path taken by the agent specified in ai_StatsTarget.
Path is displayed in aqua, and only a certain length will be displayed, after which
old path gradually disappears as new path is drawn.
0=do not record, 1=record.

variable: ai_DrawType 
type: int
current: -1
help: Display all AI object of specified type. If object is enabled it will be displayed.
with blue ball, otherwise with red ball. Yellow line will represent forward direction of the object.
 <0 - off
 0 - display all the dummy objects
 >0 - type of AI objects to display

variable: ai_DrawUpdate 
type: int
current: 0
help: list of AI forceUpdated entities

variable: ai_DynamicHidespotsEnabled 
type: int
current: 0
help: If enabled, dynamic hidespots are considered when evaluating.

variable: ai_DynamicVolumeUpdateTime 
type: float
current: 0.000175
help: How long (max) to spend updating dynamic volume regions per AI update (in sec)
0 disables dynamic updates. 0.002 is a sensible value

variable: ai_DynamicWaypointUpdateTime 
type: float
current: 0.00035
help: How long (max) to spend updating dynamic waypoint regions per AI update (in sec)
0 disables dynamic updates. 0.0005 is a sensible value

variable: ai_EnableCoolMisses 
type: int
current: 1
help: If turned on, when agents miss the player, they will pick cool objects to shoot at.

variable: ai_EnableORCA 
type: int
current: 1
help: Enable obstacle avoidance system.

variable: ai_EnablePerceptionStanceVisibleRange 
type: int
current: 0
help: Turn on use of max perception range for AI based on player's stance

variable: ai_EnableWarningsErrors 
type: int
current: 1
help: Enable AI warnings and errors: 1 or 0

variable: ai_EnableWaterOcclusion 
type: int
current: 1
help: Enables applying water occlusion to AI target visibility checks

variable: ai_ExtraForbiddenRadiusDuringBeautification 
type: float
current: 1
help: Extra radius added to agents close to forbidden edges during beautification.

variable: ai_ExtraRadiusDuringBeautification 
type: float
current: 0.2
help: Extra radius added to agents during beautification.

variable: ai_ExtraVehicleAvoidanceRadiusBig 
type: float
current: 4
help: Value in meters to be added to a big obstacle's own size while computing obstacle
size for purposes of vehicle steering. See also ai_ObstacleSizeThreshold.

variable: ai_ExtraVehicleAvoidanceRadiusSmall 
type: float
current: 0.5
help: Value in meters to be added to a big obstacle's own size while computing obstacle
size for purposes of vehicle steering. See also ai_ObstacleSizeThreshold.

variable: ai_FilterAgentName 
type: string
current: 
help: Only draws the AI info of the agent with the given name.
Usage: ai_FilterAgentName name
Default is none (draws all of them if ai_debugdraw is on)


variable: ai_FlowNodeAlertnessCheck 
type: int
current: 1
help: Enable the alertness check in AI flownodes

variable: ai_ForceAGAction 
type: string
current: 0
help: Forces all AI characters to specified AG action input. 0 to disable.


variable: ai_ForceAGSignal 
type: string
current: 0
help: Forces all AI characters to specified AG signal input. 0 to disable.


variable: ai_ForceAllowStrafing 
type: int
current: -1
help: Forces all AI characters to use/not use strafing (-1 disables)

variable: ai_ForceLookAimTarget 
type: string
current: none
help: Forces all AI characters to use/not use a fixed look/aim target
none disables
x, y, xz or yz sets it to the appropriate direction
otherwise it forces looking/aiming at the entity with this name (no name -> (0, 0, 0))

variable: ai_ForcePosture 
type: string
current: 0
help: Forces all AI characters to specified posture. 0 to disable.


variable: ai_ForceSerializeAllObjects 
type: int
current: 0
help: Serialize all AI objects (ignore NO_SAVE flag).

variable: ai_ForceStance 
type: int
current: -1
help: Forces all AI characters to specified stance:
Disable = -1, Stand = 0, Crouch = 1, Prone = 2, Relaxed = 3, Stealth = 4, Cover = 5, Swim = 6, Zero-G = 7

variable: ai_IgnoreBulletRainStimulus 
type: int
current: 0
help: Have the Perception Handler ignore all bullet rain stimulus always

variable: ai_IgnorePlayer 
type: int
current: 0
help: Makes AI ignore the player.
Usage: ai_IgnorePlayer [0/1]
Default is 0 (off). Set to 1 to make AI ignore the player.
Used with ai_DebugDraw enabled.

variable: ai_IgnoreSoundStimulus 
type: int
current: 0
help: Have the Perception Handler ignore all sound stimulus always

variable: ai_IgnoreVisibilityChecks 
type: int
current: 0
help: Makes certain visibility checks (for teleporting etc) return false.

variable: ai_IgnoreVisualStimulus 
type: int
current: 0
help: Have the Perception Handler ignore all visual stimulus always

variable: ai_InterestSystem 
type: int
current: 1
help: Enable interest system

variable: ai_InterestSystemCastRays 
type: int
current: 1
help: Makes the Interest System check visibility with rays

variable: ai_IntersectionTesterQuota 
type: int
current: 12
help: Amount of deferred intersection tests allowed to be cast per frame!

variable: ai_IslandConnectionsSystemProfileMemory 
type: int
current: 0
help: Enables/Disables the memory profile for the island connections system.

variable: ai_LayerSwitchDynamicLinkBump 
type: float
current: 8
help: Multiplier for the dynamic link update budget when layer switch occurs.

variable: ai_LayerSwitchDynamicLinkBumpDuration 
type: int
current: 60
help: Duration of the dynamic link update budget bump in frames.

variable: ai_LobThrowMinAllowedDistanceFromFriends 
type: float
current: 15
help: Minimum distance a grenade (or any object thrown using a lob) should land from mates to accept the throw trajectory.

variable: ai_LobThrowPercentageOfDistanceToTargetUsedForInaccuracySimulation 
type: float
current: 0
help: This value identifies percentage of the distance to the target that will be used to simulate human inaccuracy with parabolic throws.

variable: ai_LobThrowTimePredictionForFriendPositions 
type: float
current: 2
help: Time frame used to predict the next position of moving mates to score the landing position of the lob throw

variable: ai_LobThrowUseRandomForInaccuracySimulation 
type: int
current: 0
help: Uses random variation for simulating inaccuracy in the lob throw.

variable: ai_Locate 
type: string
current: none
help: Indicates position and some base states of specified objects.
It will pinpoint position of the agents; it's name; it's attention target;
draw red cone if the agent is allowed to fire; draw purple cone if agent is pressing trigger.
 none - off
 squad - squadmates
 enemy - all the enemies
 groupID - members of specified group

variable: ai_LogConsoleVerbosity 
type: int
current: 0
help: None = 0, progress/errors/warnings = 1, event = 2, comment = 3

variable: ai_LogFileVerbosity 
type: int
current: 1
help: None = 0, progress/errors/warnings = 1, event = 2, comment = 3

variable: ai_LogModularBehaviorTreeExecutionStacks 
type: int
current: 0
help: [0-2] Enable/Disable logging of the execution stacks of modular behavior trees to individual files in the MBT_Logs directory.
0 - Off
1 - Log execution stacks of only the currently selected agent
2 - Log execution stacks of all currently active agents

variable: ai_LogSignals 
type: int
current: 0
help: Logs all the signals received in CAIActor::NotifySignalReceived.

variable: ai_MinActorDynamicObstacleAvoidanceRadius 
type: float
current: 0.6
help: Minimum value in meters to be added to the obstacle's own size for actors
(pathRadius property can override it if bigger)

variable: ai_MNMDebugAccessibility 
type: int
current: 0
help: [0-1] Display navigation reachable areas in blue and not reachable areas in red

variable: ai_MNMEditorBackgroundUpdate 
type: int
current: 1
help: [0-1] Enable/Disable editor background update of the Navigation Meshes

variable: ai_MNMPathfinderConcurrentRequests 
type: int
current: 4
help: Defines the amount of concurrent pathfinder requests that can be served at the same time.

variable: ai_MNMPathFinderDebug 
type: int
current: 0
help: [0-1] Enable/Disable debug draw statistics on pathfinder load

variable: ai_MNMPathfinderMT 
type: int
current: 1
help: Enable/Disable Multi Threading for the pathfinder.

variable: ai_MNMPathfinderPositionInTrianglePredictionType 
type: int
current: 1
help: Defines which type of prediction for the point inside each triangle used by the pathfinder heuristic to search for the path with minimal cost.
0 - Triangle center.
1 - Advanced prediction.


variable: ai_MNMPathFinderQuota 
type: float
current: 0.001
help: Set path finding frame time quota in seconds (Set to 0 for no limit)

variable: ai_MNMProfileMemory 
type: int
current: 0
help: [0-1] Display navigation system memory statistics

variable: ai_MNMRaycastImplementation 
type: int
current: 1
help: Defines which type of raycast implementation to use on the MNM meshes.0 - Old one. This version will be deprecated as it sometimes does not handle correctly the cases where the ray coincides with triangle egdes, which has been fixed in the new version.
1 - New one.
Any other value is used for the new one

variable: ai_ModularBehaviorTree 
type: int
current: 1
help: [0-1] Enable/Disable the usage of the modular behavior tree system.

variable: ai_NavGenThreadJobs 
type: int
current: 1
help: Number of tile generation jobs per thread per frame.
Usage: ai_NavGenThreadJobs [1+]
Default is 1. The more you have, the faster it will go but the frame rate will drop while it works.
Recommendations:
 Fast machine [10]
 Slow machine [4]
 Smooth [1]


variable: ai_NavigationSystemMT 
type: int
current: 1
help: Enables navigation information updates on a separate thread.
Usage: ai_NavigationSystemMT [0/1]
Default is 1 (on)
0 - off
1 - on


variable: ai_NetworkDebug 
type: int
current: 0
help: Toggles the AI network debug.
Usage: ai_NetworkDebug [0/1]
Default is 0 (off). ai_NetworkDebug is used to direct DebugDraw information 
from the server to the client.

variable: ai_NoUpdate 
type: int
current: 0
help: Disables AI system update when 1

variable: ai_ObstacleSizeThreshold 
type: float
current: 1.2
help: Obstacle size in meters that differentiates small obstacles from big ones so that vehicles can ignore the small ones

variable: ai_OutputPersonalLogToConsole 
type: int
current: 0
help: Output the personal log messages to the console.

variable: ai_OverlayMessageDuration DUMPTODISK
type: float
current: 5
help: How long (seconds) to overlay AI warnings/errors

variable: ai_PathfinderAvoidanceCostForGroupMates 
type: int
current: 2
help: Cost used in the heuristic calculation for the avoidance of the group mates's positions.

variable: ai_PathfinderDangerCostForAttentionTarget 
type: int
current: 5
help: Cost used in the heuristic calculation for the danger created by the attention target position.

variable: ai_PathfinderDangerCostForExplosives 
type: int
current: 2
help: Cost used in the heuristic calculation for the danger created by the position of explosive objects.

variable: ai_PathfinderExplosiveDangerMaxThreatDistance 
type: float
current: 50
help: Range used to decide if evaluate an explosive danger as an actual threat.

variable: ai_PathfinderExplosiveDangerRadius 
type: float
current: 5
help: Range used to evaluate the explosive threats in the path calculation. Outside this range a location is considered safe.

variable: ai_PathfinderGroupMatesAvoidanceRadius 
type: float
current: 4
help: Range used to evaluate the group mates avoidance in the path calculation.

variable: ai_PathfinderUpdateTime 
type: float
current: 0.0005
help: Maximum pathfinder time per AI update

variable: ai_PathfindTimeLimit 
type: float
current: 0.08
help: Specifies how many seconds an individual AI can hold the pathfinder blocked
Usage: ai_PathfindTimeLimit 0.15
Default is 0.08. A lower value will result in more path requests that end in NOPATH -
although the path may actually exist.

variable: ai_PathStringPullingIterations 
type: int
current: 5
help: Defines the number of iteration used for the string pulling operation to simplify the path

variable: ai_PlayerAffectedByLight 
type: int
current: 1
help: Sets if player is affected by light from observable perception checks

variable: ai_PredictivePathFollowing 
type: int
current: 1
help: Sets if AI should use the predictive path following if allowed by the type's config.

variable: ai_ProfileGoals 
type: int
current: 0
help: Toggles timing of AI goal execution.
Usage: ai_ProfileGoals [0/1]
Default is 0 (off). Records the time used for each AI goal (like
approach, run or pathfind) to execute. The longest execution time
is displayed on screen. Used with ai_DebugDraw enabled.

variable: ai_ProneVisibleRange 
type: float
current: 6
help: Max perception range for AI when player is proning

variable: ai_RayCasterQuota 
type: int
current: 12
help: Amount of deferred rays allowed to be cast per frame!

variable: ai_RecordCommunicationStats 
type: int
current: 0
help: Turns on/off recording of communication stats to a log.
Usage: ai_RecordCommunicationStats [0/1]


variable: ai_Recorder 
type: int
current: 0
help: Sets AI Recorder mode. Default is 0 - off.

variable: ai_Recorder_Auto 
type: int
current: 0
help: Auto record the AI when in Editor mode game


variable: ai_Recorder_File 
type: string
current: 
help: Custom filename for ai_Recording commands. If empty, a name will be generated.
Usage: ai_Recorder_File [name]


variable: ai_RecordLog 
type: int
current: 0
help: log all the AI state changes on stats_target

variable: ai_RODAliveTime 
type: float
current: 3
help: The base level time the player can survive under fire.

variable: ai_RODAmbientFireInc 
type: float
current: 3
help: Increment for the alive time when the target is within the kill-zone of the target.

variable: ai_RODCombatRangeMod 
type: float
current: 0.55
help: Combat-zone distance = attackRange * combatRangeMod.

variable: ai_RODCoverFireTimeMod 
type: float
current: 1
help: Multiplier for cover fire times set in weapon descriptor.

variable: ai_RODDirInc 
type: float
current: 0
help: Increment how the orientation of the target affects the alive time. 0=disable

variable: ai_RODFakeHitChance 
type: float
current: 0.2
help: Percentage of the missed hits that will instead be hits dealing very little damage.

variable: ai_RODKillRangeMod 
type: float
current: 0.15
help: Kill-zone distance = attackRange * killRangeMod.

variable: ai_RODKillZoneInc 
type: float
current: -4
help: Increment how the target is within the kill-zone of the target.

variable: ai_RODLowHealthMercyTime 
type: float
current: 1.5
help: The amount of time the AI will not hit the target when the target crosses the low health threshold.

variable: ai_RODMoveInc 
type: float
current: 3
help: Increment how the speed of the target affects the alive time (the value is doubled for supersprint). 0=disable

variable: ai_RODReactionDarkIllumInc 
type: float
current: 0.3
help: Increase for reaction time when the target is in dark light condition.

variable: ai_RODReactionDirInc 
type: float
current: 2
help: Increase for the reaction time when the enemy is outside the players FOV or near the edge of the FOV.
The increment is doubled when the target is behind the player.

variable: ai_RODReactionDistInc 
type: float
current: 0.1
help: Increase for the reaction time when the target is in combat-far-zone or warn-zone.
In warn-zone the increase is doubled.

variable: ai_RODReactionLeanInc 
type: float
current: 0.2
help: Increase to the reaction to when the target is leaning.

variable: ai_RODReactionMediumIllumInc 
type: float
current: 0.2
help: Increase for reaction time when the target is in medium light condition.

variable: ai_RODReactionSuperDarkIllumInc 
type: float
current: 0.4
help: Increase for reaction time when the target is in super dark light condition.

variable: ai_RODReactionTime 
type: float
current: 1
help: Uses rate of death as damage control method.

variable: ai_RODStanceInc 
type: float
current: 2
help: Increment how the stance of the target affects the alive time, 0=disable.
The base value is for crouch, and it is doubled for prone.
The crouch inc is disable in kill-zone and prone in kill and combat-near -zones

variable: ai_SightRangeDarkIllumMod 
type: float
current: 0.5
help: Multiplier for sightrange when the target is in dark light condition.

variable: ai_SightRangeMediumIllumMod 
type: float
current: 0.8
help: Multiplier for sightrange when the target is in medium light condition.

variable: ai_SightRangeSuperDarkIllumMod 
type: float
current: 0.25
help: Multiplier for sightrange when the target is in super dark light condition.

variable: ai_SimpleWayptPassability 
type: int
current: 1
help: Use simplified and faster passability recalculation for human waypoint links where possible.

variable: ai_SmartPathFollower_decelerationHuman 
type: float
current: 7.75
help: Deceleration multiplier for non-vehicles

variable: ai_SmartPathFollower_decelerationVehicle 
type: float
current: 1
help: Deceleration multiplier for vehicles

variable: ai_SmartPathFollower_LookAheadPredictionTimeForMovingAlongPathRunAndSprint 
type: float
current: 0.25
help: Defines the time frame the AI is allowed to look ahead while moving strictly along a path to decide whether to cut towards the next point. (Run and Sprint only)


variable: ai_SmartPathFollower_LookAheadPredictionTimeForMovingAlongPathWalk 
type: float
current: 0.5
help: Defines the time frame the AI is allowed to look ahead while moving strictly along a path to decide whether to cut towards the next point. (Walk only)


variable: ai_SmartPathFollower_useAdvancedPathShortcutting 
type: int
current: 1
help: Enables a more failsafe way of preventing the AI to shortcut through obstacles (0 = disable, any other value = enable)

variable: ai_SmartPathFollower_useAdvancedPathShortcutting_debug 
type: int
current: 0
help: Show debug lines for when CVar ai_SmartPathFollower_useAdvancedPathShortcutting_debug is enabled

variable: ai_SOMSpeedCombat 
type: float
current: 0.15
help: Time before the AI will see the enemy while alarmed.
Usage: ai_SOMSpeedCombat 0.15
Default is 0.15. A lower value causes the AI to react to the enemy faster.

variable: ai_SOMSpeedRelaxed 
type: float
current: 0.4
help: Time before the AI will see the enemy while relaxed.
Usage: ai_SOMSpeedRelaxed 0.4
Default is 0.4. A lower value causes the AI to react to the enemy faster.

variable: ai_SoundPerception 
type: int
current: 1
help: Toggles AI sound perception.
Usage: ai_SoundPerception [0/1]
Default is 1 (on). Used to prevent AI from hearing sounds for
debugging purposes. Works with ai_DebugDraw enabled.

variable: ai_StatsDisplayMode 
type: int
current: 0
help: Select display mode for the AI stats manager
Usage: 0 - Hidden, 1 - Show


variable: ai_StatsTarget 
type: string
current: none
help: Focus debugging information on a specific AI
Display current goal pipe, current goal, subpipes and agentstats information for the selected AI agent.
Long green line will represent the AI forward direction (game forward).
Long red/blue (if AI firing on/off) line will represent the AI view direction.
Usage: ai_StatsTarget AIName
Default is 'none'. AIName is the name of the AI
on which to focus.

variable: ai_SteepSlopeAcrossValue 
type: float
current: 0.6
help: Indicates slope value that is borderline-walkable across.
Usage: ai_SteepSlopeAcrossValue 0.8
Default is 0.6 Zero means flat. Infinity means vertical. Set it greater than ai_SteepSlopeUpValue

variable: ai_SteepSlopeUpValue 
type: float
current: 1
help: Indicates slope value that is borderline-walkable up.
Usage: ai_SteepSlopeUpValue 0.5
Default is 1.0 Zero means flat. Infinity means vertical. Set it smaller than ai_SteepSlopeAcrossValue

variable: ai_SystemUpdate 
type: int
current: 1
help: Toggles the regular AI system update.
Usage: ai_SystemUpdate [0/1]
Default is 1 (on). Set to 0 to disable ai system updating.

variable: ai_TacticalPointsDebugDrawMode DUMPTODISK
type: int
current: 1
help: Debugging draw mode: 1=sphere transparency, 2=sphere size

variable: ai_TacticalPointsDebugFadeMode DUMPTODISK
type: int
current: 2
help: Debugging fade mode: 1=vanish, 2=alpha fade, 3=blink

variable: ai_TacticalPointsDebugScaling DUMPTODISK
type: float
current: 1
help: Scale the size of debugging spheres for visibility

variable: ai_TacticalPointsDebugTime DUMPTODISK
type: float
current: 5
help: Time to display debugging spheres for (if not 'persistent'

variable: ai_TacticalPointsWarnings DUMPTODISK
type: int
current: 1
help: Toggles TPS Warnings on and off

variable: ai_TacticalPointUpdateTime 
type: float
current: 0.0005
help: Maximum allowed update time in main AI thread for Tactical Point System
Usage: ai_TacticalPointUpdateTime <number>
Default is 0.0003

variable: ai_TargetTracking 
type: int
current: 1
help: Enable/disable target tracking. 0=disable, any other value = Enable

variable: ai_TargetTracks_GlobalTargetLimit 
type: int
current: 0
help: Global override to control the number of agents that can actively target another agent (unless there is no other choice)
A value of 0 means no global limit is applied. If the global target limit is less than the agent's target limit, the global limit is used.

variable: ai_UpdateAllAlways 
type: int
current: 0
help: If non-zero then over-rides the auto-disabling of invisible/distant AI

variable: ai_UpdateInterval 
type: float
current: 0.13
help: In seconds the amount of time between two full updates for AI  
Usage: ai_UpdateInterval <number>
Default is 0.1. Number is time in seconds

variable: ai_UpdateProxy 
type: int
current: 1
help: Toggles update of AI proxy (model).
Usage: ai_UpdateProxy [0/1]
Default is 1 (on). Updates proxy (AI representation in game)
set to 0 to disable proxy updating.

variable: ai_UseCalculationStopperCounter 
type: int
current: 0
help: Uses a (calibrated) counter instead of time in AI updates

variable: ai_UseSimplePathfindingHeuristic 
type: int
current: 0
help: Toggles the AI using a straight simple distance heuristic for debugging.
Usage: ai_UseSimpleHeuristic [0/1]

variable: ai_UseSmartPathFollower 
type: int
current: 1
help: Enables Smart PathFollower (default: 1).

variable: ai_UseSmartPathFollower_AABB_based 
type: int
current: 1
help: Enables Smart PathFollower to use AABB checks and other optimizations

variable: ai_UseSmartPathFollower_LookAheadDistance 
type: float
current: 10
help: LookAheadDistance of SmartPathFollower

variable: ai_VisionMapNumberOfPVSUpdatesPerFrame 
type: int
current: 1
help: 

variable: ai_VisionMapNumberOfVisibilityUpdatesPerFrame 
type: int
current: 1
help: 

variable: ai_WaterOcclusion 
type: float
current: 0.5
help: scales how much water hides player from AI

variable: az_Asset_EnableAsyncMeshLoading 
type: int
current: 0
help: Enables asynchronous loading of legacy mesh formats

variable: ban_timeout DUMPTODISK
type: int
current: 30
help: Ban timeout in minutes

variable: br_breakmaxworldsize 
type: float
current: 10000
help: The maximum value used for breakage world positions

variable: br_breakworldoffsetx 
type: float
current: 0
help: Break world origin

variable: br_breakworldoffsety 
type: float
current: 0
help: Break world origin

variable: broadcast_ClientID 
type: string
current: 
help: The Client-ID to include in the request header.

variable: broadcast_Endpoint 
type: string
current: https://api.twitch.tv/kraken/
help: The base endpoint for BroadcastAPI.

variable: c_shakeMult 
type: float
current: 1
help: 

variable: ca_AllowMultipleEffectsOfSameName 
type: int
current: 1
help: Allow a skeleton animation to spawn more than one instance of an effect with the same name on the same instance.

variable: ca_AnimWarningLevel DUMPTODISK
type: int
current: 3
help: if you set this to 0, there won't be any
frequest warnings from the animation system

variable: ca_ApplyJointVelocitiesMode 
type: int
current: 2
help: Joint velocity preservation code mode: 0=Disabled, 1=Physics-driven, 2=Animation-driven

variable: ca_AttachmentCullingRation 
type: float
current: 400
help: ration between size of attachment and distance to camera

variable: ca_AttachmentCullingRationMP 
type: float
current: 300
help: ration between size of attachment and distance to camera for MP

variable: ca_AttachmentTextureMemoryBudget 
type: int
current: 100
help: texture budget for e_debugdraw 20 - in megabytes

variable: ca_CharEditModel 
type: string
current: objects/characters/human_male/humanmale_default.cdf
help: 

variable: ca_cloth_air_resistance 
type: float
current: 0
help: "advanced" (more correct) version of damping

variable: ca_cloth_damping 
type: float
current: 0
help: 

variable: ca_cloth_friction 
type: float
current: 0
help: 

variable: ca_cloth_max_safe_step 
type: float
current: 0
help: if a segment stretches more than this (in *relative* units), its length is reinforced

variable: ca_cloth_max_timestep 
type: float
current: 0
help: 

variable: ca_cloth_stiffness 
type: float
current: 0
help: stiffness for stretching

variable: ca_cloth_stiffness_norm 
type: float
current: 0
help: stiffness for shape preservation along normals ("convexity preservation")

variable: ca_cloth_stiffness_tang 
type: float
current: 0
help: stiffness for shape preservation against tilting

variable: ca_cloth_thickness 
type: float
current: 0
help: thickness for collision checks

variable: ca_cloth_vars_reset 
type: int
current: 2
help: 1 - load the values from the next char, 1 - apply normally, 2+ - ignore

variable: ca_ClothBlending 
type: int
current: 1
help: if this is 0 blending with animation is disabled

variable: ca_ClothBypassSimulation 
type: int
current: 0
help: if this is 0 actual cloth simulation is disabled (wrap skinning still works)

variable: ca_ClothMaxChars 
type: int
current: 10
help: max characters with cloth on screen

variable: ca_DBAUnloadRemoveTime 
type: int
current: 4
help: DBA Unload Timing: DBA Remove Time.

variable: ca_DBAUnloadUnregisterTime 
type: int
current: 2
help: DBA Unload Timing: CAF Unregister Time.

variable: ca_DeathBlendTime 
type: float
current: 0.3
help: Specifies the blending time between low-detail dead body skeleton and current skeleton

variable: ca_DebugADIKTargets 
type: int
current: 0
help: If 1, then it will show if there are animation-driven IK-Targets for this model.

variable: ca_DebugAnimationStreaming DUMPTODISK
type: int
current: 0
help: if this is 1, then it shows what animations are streamed in

variable: ca_DebugAnimMemTracking DUMPTODISK
type: int
current: 0
help: if this is 1, then its shows the anim-key allocations

variable: ca_DebugAnimUpdates 
type: int
current: 0
help: shows the amount of skeleton-updates

variable: ca_DebugAnimUsage 
type: int
current: 0
help: shows what animation assets are used in the level

variable: ca_DebugAnimUsageOnFileAccess 
type: int
current: 0
help: shows what animation assets are used in the level, triggered by key fileAccess events

variable: ca_DebugCommandBuffer DUMPTODISK
type: int
current: 0
help: if this is 1, it will print the amount of commands for the blend-buffer

variable: ca_DebugCriticalErrors 
type: int
current: 0
help: if 1, then we stop with a Fatal-Error if we detect a serious issue

variable: ca_DebugFacial 
type: int
current: 0
help: Debug facial playback info

variable: ca_DebugFacialEyes 
type: int
current: 0
help: Debug facial eyes info

variable: ca_DebugModelCache 
type: int
current: 0
help: shows what models are currently loaded and how much memory they take

variable: ca_DebugSegmentation 
type: int
current: 0
help: if set to 1, we can see the timing and the segment-counter of all assets in a BSpace

variable: ca_DebugSkeletonEffects 
type: int
current: 0
help: If true, dump log messages when skeleton effects are handled.

variable: ca_DebugSWSkinning DUMPTODISK
type: int
current: 0
help: if this is 1, then we will see a green wireframe on top of software skinned meshes

variable: ca_DecalSizeMultiplier 
type: float
current: 1
help: The multiplier for the decal sizes

variable: ca_disable_thread DUMPTODISK
type: int
current: 1
help: TEMP Disable Animation Thread.

variable: ca_DisableAnimationUnloading 
type: int
current: 0
help: Disable Animation Unloading.

variable: ca_DisableAuxPhysics 
type: int
current: 0
help: disable simulation of character ropes and cloth

variable: ca_DrawAimIKVEGrid 
type: int
current: 0
help: if set to 1, we will the the grid with the virtual examples

variable: ca_DrawAimPoses 
type: int
current: 0
help: draws the wireframe of the aim poses

variable: ca_DrawAllSimulatedSockets 
type: int
current: 0
help: if set to 1, the own bounding box of the character is drawn

variable: ca_DrawAttachmentOBB 
type: int
current: 0
help: if this is 0, will not draw the attachments objects

variable: ca_DrawAttachmentProjection 
type: int
current: 0
help: if this is 0, will not draw the attachment projections

variable: ca_DrawAttachments 
type: int
current: 1
help: if this is 0, will not draw the attachments objects

variable: ca_DrawBaseMesh 
type: int
current: 1
help: if this is 0, will not draw the characters

variable: ca_DrawBBox 
type: int
current: 0
help: if set to 1, the own bounding box of the character is drawn

variable: ca_DrawBinormals 
type: int
current: 0
help: draws the binormals of the rendered character

variable: ca_DrawCC 
type: int
current: 1
help: if this is 0, will not draw the CC characters

variable: ca_DrawCGA 
type: int
current: 1
help: if this is 0, will not draw the CGA characters

variable: ca_DrawCHR 
type: int
current: 1
help: if this is 0, will not draw the CHR characters

variable: ca_DrawCloth 
type: int
current: 1
help: bitfield: 2 shows particles, 4 shows proxies, 6 shows both

variable: ca_DrawDecalsBBoxes 
type: int
current: 0
help: if set to 1, the decals bboxes are drawn

variable: ca_DrawEmptyAttachments 
type: int
current: 0
help: draws a wireframe cube if there is no object linked to an attachment

variable: ca_DrawLocator 
type: int
current: 0
help: if this is 1, we will draw the body and move-direction. If this is 2, we will also print out the move direction

variable: ca_DrawLookIK 
type: int
current: 0
help: draws a visualization of look ik

variable: ca_DrawNormals 
type: int
current: 0
help: draws the normals of the rendered character

variable: ca_DrawPose 
type: string
current: 
help: 

variable: ca_DrawPositionPost 
type: int
current: 0
help: draws the world position of the character (after update)

variable: ca_DrawSkeleton 
type: int
current: 0
help: if set to 1, the skeleton is drawn

variable: ca_DrawTangents 
type: int
current: 0
help: draws the tangents of the rendered character

variable: ca_DrawVEGInfo 
type: float
current: 0
help: if set to 1, the VEG debug info is drawn

variable: ca_DrawWireframe 
type: int
current: 0
help: draws a wireframe on top of the rendered character

variable: ca_DumpUsedAnims 
type: int
current: 0
help: writes animation asset statistics to the disk

variable: ca_eyes_procedural 
type: int
current: 1
help: Enables/Disables procedural eyes animation

variable: ca_FacialAnimationRadius 
type: float
current: 30
help: Maximum distance at which facial animations are updated - handles zooming correctly

variable: ca_FilterJoints 
type: string
current: 
help: 

variable: ca_ForceUpdateSkeletons 
type: int
current: 0
help: Always update all skeletons, even if not visible.

variable: ca_KeepModels 
type: int
current: 0
help: If set to 1, will prevent models from unloading from memory
upon destruction of the last referencing character

variable: ca_lipsync_debug 
type: int
current: 0
help: Enables facial animation debug draw

variable: ca_lipsync_phoneme_crossfade 
type: int
current: 70
help: Cross fade time between phonemes in milliseconds

variable: ca_lipsync_phoneme_offset 
type: int
current: 20
help: Offset phoneme start time by this value in milliseconds

variable: ca_lipsync_phoneme_strength 
type: float
current: 1
help: LipSync phoneme strength

variable: ca_lipsync_vertex_drag 
type: float
current: 1.2
help: Vertex drag coefficient when blending morph targets

variable: ca_LoadUncompressedChunks 
type: int
current: 0
help: If this 1, then uncompressed chunks prefer compressed while loading

variable: ca_LockFeetWithIK 
type: int
current: 1
help: If this is set to 1, then we lock the feet to prevent sliding when additive animations are used

variable: ca_MemoryDefragEnabled 
type: int
current: 1
help: Enables defragmentation of anim data

variable: ca_MemoryDefragPoolSize 
type: int
current: 67108864
help: Sets the upper limit on the defrag pool size

variable: ca_MemoryUsageLog 
type: int
current: 0
help: enables a memory usage log

variable: ca_MinInPlaceCAFStreamSize 
type: int
current: 131072
help: min size a caf should be for in-place streaming

variable: ca_MotionBlurMovementThreshold 
type: float
current: 0
help: "advanced" Set motion blur movement threshold for discarding skinned object

variable: ca_NoAnim 
type: int
current: 0
help: the animation isn't updated (the characters remain in the same pose)

variable: ca_ParametricPoolSize 
type: int
current: 64
help: Size of the parametric pool

variable: ca_physicsProcessImpact DUMPTODISK
type: int
current: 1
help: Process physics impact pulses.

variable: ca_PrecacheAnimationSets 
type: int
current: 0
help: Enable Precaching of Animation Sets per Character.

variable: ca_PreloadAllCAFs 
type: int
current: 0
help: Preload all CAFs during level preloading.

variable: ca_ReloadAllCHRPARAMS 
type: int
current: 0
help: reload all CHRPARAMS

variable: ca_SaveAABB 
type: int
current: 0
help: if the AABB is invalid, replace it by the default AABB

variable: ca_SerializeSkeletonAnim 
type: int
current: 0
help: Turn on CSkeletonAnim Serialization.

variable: ca_SnapToVGrid 
type: int
current: 0
help: if set to 1, we snap the control parameter to the closest VCell

variable: ca_StoreAnimNamesOnLoad 
type: int
current: 0
help: stores the names of animations during load to allow name lookup for debugging

variable: ca_StreamCHR 
type: int
current: 1
help: Set to enable CHR streaming

variable: ca_StreamDBAInPlace 
type: int
current: 1
help: Set to stream DBA files in place

variable: ca_thread DUMPTODISK
type: int
current: 1
help: If >0 enables Animation Multi-Threading.

variable: ca_thread0Affinity DUMPTODISK
type: int
current: 5
help: Affinity of first Animation Thread.

variable: ca_thread1Affinity DUMPTODISK
type: int
current: 3
help: Affinity of second Animation Thread.

variable: ca_UnloadAnimationCAF DUMPTODISK
type: int
current: 1
help: unloading streamed CAFs as soon as they are not used

variable: ca_UnloadAnimationDBA 
type: int
current: 1
help: if 1, then unload DBA if not used

variable: ca_useADIKTargets 
type: int
current: 1
help: Use Animation Driven Ik Targets.

variable: ca_UseAimIK 
type: int
current: 1
help: If this is set to 1, then we are adding a look-at animation to the skeleton

variable: ca_UseAssetDefinedLod 
type: int
current: 0
help: Lowers render LODs for characters with respect to "consoles_lod0" UDP. Requires characters to be reloaded.

variable: ca_UseDecals 
type: int
current: 0
help: if set to 0, effectively disables creation of decals on characters
2 - alternative method of calculating/building the decals

variable: ca_UseFacialAnimation 
type: int
current: 1
help: If this is set to 1, we can play facial animations

variable: ca_UseIMG_AIM 
type: int
current: 1
help: if 1, then we use the IMG file. In development mode it is suppose to be off

variable: ca_UseIMG_CAF 
type: int
current: 0
help: if 1, then we use the IMG file. In development mode it is suppose to be off

variable: ca_UseJointMasking DUMPTODISK
type: int
current: 1
help: Use Joint Masking to speed up motion decoding.

variable: ca_UseLookIK 
type: int
current: 1
help: If this is set to 1, then we are adding a look-at animation to the skeleton

variable: ca_UseMorph 
type: int
current: 1
help: the morph skinning step is skipped (it's part of overall skinning during rendering)

variable: ca_UsePhysics 
type: int
current: 1
help: the physics is not applied (effectively, no IK)

variable: ca_UseRecoil 
type: int
current: 1
help: If this is set to 1, then we enable procedural recoil

variable: ca_vaBlendCullingDebug 
type: int
current: 0
help: Show Blend Shapes culling difference

variable: ca_vaBlendCullingThreshold 
type: float
current: 1
help: Blend Shapes culling threshold

variable: ca_vaBlendEnable 
type: int
current: 1
help: Enables Vertex Animation blends

variable: ca_vaBlendPostSkinning 
type: int
current: 0
help: Perform Vertex Animation blends post skinning

variable: ca_vaEnable 
type: int
current: 1
help: Enables Vertex Animation

variable: ca_Validate 
type: int
current: 0
help: if set to 1, will run validation on animation data

variable: ca_vaProfile 
type: int
current: 0
help: Enable Vertex Animation profile

variable: ca_vaScaleFactor 
type: float
current: 1
help: Vertex Animation Weight Scale Factor

variable: ca_vaSkipVertexAnimationLOD 
type: int
current: 0
help: Skip LOD 0 for characters using vertex animation

variable: ca_vaUpdateTangents 
type: int
current: 1
help: Update Tangents on SKIN attachments that have the vertex color blue channel set to 255 and 8 weights

variable: capture_buffer 
type: int
current: 0
help: Buffer to capture when capture_frames is enabled.
0=Color
1=Color with Alpha (requires capture_file_format=tga)

variable: capture_file_format 
type: string
current: jpg
help: Specifies file format of captured files (jpg, tga, tif).

variable: capture_file_name 
type: string
current: 
help: If set, specifies the path and name to use for the captured frame

variable: capture_file_prefix 
type: string
current: 
help: If set, specifies the prefix to use for the captured frame instead of the default 'Frame'.

variable: capture_folder 
type: string
current: CaptureOutput
help: Specifies sub folder to write captured frames.

variable: capture_frame_once 
type: int
current: 0
help: Makes capture single frame only

variable: capture_frames 
type: int
current: 0
help: Enables capturing of frames. 0=off, 1=on

variable: chatPlay_ClientID 
type: string
current: 
help: The Client-ID for making ChatPlay API requests.

variable: chatPlay_Enabled 
type: int
current: 1
help: Set to 0 to disable ChatPlay.

variable: chatPlay_IRCPorts 
type: string
current: 1:6667;3:80
help: The list of ports and their priorities used for connecting to Twitch IRC.

variable: chatPlay_IRCSSLPorts 
type: string
current: -1:6697;-1:443
help: The list of ports and their priorities used for connecting to Twitch IRC over SSL.

variable: chatPlay_Password 
type: string
current: blah
help: The password for ChatPlay to log into the IRC with.

variable: chatPlay_ServerListEndpoint 
type: string
current: tmi.twitch.tv
help: The API's server address used for retrieving chat server IPs and ports.

variable: chatPlay_UserName 
type: string
current: justinfan12345
help: The username for ChatPlay to log into the IRC with.

variable: chatPlay_WebsocketPorts 
type: string
current: 2:80
help: The list of ports and their priorities used for connecting to Twitch IRC over websockets.

variable: chatPlay_WebsocketSSLPorts 
type: string
current: -1:443
help: The list of ports and their priorities used for connecting to Twitch IRC over secure websockets.

variable: cl_AISystem REQUIRE_APP_RESTART
type: int
current: 0
help: Load and use the AI system on the client

variable: cl_bandwidth 
type: int
current: 50000
help: Bit rate on client

variable: cl_camera_noise 
type: float
current: -1
help: Adds hand-held like camera noise to the camera view. 
 The higher the value, the higher the noise.
 A value <= 0 disables it.

variable: cl_camera_noise_freq 
type: float
current: 2.53262
help: Defines camera noise frequency for the camera view. 
 The higher the value, the higher the noise.

variable: cl_clientport DUMPTODISK
type: int
current: 0
help: Client port

variable: cl_comment 
type: int
current: 0
help: Hide/Unhide comments in game-mode

variable: cl_DefaultNearPlane 
type: float
current: 0.2
help: The default camera near plane. 

variable: cl_DisableHUDText 
type: int
current: 0
help: Force disable all output from HUD Debug text nodes

variable: cl_ETColorOverrideB DUMPTODISK
type: float
current: 1
help: Global color override (BLUE)

variable: cl_ETColorOverrideEnable DUMPTODISK
type: int
current: 0
help: Global color override

variable: cl_ETColorOverrideG DUMPTODISK
type: float
current: 1
help: Global color override (GREEN)

variable: cl_ETColorOverrideR DUMPTODISK
type: float
current: 1
help: Global color override (RED)

variable: cl_ETFontSizeMultiplier DUMPTODISK
type: float
current: 1
help: Global font size multiplier

variable: cl_ETHideAIDebug DUMPTODISK
type: int
current: 0
help: Hide AI debug tags

variable: cl_ETHideAll DUMPTODISK
type: int
current: 0
help: Hide all tags (overrides all other options)

variable: cl_ETHideBehaviour DUMPTODISK
type: int
current: 0
help: Hide AI behavior tags

variable: cl_ETHideFlowgraph DUMPTODISK
type: int
current: 0
help: Hide tags created by flowgraph

variable: cl_ETHideReadability DUMPTODISK
type: int
current: 0
help: Hide AI readability tags

variable: cl_ETHideScriptBind DUMPTODISK
type: int
current: 0
help: Hide tags created by Lua script

variable: cl_ETLog DUMPTODISK
type: int
current: 0
help: Logging (0=off, 1=editor.log, 2=editor.log + AIlog.log)

variable: cl_ETMaxDisplayDistance DUMPTODISK
type: float
current: -2
help: Max display distance

variable: cl_initClientActor 
type: int
current: 1
help: Enables actionmap and view setup for the client actor after connection.
Default is 1.


variable: cl_nickname DUMPTODISK
type: string
current: 
help: Nickname for player on connect.

variable: cl_packetRate 
type: int
current: 30
help: Packet rate on client

variable: cl_serveraddr DUMPTODISK
type: string
current: 127.0.0.1
help: Server address

variable: cl_serverpassword DUMPTODISK
type: string
current: 
help: Server password

variable: cl_serverport DUMPTODISK
type: int
current: 30090
help: Server port

variable: cl_useCurrentUserNameAsDefault 
type: int
current: 1
help: Use the current user name instead of the default profile's name

variable: cl_ViewSystemDebug 
type: int
current: 0
help: Sets Debug information of the ViewSystem.

variable: cl_visualLog 
type: int
current: 0
help: Enables Visual Logging.

variable: cl_visualLogFolder 
type: string
current: VisualLog
help: Specifies sub folder to write logs to.

variable: cl_visualLogImageFormat 
type: string
current: tif
help: Specifies file format of captured files (jpg, tga, tif).

variable: cl_visualLogImageScale 
type: float
current: 128
help: Image size. [0-1] = scale value. >1 = actual pixels for image width

variable: cl_voice_recording 
type: int
current: 0
help: Enable client voice recording

variable: cl_voice_volume 
type: float
current: 1
help: Set VOIP playback volume: 0-1

variable: co_coopAnimDebug 
type: int
current: 0
help: Enable Cooperative Animation debug output

variable: co_slideWhileStreaming 
type: int
current: 0
help: Allows the sliding while the anims are being streamed. Otherwise the sliding step while wait until the anims are streaming

variable: co_usenewcoopanimsystem 
type: int
current: 1
help: Uses the new cooperative animation system which works without the animation graph

variable: collision_classes 
type: string
current: 
help: Specifies collision classes

variable: con_debug 
type: int
current: 0
help: Log call stack on every GetCVar call

variable: con_display_last_messages 
type: int
current: 0
help: 

variable: con_line_buffer_size 
type: int
current: 1000
help: 

variable: con_restricted RESTRICTEDMODE
type: int
current: 0
help: 0=normal mode / 1=restricted access to the console

variable: con_showonload 
type: int
current: 0
help: Show console on level loading

variable: connect_repeatedly_num_attempts 
type: int
current: 5
help: the number of attempts to connect that connect_repeatedly tries

variable: connect_repeatedly_time_between_attempts 
type: float
current: 10
help: the time between connect attempts for connect_repeatedly

variable: CV_r_AntialiasingModeEditor 
type: int
current: 1
help: Sets antialiasing modes to editing mode (disables jitter on modes using camera jitter which can cause flickering of helper objects)
Usage: CV_r_AntialiasingModeEditor [0/1]

variable: cvDoVerboseWindowTitle 
type: int
current: 0
help: 

variable: d3d11_CBUpdateStats 
type: int
current: 0
help: Logs constant buffer updates statistics.

variable: d3d11_debugBreakOnce 
type: int
current: 1
help: If enabled, D3D debug runtime break on message/error will be enabled only for 1 frame since last change.


variable: d3d11_debugBreakOnMsgID 
type: string
current: 0
help: List of D3D debug runtime messages to break on.
Usage:
 0                    - no break (default)
 msgID1 msgID2 msgID3 - break whenever a message with one of given IDs occurs
 -1                   - break on any error or corruption message

variable: d3d11_debugMuteMsgID 
type: string
current: 388
help: List of D3D debug runtime messages to mute (see DirectX Control Panel for full message ID list)
Use space separated list of IDs, eg. '388 10 544'

variable: d3d11_debugMuteSeverity 
type: int
current: 2
help: Mute whole group of messages of certain severity when D3D debug runtime enabled:
 0 - no severity based mute
 1 - mute INFO only
 2 - mute INFO and WARNING (default)
 3 - mute INFO, WARNING and ERROR
 4 - mute all (INFO, WARNING, ERROR, CORRUPTION)

variable: d3d11_debugruntime 
type: int
current: 0
help: Avoid D3D debug runtime errors for certain cases

variable: d3d11_forcedFeatureLevel REQUIRE_APP_RESTART
type: string
current: 
help: Forces the Direct3D device to target a specific feature level - supported values are:
 10.0
 10.1
 11.0

variable: dlc_directory 
type: string
current: 
help: Holds the path to the directory where DLC should be installed to and read from

variable: ds_AutoReloadScripts 
type: int
current: 0
help: Automatically reload DialogScripts when jumping into GameMode from Editor

variable: ds_LevelNameOverride 
type: string
current: 
help: Load dialog assets from the specified level name instead of the current level name.This var gets cleared after level the level is loaded.

variable: ds_LoadExcelScripts 
type: int
current: 1
help: Load legacy Excel based dialogs.

variable: ds_LoadSoundsSync 
type: int
current: 0
help: Load Sounds synchronously

variable: ds_LogLevel 
type: int
current: 0
help: Set the verbosity of DiaLOG Messages

variable: ds_PrecacheSounds 
type: int
current: 0
help: Precache sounds on Dialog Begin

variable: ds_WarnOnMissingLoc 
type: int
current: 1
help: Warn on Missing Localization Entries

variable: e_3dEngineLogAlways 
type: int
current: 0
help: Set maximum verbosity to 3dengine.dll log messages

variable: e_3dEngineTempPoolSize 
type: int
current: 1024
help: pool size for temporary allocations in kb, requires app restart

variable: e_AutoPrecacheCameraJumpDist 
type: int
current: 16
help: When not 0 - Force full pre-cache of textures, procedural vegetation and shaders
if camera moved for more than X meters in one frame or on new cut scene start

variable: e_AutoPrecacheCgf 
type: int
current: 1
help: Force auto pre-cache of CGF render meshes. 1=pre-cache all meshes around camera. 2=pre-cache only important ones (twice faster)

variable: e_AutoPrecacheCgfMaxTasks 
type: int
current: 8
help: Maximum number of parallel streaming tasks during pre-caching

variable: e_AutoPrecacheTerrainAndProcVeget 
type: int
current: 0
help: Force auto pre-cache of terrain textures and procedural vegetation

variable: e_AutoPrecacheTexturesAndShaders 
type: int
current: 0
help: Force auto pre-cache of general textures and shaders

variable: e_BBoxes 
type: int
current: 0
help: Activates drawing of bounding boxes

variable: e_Brushes 
type: int
current: 1
help: Draw brushes

variable: e_BrushUseTerrainColor 
type: int
current: 0
help: Allow blend with terrain color for brushes

variable: e_CacheNearestCubePicking 
type: int
current: 1
help: Enable caching nearest cube maps probe picking for alpha blended geometry

variable: e_CameraFreeze 
type: int
current: 0
help: Freeze 3dengine camera (good to debug object culling and LOD).
The view frustum is drawn in write frame.
 0 = off
 1 = activated

variable: e_CameraGoto 
type: string
current: 0
help: Move cameras to a certain pos/angle

variable: e_CameraRotationSpeed 
type: float
current: 0
help: Rotate camera around Z axis for debugging

variable: e_CGFMaxFileSize 
type: int
current: -1
help: will refuse to load any cgf larger than the given filesize (in kb)
-1 - 1024 (<0 off (default), >0 filesize limit)

variable: e_CharLodMin 
type: int
current: 0
help: Min LOD for character objects

variable: e_CheckOcclusion 
type: int
current: 1
help: Perform a visible check in check occlusion job

variable: e_CheckOcclusionOutputQueueSize 
type: int
current: 4096
help: Size of queue for data send from check occlusion job

variable: e_CheckOcclusionQueueSize 
type: int
current: 1024
help: Size of queue for data send to check occlusion job

variable: e_CheckOctreeObjectsBoxSize 
type: int
current: 1
help: CryWarning for crazy sized COctreeNode m_objectsBoxes

variable: e_Clouds 
type: int
current: 1
help: Enable clouds rendering

variable: e_CoverageBuffer 
type: int
current: 1
help: Activates usage of software coverage buffer.
1 - camera culling only
2 - camera culling and light-to-object check

variable: e_CoverageBufferAABBExpand 
type: float
current: 0.02
help: expanding the AABB's of the objects to test to avoid z-fighting issues in the Coverage buffer

variable: e_CoverageBufferAccurateOBBTest 
type: int
current: 0
help: Checking of OBB boxes instead of AABB or bounding rects

variable: e_CoverageBufferBias 
type: float
current: 0.05
help: Coverage buffer z-biasing

variable: e_CoverageBufferCullIndividualBrushesMaxNodeSize 
type: int
current: 0
help: 128 - cull only nodes of scene tree and very big brushes
0 - cull all brushes individually

variable: e_CoverageBufferDebug 
type: int
current: 0
help: Display content of main camera coverage buffer

variable: e_CoverageBufferDebugDrawScale 
type: float
current: 1
help: Debug

variable: e_CoverageBufferDebugFreeze 
type: int
current: 0
help: Freezes view matrix/-frustum 

variable: e_CoverageBufferDrawOccluders 
type: int
current: 0
help: Debug draw of occluders for coverage buffer

variable: e_CoverageBufferEarlyOut 
type: int
current: 1
help: preempting occluder rasterization to avoid stalling in the main thread if rendering is faster

variable: e_CoverageBufferEarlyOutDelay 
type: float
current: 3
help: Time in ms that rasterizer is allowed to continue working after early out request

variable: e_CoverageBufferLightsDebugSide 
type: int
current: -1
help: Debug

variable: e_CoverageBufferMaxAddRenderMeshTime 
type: int
current: 2
help: Max time for unlimited AddRenderMesh

variable: e_CoverageBufferNumberFramesLatency 
type: int
current: 2
help: Configures the number of frames of latency between the GPU write of the downsample Z-Target and CPU readback of that target.
0 - Disable CPU readback (For debugging)1 - Coverage buffer uses previous frame's depth information. (Not recommended, CPU may stall waiting on GPU)
2 - Coverage buffer uses two frame old depth. (Default)
3 - Coverage buffer uses three frame old depth information.

variable: e_CoverageBufferOccludersLodRatio 
type: float
current: 0.25
help: Debug

variable: e_CoverageBufferOccludersTestMinTrisNum 
type: int
current: 0
help: Debug

variable: e_CoverageBufferOccludersViewDistRatio 
type: float
current: 1
help: Debug

variable: e_CoverageBufferRastPolyLimit 
type: int
current: 500000
help: maximum amount of polys to rasterize cap, 0 means no limit
default is 500000

variable: e_CoverageBufferReproj 
type: int
current: 6
help: Use re-projection technique on CBuffer, 1 simple reproject, 2 additional hole filling, 4 using ocm mesh for occlusion checking

variable: e_CoverageBufferResolution 
type: int
current: 128
help: Resolution of software coverage buffer

variable: e_CoverageBufferRotationSafeCheck 
type: int
current: 0
help: Coverage buffer safe checking for rotation 0=disabled 1=enabled 2=enabled for out of frustum object

variable: e_CoverageBufferShowOccluder 
type: int
current: 0
help: 1 show only meshes used as occluder, 2 show only meshes not used as occluder

variable: e_CoverageBufferTerrain 
type: int
current: 0
help: Activates usage of coverage buffer for terrain

variable: e_CoverageBufferTerrainExpand 
type: float
current: 0.025
help: expanding the AABB Z axis of terrain to avoid flat terrain flickering

variable: e_CoverageBufferTerrainLodShift 
type: int
current: 2
help: Controls tessellation of terrain mesh

variable: e_CoverageBufferTestMode 
type: int
current: 2
help: Debug

variable: e_CoverageBufferTolerance 
type: int
current: 0
help: amount of visible pixel that will still identify the object as covered

variable: e_CoverageBufferTreeDebug 
type: int
current: 0
help: Debug

variable: e_CoverageBufferVersion 
type: int
current: 2
help: 1 Vladimir's, 2MichaelK's

variable: e_CoverCgfDebug 
type: int
current: 0
help: Shows the cover setups on cfg files

variable: e_CullVegActivation 
type: int
current: 50
help: Vegetation activation distance limit; 0 disables visibility-based culling (= unconditional activation)

variable: e_DebugDraw 
type: int
current: 0
help: Draw helpers with information for each object (same number negative hides the text)
 1: Name of the used cgf, polycount, used LOD
 2: Color coded polygon count
 3: Show color coded LODs count, flashing color indicates no Lod
 4: Display object texture memory usage
 5: Display color coded number of render materials
 6: Display ambient color
 7: Display tri count, number of render materials, texture memory
 8: Free slot
 9: Free slot
10: Render geometry with simple lines and triangles
11: Free slot
12: Free slot
13: Display occlusion amount (used during AO computations). Warning: can take a long time to calculate, depending on level size! 
15: Display helpers
16: Display debug gun
17: Streaming info (buffer sizes)
18: Free slot
19: Physics proxy triangle count
20: Display Character attachments texture memory usage
21: Display animated object distance to camera
22: Display object's current LOD vertex count
23: Display shadow casters in red
----------------debug draw list values. Any of them enable 2d on-screen listing type info debug. Specific values define the list sorting-----------
 100: tri count
 101: verts count
 102: draw calls
 103: texture memory
 104: mesh memory

variable: e_DebugDrawFilter 
type: string
current: 
help: Show a specified text on DebugDraw

variable: e_DebugDrawListBBoxIndex 
type: int
current: 0
help: enables BBOX drawing for the 'n' element of the DebugDrawList (starting by 1.   0 = no bbox drawing).

variable: e_DebugDrawListFilter 
type: string
current: 
help: filter for e_DebugDraw list. Combine object type letters to create the filter
(example: e_DebugDrawListFilter BVC = shows Brushes+Vegetation+Characters). 'all' = no filter.
 B: Brushes
 V: Vegetation
 C: Character
 S: StatObj (non characters)


variable: e_DebugDrawListSize 
type: int
current: 24
help: num objects in the list for e_DebugDraw list infodebug

variable: e_DebugDrawShowOnlyCompound 
type: int
current: 0
help: e_DebugDraw shows only Compound (less efficient) static meshes

variable: e_DebugDrawShowOnlyLod 
type: int
current: -1
help: e_DebugDraw shows only objects showing lod X

variable: e_DebugGeomPrep 
type: int
current: 0
help: enable logging of Geom preparation

variable: e_Decals 
type: int
current: 1
help: Activates drawing of decals (game decals and hand-placed)

variable: e_DecalsAllowGameDecals 
type: int
current: 1
help: Allows creation of decals by game (like weapon bullets marks)

variable: e_DecalsClip 
type: int
current: 1
help: Clip decal geometry by decal bbox

variable: e_DecalsDefferedDynamic 
type: int
current: 1
help: 1 - make all game play decals deferred, 2 - make all game play decals non deferred

variable: e_DecalsDefferedDynamicDepthScale 
type: float
current: 4
help: Scale decal projection depth

variable: e_DecalsDefferedDynamicMinSize 
type: float
current: 0.35
help: Convert only dynamic decals bigger than X into deferred

variable: e_DecalsDefferedStatic 
type: int
current: 1
help: 1 - switch all non-planar decals placed by level designer to deferred

variable: e_DecalsForceDeferred 
type: int
current: 0
help: 1 - force to convert all decals to use deferred ones

variable: e_DecalsHitCache 
type: int
current: 1
help: Use smart hit caching for bullet hits (may cause no decals in some cases)

variable: e_DecalsLifeTimeScale 
type: float
current: 2
help: Allows to increase or reduce decals life time for different specs

variable: e_DecalsMaxTrisInObject 
type: int
current: 8000
help: Do not create decals on objects having more than X triangles

variable: e_DecalsMaxUpdatesPerFrame 
type: int
current: 4
help: Maximum number of static decal render mesh updates per frame

variable: e_DecalsMaxValidFrames 
type: int
current: 600
help: Number of frames after which not visible static decals are removed

variable: e_DecalsMerge 
type: int
current: 0
help: Combine pieces of decals into one render call

variable: e_DecalsNeighborMaxLifeTime 
type: float
current: 4
help: If not zero - new decals will force old decals to fade in X seconds

variable: e_DecalsOverlapping 
type: int
current: 1
help: If zero - new decals will not be spawned if the distance to nearest decals less than X

variable: e_DecalsPlacementTestAreaSize 
type: float
current: 0.08
help: Avoid spawning decals on the corners or edges of entity geometry

variable: e_DecalsPlacementTestMinDepth 
type: float
current: 0.05
help: Avoid spawning decals on the corners or edges of entity geometry

variable: e_DecalsPreCreate 
type: int
current: 1
help: Pre-create decals at load time

variable: e_DecalsRange 
type: float
current: 20
help: Less precision for decals outside this range

variable: e_DecalsScissor 
type: int
current: 1
help: Enable decal rendering optimization by using scissor

variable: e_DefaultMaterial 
type: int
current: 0
help: use gray illumination as default

variable: e_DeferredPhysicsEvents 
type: int
current: 1
help: Enable to Perform some physics events deferred as a task/job

variable: e_DeformableObjects 
type: int
current: 1
help: Enable / Disable morph based deformable objects

variable: e_DisplayMemoryUsageIcon 
type: int
current: 1
help: Turns On/Off the memory usage icon rendering: 1 on, 0 off.

variable: e_Dissolve 
type: int
current: 2
help: Objects alphatest_noise_fading out on distance and between lods

variable: e_DissolveDistband 
type: float
current: 3
help: Over how many meters transition takes place

variable: e_DissolveDistMax 
type: float
current: 8
help: At most how near to object MVD dissolve effect triggers (10% of MVD, clamped to this)

variable: e_DissolveDistMin 
type: float
current: 2
help: At least how near to object MVD dissolve effect triggers (10% of MVD, clamped to this)

variable: e_DynamicDistanceShadows 
type: int
current: 1
help: Enable dynamic distance shadows, 0=disable, 1=enable, -1=don't render dynamic distance shadows

variable: e_DynamicLights 
type: int
current: 1
help: Activates dynamic light sources

variable: e_DynamicLightsConsistentSortOrder 
type: int
current: 1
help: Debug

variable: e_DynamicLightsForceDeferred 
type: int
current: 1
help: Convert all lights to deferred (except sun)

variable: e_DynamicLightsFrameIdVisTest 
type: int
current: 1
help: Use based on last draw frame visibility test

variable: e_DynamicLightsMaxCount 
type: int
current: 512
help: Sets maximum amount of dynamic light sources

variable: e_DynamicLightsMaxEntityLights 
type: int
current: 16
help: Set maximum number of lights affecting object

variable: e_Entities 
type: int
current: 1
help: Activates drawing of entities and brushes

variable: e_EntitySuppressionLevel 
type: int
current: 0
help: Defines the level at which entities are spawned.
Entities marked with lower level will not be spawned - 0 means no level.
Usage: e_EntitySuppressionLevel [0-infinity]
Default is 0 (off)

variable: e_Fog 
type: int
current: 1
help: Activates global height/distance based fog

variable: e_FogVolumes 
type: int
current: 1
help: Activates local height/distance based fog volumes

variable: e_FogVolumesTiledInjection 
type: int
current: 1
help: Activates tiled FogVolume density injection

variable: e_FoliageBranchesDamping 
type: float
current: 10
help: Damping of branch ropes

variable: e_FoliageBranchesStiffness 
type: float
current: 100
help: Stiffness of branch ropes

variable: e_FoliageBranchesTimeout 
type: float
current: 4
help: Maximum lifetime of branch ropes (if there are no collisions)

variable: e_FoliageBrokenBranchesDamping 
type: float
current: 15
help: Damping of branch ropes of broken vegetation

variable: e_FoliageStiffness 
type: float
current: 3.2
help: Stiffness of the spongy obstruct geometry

variable: e_FoliageWindActivationDist 
type: float
current: 25
help: If the wind is sufficiently strong, visible foliage in this view dist will be forcefully activated

variable: e_ForceDetailLevelForScreenRes DEPRECATED
type: int
current: 0
help: [DEPRECATED] Force sprite distance and other values used for some specific screen resolution, 0 means current

variable: e_GeomCacheBufferSize 
type: int
current: 128
help: Geometry cache stream buffer upper limit size in MB. Default: 128

variable: e_GeomCacheDebug 
type: int
current: 0
help: Show geometry cache debug overlay. Default: 0

variable: e_GeomCacheDebugDrawMode 
type: int
current: 0
help: Geometry cache debug draw mode
 0 = normal
 1 = only animated meshes
 2 = only static meshes
 3 = debug instancing

variable: e_GeomCacheDebugFilter 
type: string
current: 
help: Set name filter for e_geomCacheDebug

variable: e_GeomCacheDecodeAheadTime 
type: float
current: 0.5
help: Time in seconds that data will be decoded ahead for geom cache streaming. Default: 0.5

variable: e_GeomCacheLerpBetweenFrames 
type: int
current: 1
help: Interpolate between geometry cache frames. Default: 1

variable: e_GeomCacheMaxBufferAheadTime 
type: float
current: 5
help: Time in seconds maximum that data will be buffered ahead for geom cache streaming. Default: 5.0

variable: e_GeomCacheMaxPlaybackFromMemorySize 
type: int
current: 16
help: Maximum size of geometry cache animated data in MB before always streaming from disk ignoring the memory playback flag. Default: 16

variable: e_GeomCacheMinBufferAheadTime 
type: float
current: 2
help: Time in seconds minimum that data will be buffered ahead for geom cache streaming. Default: 2.0

variable: e_GeomCachePreferredDiskRequestSize 
type: int
current: 1024
help: Preferred disk request size for geometry cache streaming in KB. Default: 1024

variable: e_GeomCaches 
type: int
current: 1
help: Activates drawing of geometry caches

variable: e_GI 
type: int
current: 1
help: Enable/disable global illumination. Default: 1 - enabled

variable: e_GsmCastFromTerrain 
type: int
current: 0
help: Cast shadows from terrain

variable: e_GsmDepthBoundsDebug 
type: int
current: 0
help: Debug GSM bounds regions calculation

variable: e_GsmLodsNum 
type: int
current: 5
help: Number of GSM lods (0..5)

variable: e_GsmRange 
type: float
current: 3
help: Size of LOD 0 GSM area (in meters)

variable: e_GsmRangeStep 
type: float
current: 3
help: Range of next GSM lod is previous range multiplied by step

variable: e_GsmStats 
type: int
current: 0
help: Show GSM statistics 0=off, 1=enable debug to the screens

variable: e_HwOcclusionCullingWater 
type: int
current: 1
help: Activates usage of HW occlusion test for ocean

variable: e_JointStrengthScale 
type: float
current: 1
help: Scales the strength of prebroken objects' joints (for tweaking)

variable: e_levelStartupFrameDelay 
type: int
current: 0
help: Set to number of frames to wait after level load before beginning fps measuring

variable: e_levelStartupFrameNum 
type: int
current: 0
help: Set to number of frames to capture for avg fps computation

variable: e_LightVolumes 
type: int
current: 1
help: Allows deferred lighting for registered alpha blended geometry
0 = Off
1 = Enabled
2 = Enabled just for sun light


variable: e_LightVolumesDebug 
type: int
current: 0
help: Display light volumes debug info
0 = Off
1 = Enabled


variable: e_LodCompMaxSize 
type: float
current: 6
help: Affects LOD selection for big objects, small number will switch more objects into lower LOD

variable: e_LodFaceArea 
type: int
current: 1
help: Use geometric mean of faces area to compute LOD

variable: e_LodFaceAreaTargetSize 
type: float
current: 0.005
help: Threshold used for LOD computation.

variable: e_LodMax 
type: int
current: 5
help: Max LOD for objects

variable: e_LodMin 
type: int
current: 0
help: Min LOD for objects

variable: e_LodMinTtris 
type: int
current: 300
help: LODs with less triangles will not be used

variable: e_LodRatio 
type: float
current: 40
help: LOD distance ratio for objects

variable: e_Lods 
type: int
current: 1
help: Load and use LOD models for static geometry

variable: e_LodsForceUse 
type: int
current: 1
help: Force using LODs even if triangle count do not suit

variable: e_MaxDrawCalls 
type: int
current: 0
help: Will not render CGFs past the given amount of drawcalls
(<=0 off (default), >0 draw calls limit)

variable: e_MaxViewDistance 
type: float
current: -1
help: Far clipping plane distance

variable: e_MaxViewDistFullDistCamHeight 
type: float
current: 1000
help: Debug

variable: e_MaxViewDistSpecLerp 
type: float
current: 1
help: 1 - use max view distance set by designer for very high spec
0 - for very low spec
Values between 0 and 1 - will lerp between high and low spec max view distances

variable: e_MergedMeshes 
type: int
current: 1
help: Show runtime merged meshes

variable: e_MergedMeshesActiveDist 
type: float
current: 250
help: Active distance up until merged mesh patches will be streamed in

variable: e_MergedMeshesBulletLifetime 
type: float
current: 0.15
help: MergedMesh Bullet approximations lifetime

variable: e_MergedMeshesBulletScale 
type: float
current: 35
help: MergedMesh Bullet approximations size scale

variable: e_MergedMeshesBulletSpeedFactor 
type: float
current: 0.05
help: MergedMesh Bullet approximations speed factor

variable: e_MergedMeshesClusterVisualization 
type: int
current: 0
help: Activates drawing of clusters calculated around merged mesh type vegetation.
0 = off
1 = runtime areas only (use Y key for temporary drawing of clusters)
2 = runtime areas + clusters around vegetation patches

variable: e_MergedMeshesClusterVisualizationDimension 
type: int
current: 32
help: Area around the camera in which the clusters should be visible. (high number == slow!
Note: max value is 255

variable: e_MergedMeshesDebug 
type: int
current: 0
help: enable debug drawing of runtime merged meshes
2: Show AABB + debug info (position, state, size, visibility)
64: Show the calculated wind
256: Draw colliders of objects influencing the merged meshes
544: Draw spines
1056: Draw simulated spines
2080: Draw spines with LOD info (red/blue)


variable: e_MergedMeshesDeformViewDistMod 
type: float
current: 0.45
help: distance modifier applied to view dist ratios after which deformables stop updating

variable: e_MergedMeshesInstanceDist 
type: float
current: 2
help: Distance fudge factor at which merged meshes turn off animation

variable: e_MergedMeshesInstanceDistShadows 
type: float
current: 4.5
help: Distance fudge factor at which merged meshes turn off shadows

variable: e_MergedMeshesLodRatio 
type: float
current: 3
help: merged meshes lod ratio

variable: e_MergedMeshesOutdoorOnly 
type: int
current: 0
help: MergedMeshes will receive ERF_OUTDOORONLY by default

variable: e_MergedMeshesPool 
type: int
current: 16384
help: amount of mainmeory (in kb) that merged meshes are allowed to sustain

variable: e_MergedMeshesPoolSpines 
type: int
current: 32
help: percentage of the pool for spines

variable: e_MergedMeshesTesselationSupport 
type: int
current: 0
help: Enable or disable support for tessellation on mergedmeshes

variable: e_MergedMeshesUseSpines 
type: int
current: 1
help: MergedMeshes use touchbending

variable: e_MergedMeshesViewDistRatio 
type: float
current: 30
help: merged meshes view dist ratio

variable: e_ObjectLayersActivation 
type: int
current: 1
help: Allow game to activate/deactivate object layers

variable: e_ObjectLayersActivationPhysics 
type: int
current: 1
help: Allow game to create/free physics of objects: 0: Disable; 1: All; 2: Water only.

variable: e_Objects 
type: int
current: 1
help: Render or not all objects

variable: e_ObjectsTreeBBoxes 
type: int
current: 0
help: Debug draw of object tree bboxes

variable: e_ObjFastRegister 
type: int
current: 1
help: Debug

variable: e_ObjQuality 
type: int
current: 4
help: Object detail quality

variable: e_ObjShadowCastSpec 
type: int
current: 4
help: Object shadow casting spec. Only objects with Shadow Cast Spec <= e_ObjShadowCastSpec will cast shadows

variable: e_ObjStats 
type: int
current: 0
help: Show instances count

variable: e_OcclusionCullingViewDistRatio 
type: float
current: 1
help: Skip per object occlusion test for very far objects - culling on tree level will handle it

variable: e_OcclusionLazyHideFrames 
type: int
current: 0
help: Makes less occluson tests, but it takes more frames to detect invisible objects

variable: e_OcclusionVolumes 
type: int
current: 1
help: Enable occlusion volumes(antiportals)

variable: e_OcclusionVolumesViewDistRatio 
type: float
current: 0.05
help: Controls how far occlusion volumes starts to occlude objects

variable: e_OnDemandMaxSize 
type: float
current: 20
help: Specifies the maximum size of vegetation objects that are physicalized on-demand

variable: e_OnDemandPhysics 
type: int
current: 1
help: Turns on on-demand physicalization (0=off, 1=vegetation only[default], 2=brushes only, 3=brushes&vegetation

variable: e_Particles 
type: int
current: 1
help: Activates drawing of particles

variable: e_ParticlesAllowRuntimeLoad 
type: int
current: 1
help: Allow loading of dynamic particle effects at runtime

variable: e_ParticlesAnimBlend 
type: int
current: 1
help: Blend between animated texture frames
Usage: e_ParticlesAnimBlend [0/1/2]
0 = Off
1 = On
2 = Force

variable: e_ParticlesAudio 
type: int
current: 1
help: Toggles audio on particles on or off.
Usage: e_ParticlesAudio [0/1]
0 = Off
1 = On (Default)


variable: e_ParticlesCullAgainstOcclusionBuffer 
type: int
current: 1
help: Cull Particles against the Occlusion Buffer

variable: e_ParticlesCullAgainstViewFrustum 
type: int
current: 1
help: Cull Particles against the view-frustum

variable: e_ParticlesDebug 
type: int
current: 0
help: Particle debug flags: <flags> to set, <flags>+ to add, <flags>- to remove 1 = show basic stats m = show memory usage r = show reiteration, rejection, and collision stats b = draw bounding boxes and labels, show bounding box stats x = show bounding box stats d = force dynamic bounds and update for all emitters c = disable clipping against water and vis area bounds z = freeze particle system

variable: e_ParticlesDumpMemoryAfterMapLoad 
type: int
current: 0
help: Set to 1 to dump particle memory informations after map load

variable: e_ParticlesGI 
type: int
current: 1
help: Apply global illumination to appropriate particle effects
Usage: e_ParticlesGI [0/1/2]
0 = Off
1 = On
2 = Force

variable: e_ParticleShadowsNumGSMs 
type: int
current: 3
help: Number of shadow GSMs used for particle shadows

variable: e_ParticlesIndexPoolSize 
type: int
current: 16
help: Memory Size of Index Pool between Particle and Render Thread

variable: e_ParticlesLightMinColorThreshold 
type: float
current: 0
help: Threshold for minimum particle light color

variable: e_ParticlesLightMinRadiusThreshold 
type: float
current: 0
help: Threshold for minimum particle light radius

variable: e_ParticlesLights 
type: int
current: 1
help: Allows to have light source attached to every particle
0 = Off
1 = Deferred lights


variable: e_ParticlesLightsViewDistRatio 
type: float
current: 256
help: Set particles lights view distance ratio

variable: e_ParticlesLod 
type: float
current: 1
help: Multiplier to particle count

variable: e_ParticlesMaxDrawScreen 
type: float
current: 2
help: Screen size max per particle -- fade out earlier

variable: e_ParticlesMaxScreenFill 
type: float
current: 160
help: Screen size max of total particles to draw

variable: e_ParticlesMinDrawAlpha 
type: float
current: 0.004
help: Alpha cutoff for rendering particles

variable: e_ParticlesMinDrawPixels 
type: float
current: 1
help: Pixel size min per particle -- fade out earlier

variable: e_ParticlesMotionBlur 
type: int
current: 1
help: Motion blur for particles
Usage: e_ParticlesMotionBlur [0/1/2]
0 = Off
1 = On
2 = Force

variable: e_ParticlesObjectCollisions 
type: int
current: 2
help: Enable particle/object collisions for SimpleCollision:
  1 = against static objects only, 2 = dynamic also

variable: e_ParticlesPoolSize 
type: int
current: 16384
help: Particle system pool memory size in KB

variable: e_ParticlesPreload 
type: int
current: 0
help: Enable preloading of all particle effects at the beginning

variable: e_ParticlesProfile 
type: int
current: 0
help: 1 - always show statistics about particle pools usage
2 - disable the warning message when running out of pool memory

variable: e_ParticlesQuality 
type: int
current: 4
help: Particles detail quality

variable: e_ParticlesSerializeNamedFields 
type: int
current: 1
help: Save effects libraries with named fields for future compatibility (compatible with versions >= 24)

variable: e_ParticlesShadows 
type: int
current: 1
help: Shadows on particles
Usage: e_ParticlesShadows [0/1/2]
0 = Off
1 = On
2 = Force

variable: e_ParticlesShowMainThreadUpdates 
type: int
current: 0
help: Render a list of Containers not updated by a job and why

variable: e_ParticlesSoftIntersect 
type: int
current: 1
help: Render appropriate particles with soft intersection
Usage: e_ParticlesSoftIntersect [0/1/2]
0 = Off
1 = On
2 = Force

variable: e_ParticlesSortQuality 
type: int
current: 0
help: Minimum sort quality for new particle insertion:
  0 = basic, 1 = better, 2 = best

variable: e_ParticlesThread 
type: int
current: 1
help: Enable particle threading

variable: e_ParticlesUseLevelSpecificLibs 
type: int
current: 0
help: Allows searching for level-specific version of effects files
0 = Off
1 = Enabled


variable: e_ParticlesVertexPoolSize 
type: int
current: 256
help: Memory Size of Vertex Pool between Particle and Render Thread

variable: e_PermanentRenderObjects 
type: int
current: 0
help: Creates permanent render objects for each render node

variable: e_PhysFoliage 
type: int
current: 2
help: Enables physicalized foliage
1 - only for dynamic objects
2 - for static and dynamic)

variable: e_PhysMinCellSize 
type: int
current: 4
help: Min size of cell in physical entity grid

variable: e_PhysOceanCell 
type: float
current: 0.5
help: Cell size for ocean approximation in physics, 0 assumes flat plane

variable: e_PhysProxyTriLimit 
type: int
current: 10000
help: Maximum allowed triangle count for phys proxies

variable: e_Portals 
type: int
current: 1
help: Activates drawing of visareas content (indoors), values 2,3,4 used for debugging

variable: e_PortalsBigEntitiesFix 
type: int
current: 1
help: Enables special processing of big entities like vehicles intersecting portals

variable: e_PortalsBlend 
type: int
current: 1
help: Blend lights and cubemaps of vis areas connected to portals 0=off, 1=on

variable: e_PortalsMaxRecursion 
type: int
current: 8
help: Maximum number of visareas and portals to traverse for indoor rendering

variable: e_PrecacheLevel 
type: int
current: 0
help: Pre-render objects right after level loading

variable: e_PreloadDecals 
type: int
current: 1
help: Preload all materials for decals

variable: e_PreloadMaterials 
type: int
current: 1
help: Preload level materials from level cache pak and resources list

variable: e_PrepareDeformableObjectsAtLoadTime 
type: int
current: 0
help: Enable to Prepare deformable objects at load time instead on demand, prevents peaks but increases memory usage

variable: e_ProcVegetation 
type: int
current: 1
help: Show procedurally distributed vegetation

variable: e_ProcVegetationMaxCacheLevels REQUIRE_APP_RESTART
type: int
current: 1
help: Number of heightmap quad-tree levels used for vegetation spawning

variable: e_ProcVegetationMaxChunksInCache REQUIRE_APP_RESTART
type: int
current: 128
help: Maximum number of object chunks cached in memory

variable: e_ProcVegetationMaxObjectsInChunk REQUIRE_APP_RESTART
type: int
current: 512
help: Maximum number of instances per chunk

variable: e_ProcVegetationMaxSectorsInCache REQUIRE_APP_RESTART
type: int
current: 16
help: Maximum number of 64x64 meter sectors cached in memory

variable: e_ProcVegetationMaxViewDistance 
type: int
current: 128
help: Maximum distance where procedural objects may be spawn for heightmap quad-tree level 0, every next level multiply it by 2

variable: e_Recursion 
type: int
current: 1
help: If 0 - will skip recursive render calls like render into texture

variable: e_RecursionOcclusionCulling 
type: int
current: 0
help: If 0 - will disable occlusion tests for recursive render calls like render into texture

variable: e_RecursionViewDistRatio 
type: float
current: 0.1
help: Set all view distances shorter by factor of X

variable: e_Render 
type: int
current: 1
help: Enable engine rendering

variable: e_RenderMeshCollisionTolerance 
type: float
current: 0.3
help: Min distance between physics-proxy and rendermesh before collision is considered a hole

variable: e_RenderMeshUpdateAsync 
type: int
current: 1
help: Enables async updating of dynamically updated rendermeshes
0 - performs a synchronous update
1 - performs the update in an async job (default))

variable: e_RNTmpDataPoolMaxFrames 
type: int
current: 16
help: Cache RNTmpData at least for X framres

variable: e_Roads 
type: int
current: 1
help: Activates drawing of road objects

variable: e_Ropes 
type: int
current: 1
help: Turn Rendering of Ropes on/off

variable: e_ScissorDebug 
type: int
current: 0
help: Debug

variable: e_ScreenShot 
type: int
current: 0
help: Make screenshot combined up of multiple rendered frames
(negative values for multiple frames, positive for a a single frame)
 1 highres
 2 360 degree panorama
 3 Map top-down view

see:
  e_ScreenShotWidth, e_ScreenShotHeight, e_ScreenShotQuality, e_ScreenShotMapCenterX,
  e_ScreenShotMapCenterY, e_ScreenShotMapSize, e_ScreenShotMinSlices, e_ScreenShotDebug

variable: e_ScreenShotDebug 
type: int
current: 0
help: 0 off
1 show stitching borders
2 show overlapping areas

variable: e_ScreenShotFileFormat 
type: string
current: tga
help: Set output image file format for hires screen shots. Can be jpg or tga

variable: e_ScreenShotHeight 
type: int
current: 1500
help: used for all type highres screenshots made by e_ScreenShot to define the
height of the destination image, 1500 default

variable: e_ScreenShotMapCamHeight 
type: float
current: 4000
help: param for top-down-view screenshot creation, defining the camera height for screenshots,
see e_ScreenShotMap defines the y position of the bottom right corner of the
screenshot-area on the terrain,
0.0 - 1.0 (1.0 is default)

variable: e_ScreenShotMapCenterX 
type: float
current: 0
help: param for the centerX position of the camera, see e_ScreenShotMap
defines the x position of the top left corner of the screenshot-area on the terrain,
0.0 - 1.0 (0.0 is default)

variable: e_ScreenShotMapCenterY 
type: float
current: 0
help: param for the centerX position of the camera, see e_ScreenShotMap
defines the y position of the top left corner of the screenshot-area on the terrain,
0.0 - 1.0 (0.0 is default)

variable: e_ScreenShotMapOrientation 
type: int
current: 0
help: param for rotating the orientation through 90 degrees so the screen shot width is along the X axis
see e_ScreenShotMap
0 - 1 (0 is default)

variable: e_ScreenShotMapSizeX 
type: float
current: 1024
help: param for the size in worldunits of area to make map screenshot, see e_ScreenShotMap
defines the x position of the bottom right corner of the screenshot-area on the terrain,
0.0 - 1.0 (1.0 is default)

variable: e_ScreenShotMapSizeY 
type: float
current: 1024
help: param for the size in worldunits of area to make map screenshot, see e_ScreenShotMap
defines the x position of the bottom right corner of the screenshot-area on the terrain,
0.0 - 1.0 (1.0 is default)

variable: e_ScreenShotMinSlices 
type: int
current: 1
help: used for all type highres screenshots made by e_ScreenShot to define the amount
of sub-screenshots for the width and height to generate the image,
 the min count
will be automatically raised if not sufficient (per screenshot-based)

variable: e_ScreenShotQuality 
type: int
current: 30
help: used for all type highres screenshots made by e_ScreenShot to define the quality
0=fast, 10 .. 30 .. 100 = extra border in percent (soften seams), negative value to debug

variable: e_ScreenShotWidth 
type: int
current: 2000
help: used for all type highres screenshots made by e_ScreenShot to define the
width of the destination image, 2000 default

variable: e_Shadows 
type: int
current: 1
help: Activates drawing of shadows

variable: e_ShadowsAdaptScale 
type: float
current: 2.72
help: Shadows slope bias for shadowgen

variable: e_ShadowsBlendCascades 
type: int
current: 1
help: Blend between shadow cascades: 0=off, 1=on

variable: e_ShadowsBlendCascadesVal 
type: float
current: 0.75
help: Size of cascade blend region

variable: e_ShadowsCache 
type: int
current: 1
help: Activates drawing of static cached shadows

variable: e_ShadowsCacheObjectLod 
type: int
current: 0
help: The lod used for rendering objects into the shadow cache. Set to -1 to disable

variable: e_ShadowsCacheRenderCharacters 
type: int
current: 0
help: Render characters into the shadow cache. 0=disabled, 1=enabled

variable: e_ShadowsCacheRequireManualUpdate 
type: int
current: 0
help: Sets whether levels must trigger manual updates of the cached shadow maps:
0=Cached shadows default to Incremental updates. Each cached shadow frustum will traverse and cull the octree each frame (Potentially high CPU/GPU overhead)
1=Levels must trigger cached shadow updates via script (Preferred: Lowest overhead)
2=Levels may either trigger cached shadow updates via script or allow cached shadows to update if the user moves too close to the border of the shadowmap

variable: e_ShadowsCacheUpdate 
type: int
current: 0
help: Trigger updates of the shadow cache: 0=no update, 1=one update, 2=continuous updates

variable: e_ShadowsCascadesDebug 
type: int
current: 0
help: 0=off, 1=visualize sun shadow cascades on screen

variable: e_ShadowsCastViewDistRatio 
type: float
current: 1
help: View dist ratio for shadow maps casting from objects

variable: e_ShadowsCastViewDistRatioLights 
type: float
current: 1
help: View dist ratio for shadow maps casting for light sources

variable: e_ShadowsClouds 
type: int
current: 1
help: Cloud shadows

variable: e_ShadowsConstBias 
type: float
current: 1
help: Shadows slope bias for shadowgen

variable: e_ShadowsConstBiasHQ 
type: float
current: 0.05
help: Shadows slope bias for shadowgen (high quality mode)

variable: e_ShadowsDebug 
type: int
current: 0
help: 0=off, 2=visualize shadow maps on the screen

variable: e_ShadowsFrustums 
type: int
current: 0
help: Debug

variable: e_ShadowsLodBiasFixed 
type: int
current: 0
help: Simplifies mesh for shadow map generation by X LOD levels

variable: e_ShadowsLodBiasInvis 
type: int
current: 0
help: Simplifies mesh for shadow map generation by X LOD levels, if object is not visible in main frame

variable: e_ShadowsMasksLimit 
type: int
current: 0
help: Maximum amount of allocated shadow mask textures
This limits the number of shadow casting lights overlapping
0=disable limit(unpredictable memory requirements)
1=one texture (4 channels for 4 lights)
2=two textures (8 channels for 8 lights), ...

variable: e_ShadowsMaxTexRes 
type: int
current: 1024
help: Set maximum resolution of shadow map
256(faster), 512(medium), 1024(better quality)

variable: e_ShadowsOnAlphaBlend 
type: int
current: 0
help: Enable shadows on alphablended 

variable: e_ShadowsPerObject 
type: int
current: 1
help: Per object shadow maps 0=off, 1=on, -1=don't draw object shadows

variable: e_ShadowsPerObjectResolutionScale 
type: float
current: 1
help: Global scale for per object shadow texture resolution
NOTE: individual texture resolution is rounded to next power of two 

variable: e_ShadowsPoolSize 
type: int
current: 4096
help: Set size of shadow pool (e_ShadowsPoolSize*e_ShadowsPoolSize)

variable: e_ShadowsResScale 
type: float
current: 4
help: Shadows slope bias for shadowgen

variable: e_ShadowsSlopeBias 
type: float
current: 1
help: Shadows slope bias for shadowgen

variable: e_ShadowsSlopeBiasHQ 
type: float
current: 0.25
help: Shadows slope bias for shadowgen (for high quality mode)

variable: e_ShadowsTessellateCascades 
type: int
current: 1
help: Maximum cascade number to render tessellated shadows (0 = no tessellation for sun shadows)

variable: e_ShadowsTessellateDLights 
type: int
current: 0
help: Disable/enable tessellation for local lights shadows

variable: e_ShadowsUpdateViewDistRatio 
type: int
current: 256
help: View dist ratio for shadow maps updating for shadowpool

variable: e_sketch_mode 
type: int
current: 0
help: Enables Sketch mode drawing

variable: e_SkipParticleOcclusion 
type: int
current: 1
help: Skips occlusion testing for particles in the occlusion buffer, these may be too small to get reliable results.

variable: e_SkyBox 
type: int
current: 1
help: Activates drawing of skybox and moving cloud layers

variable: e_SkyQuality 
type: int
current: 1
help: Quality of dynamic sky: 1 (very high), 2 (high).

variable: e_SkyType 
type: int
current: 1
help: Type of sky used: 0 (static), 1 (dynamic).

variable: e_SkyUpdateRate 
type: float
current: 1
help: Percentage of a full dynamic sky update calculated per frame (0..100].

variable: e_Sleep 
type: int
current: 0
help: Sleep X in C3DEngine::Draw

variable: e_SQTestBegin 
type: int
current: 0
help: If not zero - start streaming latency unit test

variable: e_SQTestCount 
type: int
current: 0
help: If not zero - restart test X times

variable: e_SQTestDelay 
type: float
current: 5
help: Time to stabilize the system before camera movements

variable: e_SQTestDistance 
type: int
current: 80
help: Distance to travel

variable: e_SQTestExitOnFinish 
type: int
current: 0
help: If not zero - shutdown when finished testing

variable: e_SQTestMip 
type: int
current: 1
help: Mip to wait during test

variable: e_SQTestMoveSpeed 
type: int
current: 10
help: Camera speed during test (meters/sec)

variable: e_SQTestTextureName 
type: string
current: strfrn_advrt_boards_screen
help: Reference texture name for streaming latency test

variable: e_StaticInstancing 
type: int
current: 0
help: Enables instancing of static objects

variable: e_StaticInstancingMinInstNum 
type: int
current: 10
help: Minimum number of common static objects in a tree node before hardware instancing is used.

variable: e_StatObjBufferRenderTasks 
type: int
current: 1
help: 1 - occlusion test on render node level, 2 - occlusion test on render mesh level

variable: e_StatObjMerge 
type: int
current: 1
help: Enable CGF sub-objects meshes merging

variable: e_StatObjMergeMaxTrisPerDrawCall 
type: int
current: 500
help: Skip merging of meshes already having acceptable number of triangles per draw call

variable: e_StatObjMergeUseThread 
type: int
current: 1
help: Use a thread to perform sub-objects meshes merging

variable: e_StatObjPreload 
type: int
current: 1
help: Load level CGF's in efficient way

variable: e_StatObjRenderFilter 
type: string
current: 
help: Debug: Controls which cgfs are rendered, based on input string

variable: e_StatObjRenderFilterMode 
type: int
current: 0
help: Debug: Controls how e_StatObjRenderFilter is use. 0=disabled 1=include 2=exclude

variable: e_StatObjStoreMesh 
type: int
current: 0
help: Store the mesh if enabled, used for cheat detection purposes (they will be stored by default on the dedi server)

variable: e_StatObjTessellationMaxEdgeLenght 
type: float
current: 1.75
help: Split edges longer than X meters

variable: e_StatObjTessellationMode 
type: int
current: 1
help: Set they way pre-tessellated version of meshes is created: 0 = no pre-tessellation, 1 = load from disk, 2 = generate from normal mesh on loading

variable: e_StatObjTestOBB 
type: int
current: 0
help: Use additional OBB check for culling

variable: e_StatObjValidate 
type: int
current: 1
help: Enable CGF mesh validation during loading

variable: e_StatoscopeAllowFpsOverride 
type: int
current: 1
help: Allow overriding of cvars in release for fps captures (MP only).

variable: e_StatoscopeConnectTimeout 
type: float
current: 5
help: The number of seconds the data writer will stall while trying connect to the telemetry server.

variable: e_StatoscopeCreateLogFilePerLevel 
type: int
current: 0
help: Create a new perflog file per level.

variable: e_StatoscopeDataGroups 
type: int
current: 4503599736690688
help: Which data groups are recorded each frame: flags+ enables, flags- disables
 0 = none
 1 = all
 f+ = frame lengths
 e+ = effects
 m+ = memory
 s+ = streaming
 a+ = streaming audio
 o+ = streaming objects
 t+ = threading
 T+ = system threading
 W+ = Worker Information Individual
 X+ = Worker Information Summarized
 Y+ = Job Information Individual
 Z+ = Job Information Summarized
 j+ = CPU Times
 v+ = Vertex data
 p+ = particles
 l+ = location
 c+ = per-cgf gpu profilers
 y+ = ParticlesColliding
 w+ = PhysEntities
 r+ = frame profilers
 q+ = performance counters
 u+ = user markers
 k+ = callstacks
 n+ = network
 z+ = channel
 d+ = network profile


variable: e_StatoscopeDumpAll 
type: int
current: 0
help: Controls whether all functions are dumped in a profile log.

variable: e_StatoscopeEnabled 
type: int
current: 0
help: Controls whether all statoscope is enabled.

variable: e_StatoscopeFilenameUseBuildInfo 
type: int
current: 1
help: Set to include the platform and build number in the log filename.

variable: e_StatoscopeFilenameUseDatagroups 
type: int
current: 0
help: Set to include the datagroup and date in the log filename.

variable: e_StatoscopeFilenameUseMap 
type: int
current: 0
help: Set to include the map name in the log filename.

variable: e_StatoscopeFilenameUseTag 
type: string
current: 
help: Set to include tag in the log file name.

variable: e_StatoscopeFilenameUseTime 
type: int
current: 0
help: Set to include the time and date in the log filename.

variable: e_StatoscopeIvDataGroups 
type: int
current: 0
help: Which data groups are recorded each frame: flags+ enables, flags- disables
 0 = none
 1 = all
 s+ = streaming
 o+ = streaming objects
 t+ = streaming textures


variable: e_StatoscopeLogDestination 
type: int
current: 1
help: Where the Statoscope log gets written to:
  0 - file
  1 - socket
  2 - telemetry server (default)

variable: e_StatoscopeMaxNumFuncsPerFrame 
type: int
current: 150
help: Max number of funcs to log per frame.

variable: e_StatoscopeMinFuncLengthMs 
type: float
current: 0.01
help: Min func duration (ms) to be logged by statoscope.

variable: e_StatoscopePort 
type: int
current: 29527
help: Controls which port the statoscope uses to communicate.

variable: e_StatoscopeScreenCapWhenGPULimited 
type: int
current: 0
help: Statoscope will take a screen capture when we are GPU limited

variable: e_StatoscopeScreenshotCapturePeriod 
type: float
current: -1
help: How many seconds between Statoscope screenshot captures (-1 to disable).

variable: e_StatoscopeWriteTimeout 
type: float
current: 1
help: The number of seconds the data writer will stall before it gives up trying to write data (currently only applies to the telemetry data writer).

variable: e_StreamAutoMipFactorMax 
type: float
current: 1
help: Debug

variable: e_StreamAutoMipFactorMaxDVD 
type: float
current: 0.5
help: Debug

variable: e_StreamAutoMipFactorMin 
type: float
current: 0.5
help: Debug

variable: e_StreamAutoMipFactorSpeedThreshold 
type: float
current: 0
help: Debug

variable: e_StreamCgf REQUIRE_APP_RESTART
type: int
current: 0
help: Enable streaming of static render meshes

variable: e_StreamCgfDebug 
type: int
current: 0
help: Draw helpers and other debug information about CGF streaming
 1: Draw color coded boxes for objects taking more than e_StreamCgfDebugMinObjSize,
    also shows are the LOD's stored in single CGF or were split into several CGF's
 2: Trace into console every loading and unloading operation
 3: Print list of currently active objects taking more than e_StreamCgfDebugMinObjSize KB

variable: e_StreamCgfDebugFilter 
type: string
current: 
help: Show only items containing specified text

variable: e_StreamCgfDebugHeatMap 
type: int
current: 0
help: Generate and show mesh streaming heat map
 1: Generate heat map for entire level
 2: Show last heat map

variable: e_StreamCgfDebugMinObjSize 
type: int
current: 100
help: Threshold for objects debugging in KB

variable: e_StreamCgfFastUpdateMaxDistance 
type: float
current: 16
help: Update streaming priorities for near objects every second frame

variable: e_StreamCgfGridUpdateDistance 
type: float
current: 0
help: Update streaming priorities when camera moves more than this value

variable: e_StreamCgfMaxNewTasksPerUpdate 
type: int
current: 4
help: Maximum number of files requested from streaming system per update

variable: e_StreamCgfMaxTasksInProgress 
type: int
current: 32
help: Maximum number of files simultaneously requested from streaming system

variable: e_StreamCgfPoolSize 
type: int
current: 24
help: Render mesh cache size in MB

variable: e_StreamCgfUpdatePerNodeDistance 
type: int
current: 1
help: Use node distance as entity distance for far nodex 

variable: e_StreamCgfVisObjPriority 
type: float
current: 0.5
help: Priority boost for visible objects
0 - visible objects has no priority over invisible objects, camera direction does not affect streaming
1 - visible objects has highest priority, in case of trashing will produce even more trashing

variable: e_StreamPredictionAhead 
type: float
current: 0.5
help: Use predicted camera position for streaming priority updates

variable: e_StreamPredictionAheadDebug 
type: float
current: 0
help: Draw ball at predicted position

variable: e_StreamPredictionAlwaysIncludeOutside 
type: int
current: 0
help: Always include outside octrees in streaming

variable: e_StreamPredictionBoxRadius 
type: float
current: 1
help: Radius of stream prediction box

variable: e_StreamPredictionDistanceFar 
type: float
current: 16
help: Prediction distance for streaming, affects far objects

variable: e_StreamPredictionDistanceNear 
type: float
current: 0
help: Prediction distance for streaming, affects LOD of objects

variable: e_StreamPredictionMaxVisAreaRecursion 
type: int
current: 9
help: Maximum number visareas and portals to traverse.

variable: e_StreamPredictionMinFarZoneDistance 
type: float
current: 16
help: Debug

variable: e_StreamPredictionMinReportDistance 
type: float
current: 0.75
help: Debug

variable: e_StreamPredictionTexelDensity 
type: int
current: 1
help: Use mesh texture mapping density info for textures streaming

variable: e_StreamPredictionUpdateTimeSlice 
type: float
current: 0.4
help: Maximum amount of time to spend for scene streaming priority update in milliseconds

variable: e_StreamSaveStartupResultsIntoXML 
type: int
current: 0
help: Save basic information about streaming performance on level start into XML

variable: e_Sun 
type: int
current: 1
help: Activates sun light source

variable: e_SunAngleSnapDot 
type: float
current: 0.999999
help: Sun dir snap control

variable: e_SunAngleSnapSec 
type: float
current: 0.1
help: Sun dir snap control

variable: e_svoDebug 
type: int
current: 0
help: 6 = Visualize voxels, different colors shows different LOD
7 = Visualize postponed nodes and not ready meshes

variable: e_svoDispatchX 
type: int
current: 128
help: Controls parameters of SVO compute shaders execution

variable: e_svoDispatchY 
type: int
current: 16
help: Controls parameters of SVO compute shaders execution

variable: e_svoDVR 
type: int
current: 0
help: Activate Direct Volume Rendering of SVO (trace and output results to the screen)

variable: e_svoDVR_DistRatio 
type: float
current: 0.9
help: Controls voxels LOD ratio for streaming and tracing

variable: e_svoEnabled 
type: int
current: 0
help: Activates SVO subsystem

variable: e_svoLoadTree 
type: int
current: 0
help: Start SVO generation or loading from disk

variable: e_svoMaxAreaSize 
type: float
current: 32
help: Maximum SVO node size for detailed voxelization

variable: e_svoMaxBricksOnCPU 
type: int
current: 8192
help: Maximum number of voxel bricks allowed to cache on CPU side

variable: e_svoMaxBrickUpdates 
type: int
current: 8
help: Limits the number of bricks uploaded from CPU to GPU per frame

variable: e_svoMaxNodeSize 
type: float
current: 32
help: Maximum SVO node size for voxelization (bigger nodes stays empty)

variable: e_svoMaxStreamRequests 
type: int
current: 256
help: Limits the number of brick streaming or building requests per frame

variable: e_svoMinNodeSize 
type: float
current: 8
help: Smallest SVO node allowed to create during level voxelization
Smaller values helps getting more detailed lighting but may work slower and use more memory in pool
It may be necessary to increase VoxelPoolResolution in order to prevent running out of voxel pool

variable: e_svoRender 
type: int
current: 1
help: Enables CPU side (every frame) SVO traversing and update

variable: e_svoTI_Active 
type: int
current: 0
help: Activates voxel GI for the level (experimental feature)

variable: e_svoTI_Apply 
type: int
current: 0
help: Allows to temporary deactivate GI for debug purposes

variable: e_svoTI_ConeMaxLength 
type: float
current: 12
help: Maximum length of the tracing rays (in meters)
Shorter rays work faster

variable: e_svoTI_ConstantAmbientDebug 
type: float
current: 0
help: Replace GI computations with constant ambient color for GI debugging

variable: e_svoTI_Diffuse_Cache 
type: int
current: 0
help: Pre-bake lighting in SVO and use it instead of cone tracing

variable: e_svoTI_Diffuse_Spr 
type: float
current: 0
help: Adjusts the kernel of diffuse tracing; big value will merge all cones into single vector

variable: e_svoTI_DiffuseAmplifier 
type: float
current: 1
help: Adjusts the output brightness of cone traced indirect diffuse component

variable: e_svoTI_DiffuseBias 
type: float
current: 0.05
help: Constant ambient value added to GI
Helps preventing completely black areas
If negative - modulate it with near range AO

variable: e_svoTI_DiffuseConeWidth 
type: float
current: 24
help: Controls wideness of diffuse cones
Wider cones work faster but may cause over-occlusion and more light leaking

variable: e_svoTI_DynLights 
type: int
current: 1
help: Allow single real-time indirect bounce from marked dynamic lights

variable: e_svoTI_EmissiveMultiplier 
type: float
current: 4
help: Modulates emissive materials light injection
Allows controlling emission separately from post process glow

variable: e_svoTI_ForceGIForAllLights 
type: int
current: 0
help: Force dynamic GI for all lights except ambient lights and sun
This allows to quickly get dynamic GI working in unprepared scenes

variable: e_svoTI_GsmCascadeLod 
type: int
current: 2
help: Sun shadow cascade LOD for RSM GI

variable: e_svoTI_GsmShiftBack 
type: float
current: 0.0095
help: If non zero - move big shadow cascades back a little allowing capturing more areas behind the camera for RSM GI

variable: e_svoTI_HalfresKernel 
type: int
current: 0
help: Use less rays for secondary bounce for faster update
Difference is only visible with number of bounces more than 1

variable: e_svoTI_HighGlossOcclusion 
type: float
current: 0
help: Normally specular contribution of env probes is corrected by diffuse GI
This parameter controls amount of correction (usualy darkening) for very glossy and reflective surfaces

variable: e_svoTI_InjectionMultiplier 
type: float
current: 1
help: Modulates light injection (controls the intensity of bounce light)

variable: e_svoTI_IntegrationMode 
type: int
current: 0
help: GI computations may be used in several ways:
0 = AO + Sun bounce
      Large scale ambient occlusion (static) modulates (or replaces) default ambient lighting
      Single light bounce (fully real-time) is supported for sun and (with limitations) for projectors 
      This mode takes less memory (only opacity is voxelized) and works acceptable on consoles
1 = Diffuse GI mode (experimental)
      GI completely replaces default diffuse ambient lighting
      Two indirect light bounces are supported for sun and semi-static lights (use '_TI' in light name)
      Single fully dynamic light bounce is supported for projectors (use '_TI_DYN' in light name)
      Default ambient specular is modulated by intensity of diffuse GI
2 = Full GI mode (very experimental)
      Both ambient diffuse and ambient specular lighting is computed by voxel cone tracing
      This mode works fine only on good modern PC

variable: e_svoTI_LowSpecMode 
type: int
current: 0
help: Set low spec mode
Values greater than 0 simplify shaders and scale down internal render targets

variable: e_svoTI_MinVoxelOpacity 
type: float
current: 0.2
help: Voxelize only geometry with opacity higher than specified value

variable: e_svoTI_NumberOfBounces 
type: int
current: 1
help: Maximum number of indirect bounces (from 0 to 2)
First indirect bounce is completely dynamic
The rest of the bounces are cached in SVO and mostly static

variable: e_svoTI_ObjectsLod 
type: int
current: 1
help: Mesh LOD used for voxelization
Changes are visible only after re-voxelization (click <Update geometry> or restart)

variable: e_svoTI_ObjectsMaxViewDistance 
type: float
current: 64
help: Voxelize only objects with maximum view distance greater than this value (only big and important objects)
If set to 0 - disable this check and also disable skipping of too small triangles
Changes are visible after full re-voxelization (click <Update geometry> or restart)

variable: e_svoTI_PointLightsMultiplier 
type: float
current: 1
help: Modulates point light injection (controls the intensity of bounce light)

variable: e_svoTI_PortalsDeform 
type: float
current: 0
help: Adjusts the sky light tracing kernel so that more rays are cast in direction of portals
This helps getting more detailed sky light indoor but may cause distortion of all other indirect lighting

variable: e_svoTI_PortalsInject 
type: float
current: 0
help: Inject portal lighting into SVO
This helps getting more correct sky light bouncing indoors

variable: e_svoTI_PropagationBooster 
type: float
current: 1.5
help: Controls fading of the light during in-SVO propagation
Values greater than 1 help propagating light further but may bring more light leaking artifacts

variable: e_svoTI_Reflect_Vox_Max 
type: int
current: 100
help: Controls amount of voxels allowed to refresh every frame

variable: e_svoTI_Reflect_Vox_Max_Overhead 
type: int
current: 50
help: Controls amount of voxels allowed to refresh every frame

variable: e_svoTI_Reflect_Vox_MaxEdit 
type: int
current: 10000
help: Controls amount of voxels allowed to refresh every frame during lights editing

variable: e_svoTI_Reserved0 
type: float
current: 0
help: Reserved for debugging

variable: e_svoTI_Reserved1 
type: float
current: 0
help: Reserved for debugging

variable: e_svoTI_Reserved2 
type: float
current: 0
help: Reserved for debugging

variable: e_svoTI_Reserved3 
type: float
current: 0
help: Reserved for debugging

variable: e_svoTI_ResScaleAir 
type: int
current: 4
help: Defines resolution of GI cone-tracing targets; 2=half res

variable: e_svoTI_ResScaleBase 
type: int
current: 2
help: Defines resolution of GI cone-tracing targets; 2=half res

variable: e_svoTI_RT_MaxDist 
type: float
current: 0
help: Maximum distance for detailed mesh ray tracing prototype; applied only in case of maximum glossiness

variable: e_svoTI_Saturation 
type: float
current: 0.8
help: Controls color saturation of propagated light

variable: e_svoTI_Shadow_Sev 
type: float
current: 1
help: Controls severity of shadow cones; smaller value gives softer shadows, but tends to over-occlusion

variable: e_svoTI_SkipNonGILights 
type: int
current: 0
help: Disable all lights except sun and lights marked to be used for GI
This mode ignores all local environment probes and ambient lights

variable: e_svoTI_SkyColorMultiplier 
type: float
current: -1.0001
help: Controls amount of the sky light
This value may be multiplied with TOD fog color

variable: e_svoTI_Specular_FromDiff 
type: int
current: 0
help: Compute specular using intermediate results of diffuse computations

variable: e_svoTI_Specular_Reproj 
type: int
current: 1
help: Reuse tracing results from previous frames

variable: e_svoTI_Specular_Sev 
type: float
current: 1
help: Controls severity of specular cones; this value limits the material glossiness

variable: e_svoTI_SpecularAmplifier 
type: float
current: 0
help: Adjusts the output brightness of cone traced indirect specular component

variable: e_svoTI_SSAOAmount 
type: float
current: 0.7
help: Allows to scale down SSAO (SSDO) amount and radius when GI is active

variable: e_svoTI_SSDepthTrace 
type: float
current: 0
help: Use SS depth tracing together with voxel tracing

variable: e_svoTI_SunRSMInject 
type: int
current: 0
help: Enable additional RSM sun injection
Helps getting sun bounces in over-occluded areas where primary injection methods are not able to inject enough sun light
Works only in LowSpecMode 0

variable: e_svoTI_TemporalFilteringBase 
type: float
current: 0.25
help: Controls amount of temporal smoothing
0 = less noise and aliasing, 1 = less ghosting

variable: e_svoTI_TemporalFilteringMinDistance 
type: float
current: 0.5
help: Prevent previous frame re-projection at very near range, mostly for 1p weapon and hands

variable: e_svoTI_TranslucentBrightness 
type: float
current: 3
help: Adjusts the brightness of translucent surfaces
Affects for example vegetation leaves and grass

variable: e_svoTI_Troposphere_Active 
type: int
current: 0
help: Activates SVO atmospheric effects.
If set to zero - turns off atmosphere rendering and switch back to classic fog

variable: e_svoTI_Troposphere_Brightness 
type: float
current: 0
help: Controls intensity of atmospheric effects.

variable: e_svoTI_Troposphere_CloudGen_Freq 
type: float
current: 0
help: CloudsGen magic number

variable: e_svoTI_Troposphere_CloudGen_FreqStep 
type: float
current: 0
help: CloudsGen magic number

variable: e_svoTI_Troposphere_CloudGen_Height 
type: float
current: 0
help: Maximum height for atmospheric effects

variable: e_svoTI_Troposphere_CloudGen_Scale 
type: float
current: 0
help: CloudsGen magic number

variable: e_svoTI_Troposphere_CloudGenTurb_Freq 
type: float
current: 0
help: CloudsGen magic number

variable: e_svoTI_Troposphere_CloudGenTurb_Scale 
type: float
current: 0
help: CloudsGen magic number

variable: e_svoTI_Troposphere_Density 
type: float
current: 0
help: Troposphere density

variable: e_svoTI_Troposphere_Ground_Height 
type: float
current: 0
help: Minimum height for atmospheric effects

variable: e_svoTI_Troposphere_Layer0_Dens 
type: float
current: 0
help: Layered fog Density

variable: e_svoTI_Troposphere_Layer0_Height 
type: float
current: 0
help: Layered fog level

variable: e_svoTI_Troposphere_Layer0_Rand 
type: float
current: 0
help: Layered fog randomness

variable: e_svoTI_Troposphere_Layer1_Dens 
type: float
current: 0
help: Layered fog Density

variable: e_svoTI_Troposphere_Layer1_Height 
type: float
current: 0
help: Layered fog level

variable: e_svoTI_Troposphere_Layer1_Rand 
type: float
current: 0
help: Layered fog randomness

variable: e_svoTI_Troposphere_Snow_Height 
type: float
current: 0
help: Snow on objects height

variable: e_svoTI_Troposphere_Subdivide 
type: int
current: 0
help: Build detailed SVO also in areas not filled by geometry

variable: e_svoTI_UpdateGeometry 
type: int
current: 0
help: When switched from OFF to ON - forces single complete re-voxelization of the scene
This is needed if terrain, brushes or vegetation were modified

variable: e_svoTI_UpdateLighting 
type: int
current: 0
help: When switched from OFF to ON - forces single full update of SVO lighting
If stays enabled - automatically updates lighting if some light source was modified

variable: e_svoTI_UseLightProbes 
type: int
current: 0
help: If enabled - environment probes lighting is multiplied with GI
If disabled - diffuse contribution of environment probes is ignored
In modes 1-2 it enables usage of global env probe for sky light instead of TOD fog color

variable: e_svoTI_UseTODSkyColor 
type: float
current: 0.5
help: if non 0 - modulate sky light with TOD fog color (top)
Values between 0 and 1 controls the color saturation

variable: e_svoTI_VegetationMaxOpacity 
type: float
current: 0.2
help: Limits the opacity of vegetation voxels

variable: e_svoTI_VoxelizaionLODRatio 
type: float
current: 1.8
help: Controls distance LOD ratio for voxelization
Bigger value helps getting more detailed lighting at distance but may work slower and will use more memory in pool
It may be necessary to increase VoxelPoolResolution parameter in order to prevent running out of voxel pool

variable: e_svoTI_VoxelizaionPostpone 
type: int
current: 2
help: 1 - Postpone voxelization until all needed meshes are streamed in
2 - Postpone voxelization and request streaming of missing meshes
Use e_svoDebug = 7 to visualize postponed nodes and not ready meshes

variable: e_svoTI_VoxelizeUnderTerrain 
type: int
current: 0
help: 0 = Skip underground triangles during voxelization

variable: e_svoVoxDistRatio 
type: float
current: 14
help: Limits the distance where real-time GPU voxelization used

variable: e_svoVoxelPoolResolution 
type: int
current: 128
help: Size of volume textures (x,y,z dimensions) used for SVO data storage
Valid values are 128 and 256
Engine has to be restarted if this value was modified
Too big pool size may cause long stalls when some GI parameter was changed

variable: e_svoVoxGenRes 
type: int
current: 512
help: GPU voxelization dummy render target resolution

variable: e_svoVoxNodeRatio 
type: float
current: 4
help: Limits the real-time GPU voxelization only to leaf SVO nodes

variable: e_Terrain 
type: int
current: 1
help: Activates drawing of terrain ground

variable: e_TerrainAo 
type: int
current: 0
help: Activate deferred terrain ambient occlusion

variable: e_TerrainBBoxes 
type: int
current: 0
help: Show terrain nodes bboxes

variable: e_TerrainDeformations 
type: int
current: 0
help: Allows in-game terrain surface deformations

variable: e_TerrainDetailMaterials 
type: int
current: 1
help: Activates drawing of detail materials on terrain ground

variable: e_TerrainDetailMaterialsDebug 
type: int
current: 0
help: Shows number of materials in use per terrain sector

variable: e_TerrainDetailMaterialsViewDistXY 
type: float
current: 2048
help: Max view distance of terrain XY materials

variable: e_TerrainDetailMaterialsViewDistZ 
type: float
current: 128
help: Max view distance of terrain Z materials

variable: e_TerrainDrawThisSectorOnly 
type: int
current: 0
help: 1 - render only sector where camera is and objects registered in sector 00
2 - render only sector where camera is

variable: e_TerrainLodDistRatio 
type: float
current: 1
help: Set heightmap LOD, this value is combined only with sector distance to camera and ignores sector error metrics

variable: e_TerrainLodRatio 
type: float
current: 0.5
help: Set heightmap LOD, this value is combined with sector error metrics and distance to camera

variable: e_TerrainLodRatioHolesMin 
type: float
current: 2
help: Rises LOD for distant terrain sectors with holes, prevents too strong distortions of holes on distance 

variable: e_TerrainLog 
type: int
current: 0
help: Debug

variable: e_TerrainOcclusionCulling 
type: int
current: 1
help: heightmap occlusion culling with time coherency 0=off, 1=on

variable: e_TerrainOcclusionCullingDebug 
type: int
current: 0
help: Draw sphere on every terrain height sample

variable: e_TerrainOcclusionCullingMaxDist 
type: float
current: 200
help: Max length of ray (for version 1)

variable: e_TerrainOcclusionCullingMaxSteps 
type: int
current: 50
help: Max number of tests per ray (for version 0)

variable: e_TerrainOcclusionCullingPrecision 
type: float
current: 0.25
help: Density of rays

variable: e_TerrainOcclusionCullingPrecisionDistRatio 
type: float
current: 3
help: Controls density of rays depending on distance to the object

variable: e_TerrainOcclusionCullingStepSize 
type: int
current: 4
help: Initial size of single step (in heightmap units)

variable: e_TerrainOcclusionCullingStepSizeDelta 
type: float
current: 1.05
help: Step size scale on every next step (for version 1)

variable: e_TerrainOcclusionCullingVersion 
type: int
current: 1
help: 0 - old, 1 - new

variable: e_TerrainTextureDebug 
type: int
current: 0
help: Debug

variable: e_TerrainTextureLodRatio 
type: float
current: 1
help: Adjust terrain base texture resolution on distance

variable: e_TerrainTextureStreamingDebug 
type: int
current: 0
help: Debug

variable: e_TerrainTextureStreamingPoolItemsNum REQUIRE_LEVEL_RELOAD
type: int
current: 64
help: Specifies number of textures in terrain base texture streaming pool

variable: e_Tessellation 
type: int
current: 1
help: HW geometry tessellation  0 = not allowed, 1 = allowed

variable: e_TessellationMaxDistance 
type: float
current: 30
help: Maximum distance from camera in meters to allow tessellation, also affects distance-based displacement fadeout

variable: e_texeldensity 
type: int
current: 0
help: Enables texel density debug
 1: Objects texel density
 2: Objects texel density with colored mipmaps
 3: Terrain texel density
 4: Terrain texel density with colored mipmaps


variable: e_TimeOfDay 
type: float
current: 14
help: Current Time of Day

variable: e_TimeOfDayDebug 
type: int
current: 0
help: Display time of day current values on screen

variable: e_TimeOfDaySpeed 
type: float
current: 0
help: Time of Day change speed

variable: e_Vegetation 
type: int
current: 1
help: Activates drawing of distributed objects like trees

variable: e_VegetationAlignToTerrainAmount 
type: float
current: 1
help: 0 - no align, 1 - full align

variable: e_VegetationAlphaBlend 
type: int
current: 1
help: Allow alpha blending for vegetations

variable: e_VegetationBending 
type: int
current: 1
help: Enable vegetation bending (does not affect merged grass)

variable: e_VegetationMinSize REQUIRE_LEVEL_RELOAD
type: float
current: 0
help: Minimal size of static object, smaller objects will be not rendered

variable: e_VegetationSphericalSkinning 
type: int
current: 1
help: Activates vegetation spherical skinning support

variable: e_VegetationUseTerrainColor 
type: int
current: 1
help: Allow blend with terrain color for vegetations

variable: e_VegetationUseTerrainColorDistance 
type: float
current: 0
help: Controls distance of fading into terrain color
 0 = Use 30% of maximum view distance of each vegetation instance (old default way)
<0 = Maximum view distance value is calculated using vegetation mesh size (non scaled CGF size) and then multiplied by this cvar
>0 = This value used directly as fading distance for all vegetations

variable: e_ViewDistCompMaxSize 
type: float
current: 64
help: Affects max view distance for big objects, small number will render less objects

variable: e_ViewDistMin 
type: float
current: 10
help: Min distance on what far objects will be culled out

variable: e_ViewDistRatio 
type: float
current: 125
help: View distance ratio for objects

variable: e_ViewDistRatioCustom 
type: float
current: 125
help: View distance ratio for special marked objects (Players,AI,Vehicles)

variable: e_ViewDistRatioDetail 
type: float
current: 125
help: View distance ratio for detail objects

variable: e_ViewDistRatioLights 
type: float
current: 75
help: View distance ratio for light sources

variable: e_ViewDistRatioPortals 
type: float
current: 60
help: View distance ratio for portals

variable: e_ViewDistRatioVegetation 
type: float
current: 125
help: View distance ratio for vegetation

variable: e_VolObjShadowStrength 
type: float
current: 0.4
help: Self shadow intensity of volume objects [0..1].

variable: e_VolumetricFog 
type: int
current: 0
help: Activates volumetric fog

variable: e_WaterOcean 
type: int
current: 1
help: Activates drawing of ocean. 
1: use usual rendering path
2: use fast rendering path with merged fog

variable: e_WaterOceanBottom 
type: int
current: 1
help: Activates drawing bottom of ocean

variable: e_WaterOceanFFT 
type: int
current: 1
help: Activates fft based ocean

variable: e_WaterRipplesDebug 
type: int
current: 0
help: Draw water hits that affect water ripple simulation

variable: e_WaterTessellationAmount 
type: int
current: 85
help: Set tessellation amount

variable: e_WaterTessellationSwathWidth 
type: int
current: 10
help: Set the swath width for the boustrophedonic mesh stripping

variable: e_WaterVolumes 
type: int
current: 1
help: Activates drawing of water volumes
1: use usual rendering path
2: use fast rendering path with merged fog

variable: e_Wind 
type: int
current: 1
help: Enable global wind calculations, affects vegetations bending animations

variable: e_WindAreas 
type: int
current: 1
help: Debug

variable: e_WindBendingDistRatio 
type: float
current: 0.5
help: Wind cutoff distance for bending (linearly attentuated to that distance)

variable: e_WorldSegmentationTest 
type: int
current: 0
help: Debug only: simulates multi-segment behavior in the editor

variable: es_activateEntity 
type: string
current: 
help: Activates an entity

variable: es_bboxes 
type: int
current: 0
help: Toggles entity bounding boxes.
Usage: es_bboxes [0/1]
Default is 0 (off). Set to 1 to display bounding boxes.

variable: es_CharZOffsetSpeed DUMPTODISK
type: float
current: 2
help: sets the character Z-offset change speed (in m/s), used for IK

variable: es_ClearPoolBookmarksOnLayerUnload 
type: int
current: 1
help: Clear pool bookmarks when a layer is unloaded (saves memory and makes smaller saves)

variable: es_deactivateEntity 
type: string
current: 
help: Deactivates an entity

variable: es_DebrisLifetimeScale 
type: float
current: 1
help: Usage: es_DebrisLifetimeScale 1.0

variable: es_debug 
type: int
current: 0
help: Enable entity debugging info
Usage: es_debug [0/1]
Default is 0 (on).

variable: es_debug_not_seen_timeout DUMPTODISK
type: int
current: 0
help: if true, log messages when entities undergo not seen timeout

variable: es_debugDrawEntityIDs 
type: int
current: 0
help: Displays the EntityId of all entities.
Default is 0 (off), any other number enables it.
Note: es_debug must be set to 1 also (or else the EntityId won't be displayed)

variable: es_debugEntityLifetime 
type: int
current: 0
help: Debug entities creation and deletion time

variable: es_DebugEntityUsage 
type: int
current: 0
help: Draws information to the screen to show how entities are being used, per class, including total, active and hidden counts and memory usage
Usage: es_DebugEntityUsage update_rate
update_rate - Time in ms to refresh memory usage calculation or 0 to disable

variable: es_DebugEntityUsageFilter 
type: string
current: 
help: Filter entity usage debugging to classes which have this string in their name

variable: es_DebugEvents 
type: int
current: 0
help: Enables logging of entity events

variable: es_DebugFindEntity 
type: int
current: 0
help: 

variable: es_DebugPool 
type: int
current: 0
help: Enable debug drawing of entity pools

variable: es_DebugPoolFilter 
type: string
current: 
help: Filter entity pool debugging for just this pool and draw more info about it

variable: es_DebugTimers 
type: int
current: 0
help: This is for profiling and debugging (for game coders and level designer)
By enabling this you get a lot of console printouts that show all entities that receive OnTimer
events - it's good to minimize the call count. Certain entities might require this feature and
using less active entities can often be defined by the level designer.
Usage: es_DebugTimers 0/1

variable: es_DisableTriggers 
type: int
current: 0
help: Disable enter/leave events for proximity and area triggers

variable: es_DrawAreaDebug 
type: int
current: 0
help: Enables debug drawing of Areas, set 2 for log details

variable: es_DrawAreaGrid 
type: int
current: 0
help: Enables drawing of Area Grid

variable: es_DrawAreas 
type: int
current: 0
help: Enables drawing of Areas

variable: es_DrawAudioComponentZRay 
type: int
current: 0
help: Enables drawing of Z ray on check for Z visibility

variable: es_DrawProximityTriggers 
type: int
current: 0
help: Shows Proximity Triggers.
Usage: es_DrawProximityTriggers [0-255].  The parameter sets the transparency (alpha) level.
Value 1 will be changed to 70.
Default is 0 (off)


variable: es_enable_full_script_save DUMPTODISK
type: int
current: 0
help: Enable (experimental) full script save functionality

variable: es_EnablePoolUse 
type: int
current: -1
help: Force toggle the use of entity pools on/off.
Usage: es_EnablePoolUse 1
Default is -1, or normal behavior. 0 forces system off. 1 forces system on.

variable: es_EntityUpdatePosDelta 
type: float
current: 0.1
help: Indicates the position delta by which an entity must move before the AreaManager updates position relevant data.
Default: 0.1 (10 cm)

variable: es_FarPhysTimeout 
type: float
current: 4
help: Timeout for faraway physics forceful deactivation

variable: es_helpers 
type: int
current: 0
help: Toggles helpers.
Usage: es_helpers [0/1]
Default is 0 (off). Set to 1 to display entity helpers.

variable: es_HitCharacters 
type: int
current: 1
help: specifies whether alive characters are affected by bullet hits (0 or 1)

variable: es_HitDeadBodies 
type: int
current: 1
help: specifies whether dead bodies are affected by bullet hits (0 or 1)

variable: es_ImpulseScale 
type: float
current: 0
help: Usage: es_ImpulseScale 0.0

variable: es_LayerDebugInfo 
type: int
current: 0
help: Render debug info on active layers: 
0 - inactive 
1 - active brush layers 
2 - all layer info 
3 - all layer and all layer pak info

variable: es_LayerSaveLoadSerialization 
type: int
current: 0
help: Switches layer entity serialization: 
0 - serialize all 
1 - automatically ignore entities on disabled layers 
2 - only ignore entities on non-save layers.

variable: es_log_collisions 
type: int
current: 0
help: Enables collision events logging

variable: es_MaxImpulseAdjMass 
type: float
current: 2000
help: Usage: es_MaxImpulseAdjMass 2000.0

variable: es_MaxPhysDist 
type: float
current: 100
help: Physical entities farther from the camera than this are forcefully deactivated

variable: es_MaxPhysDistCloth 
type: float
current: 300
help: Cloth entities farther from the camera than this are forcefully deactivated

variable: es_MaxPhysDistInvisible 
type: float
current: 25
help: Invisible physical entities farther from the camera than this are forcefully deactivated

variable: es_MinImpulseVel 
type: float
current: 0
help: Usage: es_MinImpulseVel 0.0

variable: es_not_seen_timeout DUMPTODISK
type: int
current: 30
help: number of seconds after which to cleanup temporary render buffers in entity

variable: es_profileentities 
type: int
current: 0
help: Usage: es_profileentities 1,2,3
Default is 0 (off).

variable: es_removeEntity 
type: string
current: 
help: Removes an entity

variable: es_SaveLoadUseLUANoSaveFlag 
type: int
current: 0
help: Save&Load optimization : use lua flag to not serialize entities, for example rigid bodies.

variable: es_SortUpdatesByClass 
type: int
current: 0
help: Sort entity updates by class (possible optimization)

variable: es_SplashThreshold 
type: float
current: 1
help: minimum instantaneous water resistance that is detected as a splashUsage: es_SplashThreshold 200.0

variable: es_SplashTimeout 
type: float
current: 3
help: minimum time interval between consecutive splashesUsage: es_SplashTimeout 3.0

variable: es_TestPoolSignatures 
type: int
current: 0
help: Enable signature testing on entity classes the first time they're prepared from an entity pool

variable: es_UpdateAI 
type: int
current: 1
help: Toggles updating of AI entities.
Usage: es_UpdateAI [0/1]
Default is 1 (on). Set to 0 to prevent AI entities from updating.

variable: es_UpdateCollision 
type: int
current: 1
help: Toggles updating of entity collisions.
Usage: es_UpdateCollision [0/1]
Default is 1 (on). Set to 0 to disable entity collision updating.

variable: es_UpdateCollisionScript 
type: int
current: 1
help: Usage: es_UpdateCollisionScript [0/1]
Default is 1 (on).

variable: es_UpdateContainer 
type: int
current: 1
help: Usage: es_UpdateContainer [0/1]
Default is 1 (on).

variable: es_UpdateEntities 
type: int
current: 1
help: Toggles entity updating.
Usage: es_UpdateEntities [0/1]
Default is 1 (on). Set to 0 to prevent all entities from updating.

variable: es_UpdatePhysics 
type: int
current: 1
help: Toggles updating of entity physics.
Usage: es_UpdatePhysics [0/1]
Default is 1 (on). Set to 0 to prevent entity physics from updating.

variable: es_UpdateScript 
type: int
current: 1
help: Usage: es_UpdateScript [0/1]
Default is 1 (on).

variable: es_UpdateTimer 
type: int
current: 1
help: Usage: es_UpdateTimer [0/1]
Default is 1 (on).

variable: es_updateType 
type: int
current: 1
help: Defines how we update type for the entities

variable: es_UsePhysVisibilityChecks 
type: int
current: 1
help: Activates physics quality degradation and forceful sleeping for invisible and faraway entities

variable: es_VisCheckForUpdate 
type: int
current: 1
help: Usage: es_VisCheckForUpdate [0/1]
Default is 1 (on).

variable: ExitOnQuit 
type: int
current: 1
help: 

variable: ffs_debug 
type: int
current: 0
help: Turns on/off force feedback system debug.

variable: fg_abortOnLoadError 
type: int
current: 1
help: Abort on load error of flowgraphs
2:abort, 1:dialog, 0:log only

variable: fg_debugmodules 
type: int
current: 0
help: Display Module debug info.
0=Disabled1=Modules only2=Modules + Module Instances

variable: fg_debugmodules_filter 
type: string
current: 
help: Only debug modules with this name

variable: fg_iDebugNextStep DUMPTODISK
type: int
current: 0
help: Update flowgraph debug by one step.

variable: fg_iEnableFlowgraphNodeDebugging DUMPTODISK
type: int
current: 0
help: Toggles visual flowgraph debugging.

variable: fg_inspectorLog 
type: int
current: 0
help: Log inspector on console.

variable: fg_noDebugText 
type: int
current: 0
help: Don't show debug text [0/1]
Default is 0 (show debug text).

variable: fg_profile 
type: int
current: 0
help: Flow graph profiling enable/disable

variable: fg_SystemEnable 
type: int
current: 1
help: Toggles FlowGraph System Updates.
Usage: fg_SystemEnable [0/1]
Default is 1 (on).

variable: ft_runFeatureTest 
type: string
current: 
help: Name of the feature test xml to load. The test will be executed and the the game will shutdown.

variable: g_aimdebug 
type: int
current: 0
help: Enable/disable debug drawing for aiming direction

variable: g_allowDisconnectIfUpdateFails 
type: int
current: 1
help: 

variable: g_allowSaveLoadInEditor 
type: int
current: 0
help: Allow saving and loading games in the editor (DANGEROUS)

variable: g_breakage_debug 
type: int
current: 0
help: Turns on debug rendering for broken objects counted against g_breakage_mem_limit

variable: g_breakage_mem_limit 
type: int
current: 0
help: Sets a budget for procedurally breakable objects (in KBs)

variable: g_breakage_particles_limit 
type: int
current: 160
help: Imposes a limit on particles generated during 2d surfaces breaking

variable: g_breakageFadeDelay 
type: float
current: 6
help: 

variable: g_breakageFadeTime 
type: float
current: 6
help: 

variable: g_breakagelog 
type: int
current: 0
help: Log break events

variable: g_breakageMinAxisInertia 
type: float
current: 0.01
help: Set this to 1.0 to force broken trees to have spherical inertia

variable: g_breakageNoDebrisCollisions 
type: int
current: 0
help: Turns off all collisions for debris, apart from coltype_solid

variable: g_breakageTreeDec 
type: int
current: 0
help: Please see comments in ActionGame.cpp

variable: g_breakageTreeInc 
type: int
current: 0
help: Please see comments in ActionGame.cpp

variable: g_breakageTreeIncGlass 
type: int
current: 0
help: Please see comments in ActionGame.cpp

variable: g_breakageTreeMax 
type: int
current: 0
help: Please see comments in ActionGame.cpp

variable: g_breakImpulseScale REQUIRE_LEVEL_RELOAD
type: float
current: 1
help: How big do explosions need to be to break things?

variable: g_breaktimeoutframes 
type: int
current: 140
help: 

variable: g_debug_stats 
type: int
current: 0
help: Enabled massive gameplay events debug

variable: g_debugDialogBuffers 
type: int
current: 0
help: Enables the on screen debug info for flownode dialog buffers.

variable: g_debugSaveLoadMemory 
type: int
current: 0
help: Print debug information about save/load memory usage

variable: g_disableInputKeyFlowNodeInDevMode 
type: int
current: 0
help: disables input Key flownodes even in dev mode. Pure game only, does not affect editor.

variable: g_disableSequencePlayback 
type: int
current: 0
help: disable movie sequence playback

variable: g_displayCheckpointName 
type: int
current: 0
help: Display checkpoint name when game is saved

variable: g_distanceForceNoIk 
type: float
current: 0
help: Distance at which to disable ground alignment IK

variable: g_distanceForceNoLegRaycasts 
type: float
current: 5
help: Distance at which to disable ground alignment IKs raycasts

variable: g_enableitems 
type: int
current: 1
help: Enable/disable the item system

variable: g_enableloadingscreen DUMPTODISK
type: int
current: 1
help: Enable/disable the loading screen

variable: g_EnableLoadSave 
type: int
current: 1
help: Enables/disables saving and loading of savegames

variable: g_enableMergedMeshRuntimeAreas REQUIRE_APP_RESTART
type: int
current: 0
help: Enables the Merged Mesh cluster generation and density precalculations at game/level load

variable: g_forceFastUpdate 
type: int
current: 0
help: GameObjects IsProbablyVisible->TRUE && IsProbablyDistant()->FALSE

variable: g_gameplayAnalyst REQUIRE_APP_RESTART
type: int
current: 0
help: Enable/Disable Gameplay Analyst

variable: g_glassAutoShatter 
type: int
current: 0
help: Always smash the whole pane, and spawn fracture effect

variable: g_glassAutoShatterMinArea 
type: float
current: 0
help: If the area of glass is below this, then autoshatter

variable: g_glassAutoShatterOnExplosions 
type: int
current: 0
help: Just smash the whole pane, and spawn fracture effect for explosions

variable: g_glassForceTimeout 
type: float
current: 0
help: Make all glass break after a given time, overrides art settings

variable: g_glassForceTimeoutSpread 
type: float
current: 0
help: Add a random amount to forced glass shattering

variable: g_glassMaxPanesToBreakPerFrame 
type: int
current: 0
help: Max glass breaks, before auto-shattering is forced

variable: g_glassNoDecals 
type: int
current: 0
help: Turns off glass decals

variable: g_glassSystemEnable 
type: int
current: 1
help: Enables the new dynamic breaking system for glass

variable: g_groundAlignAll 
type: int
current: 1
help: Enable ground alignment for every character that supports it.

variable: g_groundeffectsdebug 
type: int
current: 0
help: Enable/disable logging for GroundEffects (2 = use non-deferred ray-casting)

variable: g_handleEvents 
type: int
current: 1
help: Activates the registration requirement for GameObjectEvents

variable: g_immersive 
type: int
current: 1
help: If set, multiplayer physics will be enabled

variable: g_joint_breaking 
type: int
current: 1
help: Toggles jointed objects breaking

variable: g_landingBobLandTimeFactor 
type: float
current: 0.1
help: Fraction of the bob time to be at full compression

variable: g_landingBobTimeFactor 
type: float
current: 0.2
help: Fraction of the bob time to release full compression

variable: g_language 
type: string
current: english
help: Defines which language pak is loaded

variable: g_languageAudio 
type: string
current: english
help: Will automatically match g_language setting unless specified otherwise

variable: g_localPacketRate 
type: float
current: 50
help: Packet rate locally on faked network connection

variable: g_multiplayerEnableVehicles 
type: int
current: 1
help: Enable vehicles in multiplayer

variable: g_no_breaking_by_objects 
type: int
current: 0
help: Prevents procedural breaking caused by rigid bodies

variable: g_no_secondary_breaking 
type: int
current: 0
help: Prevents secondary procedural breaks (to keep down memory usage)

variable: g_playerInteractorRadius 
type: float
current: 1.8
help: Maximum radius at which player can interact with other entities

variable: g_procedural_breaking 
type: int
current: 1
help: Toggles procedural mesh breaking (except explosion-breaking)

variable: g_saveLoadBasicEntityOptimization 
type: int
current: 1
help: Switch basic entity data optimization

variable: g_saveLoadExtendedLog 
type: int
current: 0
help: Enables the generation of detailed log information regarding saveloads

variable: g_saveLoadUseExportedEntityList 
type: int
current: 1
help: Only save entities in the editor-generated save list (if available). 0 is the previous behavior

variable: g_showUpdateState 
type: int
current: 0
help: Show the game object update state of any activated entities; 3-4 -- AI objects only

variable: g_spectatorCollisions 
type: int
current: 1
help: Collide against the geometry in spectator mode

variable: g_statisticsMode 
type: int
current: 2
help: Statistics mode
 0 - disabled
 1 - enabled crysis mode
 2 - enabled K01 mode


variable: g_syncClassRegistry 
type: int
current: 0
help: synchronize class registry from server to clients

variable: g_tree_cut_reuse_dist 
type: float
current: 0
help: Maximum distance from a previously made cut that allows reusing

variable: g_userNeverAutoSignsIn 
type: int
current: 0
help: for autobuilds never automatically bring up the user sign in window, if the user isn't signed in. Can affect performance and skew performance test results. Has to be added to system.cfg, doesn't work if added to the commandline!

variable: g_useSinglePosition 
type: int
current: 1
help: Activates the new Single Position update order

variable: g_useXMLCPBinForSaveLoad REQUIRE_LEVEL_RELOAD
type: int
current: 1
help: Use XML compressed binary format for save and loads. DON'T CHANGE THIS DURING RUNTIME!

variable: g_visibilityTimeout 
type: int
current: 0
help: Adds visibility timeout to IsProbablyVisible() calculations

variable: g_visibilityTimeoutTime 
type: float
current: 30
help: Visibility timeout time used by IsProbablyVisible() calculations

variable: g_waterHitOnly 
type: int
current: 0
help: Bullet hit FX appears on water and not what's underneath

variable: g_XMLCPBAddExtraDebugInfoToXmlDebugFiles 
type: int
current: 0
help: When the xml debug files are activated, this option adds the name and entity class name to every entity reference in the .xml .

variable: g_XMLCPBBlockQueueLimit REQUIRE_APP_RESTART
type: int
current: 6
help: Limits the number of blocks to queue for saving, causes a main thread stall if exceeded. 0 for no limit.

variable: g_XMLCPBGenerateXmlDebugFiles 
type: int
current: 0
help: Activates the generation, for debug purposes, of a text xml file each time that there is a binary save (LastBinarySaved.xml) or load (LastBinaryLoaded.xml).

variable: g_XMLCPBSizeReportThreshold 
type: int
current: 2048
help: defines the minimun size needed for nodes to be shown in the xml report file

variable: g_XMLCPBUseExtraZLibCompression 
type: int
current: 1
help: Enables an extra zlib compression pass on the binary saves.

variable: game_load_screen_max_fps 
type: float
current: 30
help: Max frame rate to update the game load screen sequence.

variable: game_load_screen_sequence_fixed_fps 
type: float
current: 60
help: Fixed frame rate fed to updates of the game load screen sequence.

variable: game_load_screen_sequence_to_auto_play 
type: string
current: 
help: Game load screen UiCanvas animation sequence to play on load.

variable: game_load_screen_uicanvas_path 
type: string
current: 
help: Game load screen UiCanvas path.

variable: gm_asserts 
type: int
current: 0
help: GridMate asserts.

variable: gm_debugdraw 
type: int
current: 64
help: GridMate debugging visualization level.

variable: gm_dumpstats 
type: int
current: 0
help: Enable dumping of net profiling stats to file.

variable: gm_dumpstats_file 
type: string
current: net_profile.log
help: Target file for net profiling stats.

variable: gm_stats_interval_msec 
type: int
current: 1000
help: Net profiling statistics will be gathered on this interval (in milliseconds). If stats are being dumped to file, it will also occur on this interval.

variable: gm_tracelevel 
type: int
current: 0
help: GridMate debugging trace verbosity level.

variable: gpu_particle_physics REQUIRE_APP_RESTART
type: int
current: 0
help: Enable GPU physics if available (0=off / 1=enabled).

variable: gt_show 
type: int
current: 0
help: Show Game Tokens debug info. 1=screen and log, 2=screen only, 3=log only

variable: gt_showFilter 
type: string
current: 
help: In the historic list only shows game tokens that include the filter string

variable: gt_showLines 
type: int
current: 25
help: How many lines is used by the historic list

variable: gt_showPosX 
type: int
current: 0
help: Defines the starting column in screen for game tokens debug info

variable: gt_showPosY 
type: int
current: 0
help: Defines the starting line in screen for game tokens debug info

variable: hmd_debug_camera 
type: int
current: 0
help: Enable/disable HMD debug camera

variable: hmd_debug_info 
type: int
current: 0
help: Enable/disable HMD and VR controller debug info/rendering

variable: hmd_social_screen 
type: int
current: 0
help: Selects the social screen mode: 
-1- Off
0 - Undistorted left eye
1 - Undistorted right eye


variable: http_password 
type: string
current: password
help: Password for http administration

variable: i_debug 
type: int
current: 0
help: Toggles input event debugging.
Usage: i_debug [0/1]
Default is 0 (off). Set to 1 to spam console with key events (only press and release).

variable: i_debugDigitalButtons 
type: int
current: 0
help: render controller's digital button pressed info
Usage: 0 (off), 1(on)Default is 0. Value must be >=0

variable: i_inventory_capacity 
type: int
current: 64
help: Players inventory capacity

variable: i_itemSystemDebugMemStats 
type: int
current: 0
help: Display item memory stats on screen

variable: i_kinectDebug 
type: int
current: 1
help: 1 = Draws skeleton on screen 
2 = Draws colour + depth buffers on screen 
3 = Draws both skeleton and buffers

variable: i_kinectXboxConnect 
type: int
current: 1
help: Allow connection to Xbox for Kinect input.
Usage: 0 = disabled, 1 = allow connection, 2 = force connection (don't try local Kinect on system) 
Default is 1

variable: i_kinectXboxConnectIP 
type: string
current: 
help: Usage: force set a specific Xbox Game IP to connect to for Kinect input (use default xbox from neighbourhood when empty) 
Default is empty 

variable: i_kinectXboxConnectPort 
type: int
current: 62455
help: Port used to connect to Xbox for Kinect input.
Default is 62455 (random value different than remote compiler)

variable: i_kinGlobalExpCorrectionFactor 
type: float
current: 0.5
help: Trend correction factor for double exponential smoothing.

variable: i_kinGlobalExpDeviationRadius 
type: float
current: 0.04
help: Maximum deviation radius from prediction for double exponential smoothing.

variable: i_kinGlobalExpJitterRadius 
type: float
current: 0.05
help: Radius to determine jitter correction for double exponential smoothing.

variable: i_kinGlobalExpPredictionFactor 
type: float
current: 0.5
help: Prediction factor for double exponential smoothing.

variable: i_kinGlobalExpSmoothFactor 
type: float
current: 0.5
help: Smoothing factor for double exponential smoothing.

variable: i_kinSkeletonMovedDistance 
type: float
current: 0.125
help: Distance used to determine if kinect skeleton has moved in the play space.

variable: i_kinSkeletonSmoothType 
type: int
current: 1
help: Kinect skeleton tracking smooth type: 0 = not smoothed, 1 = using Double Exponential Smoothing

variable: i_listActionMaps 
type: int
current: 0
help: List action maps/filters on screen (1 = list all, 2 = list blocked inputs only)

variable: i_lying_item_limit_mp 
type: int
current: 64
help: Max number of items lying around in a level (<= 0 means no limit). Only works in multiplayer.

variable: i_lying_item_limit_sp 
type: int
current: 64
help: Max number of items lying around in a level (<= 0 means no limit). Only works in singleplayer.

variable: i_precache DUMPTODISK
type: int
current: 1
help: Enables precaching of items during level loading.

variable: i_seatedTracking 
type: int
current: 1
help: 1 = Enable seated skeleton tracking

variable: i_synergyScreenName 
type: string
current: Console
help: Usage: Set a screen name for this target
Default is "Console"

variable: i_synergyServer 
type: string
current: 
help: Usage: Set the host ip or hostname for the synergy client to connect to
Default is empty 

variable: i_useKinect 
type: int
current: 1
help: Use Kinect

variable: joinin_uriScheme 
type: string
current: game
help: The URI scheme for JoinIn link creation

variable: level_load_screen_max_fps 
type: float
current: 0
help: Max frame rate to update the level load screen sequence.

variable: level_load_screen_sequence_fixed_fps 
type: float
current: 0
help: Fixed frame rate fed to updates of the level load screen sequence.

variable: level_load_screen_sequence_to_auto_play 
type: string
current: 
help: Level load screen UiCanvas animation sequence to play on load.

variable: level_load_screen_uicanvas_path 
type: string
current: 
help: Level load screen UiCanvas path.

variable: log_EnableRemoteConsole DUMPTODISK
type: int
current: 1
help: enables/disables the remote console

variable: log_IncludeTime 
type: int
current: 1
help: Toggles time stamping of log entries.
Usage: log_IncludeTime [0/1/2/3/4/5]
  0=off (default)
  1=current time
  2=relative time
  3=current+relative time
  4=absolute time in seconds since this mode was started
  5=current time+server time  6=current date+current time

variable: log_Module 
type: string
current: 
help: Only show warnings from specified module

variable: log_RemoteConsoleAllowedAddresses DUMPTODISK
type: string
current: 
help: COMMA separated list of allowed hosts or IP addresses which can connect

variable: log_RemoteConsolePort DUMPTODISK
type: int
current: 4600
help: Base port (4600 for example) for remote console to listen on.  It will start there and continue upwards until an unused one is found.

variable: log_SpamDelay 
type: float
current: 0
help: Sets the minimum time interval between messages classified as spam

variable: log_tick 
type: float
current: 0
help: When not 0, writes tick log entry into the log file, every N seconds

variable: log_Verbosity DUMPTODISK
type: int
current: 3
help: defines the verbosity level for log messages written to console
-1=suppress all logs (including eAlways)
0=suppress all logs(except eAlways)
1=additional errors
2=additional warnings
3=additional messages
4=additional comments

variable: log_VerbosityOverridesWriteToFile DUMPTODISK
type: int
current: 1
help: when enabled, setting log_verbosity to 0 will stop all logging including writing to file

variable: log_WriteToFile DUMPTODISK
type: int
current: 1
help: toggle whether to write log to file (game.log)

variable: log_WriteToFileVerbosity DUMPTODISK
type: int
current: 3
help: defines the verbosity level for log messages written to files
-1=suppress all logs (including eAlways)
0=suppress all logs(except eAlways)
1=additional errors
2=additional warnings
3=additional messages
4=additional comments

variable: lua_debugger 
type: int
current: 0
help: Enables the script debugger.
1 to trigger on breakpoints and errors
2 to only trigger on errors
3 use the LUA Debugger in Woodpecker
Usage: lua_debugger [0/1/2/3]

variable: lua_stackonmalloc 
type: int
current: 0
help: Enables/disables logging of the called lua functions and respective callstacks, whenever a new lua object is instantiated.

variable: lua_StopOnError 
type: int
current: 0
help: Stops on error

variable: MemInfo 
type: int
current: 0
help: Display memory information by modules
1=on, 0=off

variable: MemStats 
type: int
current: 0
help: 0/x=refresh rate in milliseconds
Use 1000 to switch on and 0 to switch off
Usage: MemStats [0..]

variable: MemStatsMaxDepth 
type: int
current: 4
help: 

variable: MemStatsThreshold 
type: int
current: 32000
help: 

variable: metastream_enabled READONLY
type: int
current: 0
help: State of the Metastream HTTP server (READONLY)

variable: metastream_serveroptions 
type: string
current: document_root=Gems/Metastream/Files;listening_ports=8082
help: Metastream HTTP Server options

variable: mfx_Debug 
type: int
current: 0
help: Turns on MaterialEffects debug messages. 1=Collisions, 2=Breakage, 3=Both

variable: mfx_DebugFlowGraphFX 
type: int
current: 0
help: Turns on Material FlowGraph FX manager debug messages.

variable: mfx_DebugVisual 
type: int
current: 0
help: Turns on/off visual debugging for MFX system

variable: mfx_DebugVisualFilter 
type: string
current: 
help: 

variable: mfx_Enable 
type: int
current: 1
help: Enables MaterialEffects.

variable: mfx_EnableAttachedEffects 
type: int
current: 1
help: Enable attached effects (characters, entities...)

variable: mfx_EnableFGEffects 
type: int
current: 1
help: Enabled Flowgraph based Material effects. Default: On

variable: mfx_ParticleImpactThresh 
type: float
current: 2
help: Impact threshold for particle effects. Default: 2.0

variable: mfx_pfx_maxDist 
type: float
current: 35
help: Max dist (how far away before scale is clamped)

variable: mfx_pfx_maxScale 
type: float
current: 1.5
help: Max scale (when particle is far)

variable: mfx_pfx_minScale 
type: float
current: 0.5
help: Min scale (when particle is close)

variable: mfx_RaisedSoundImpactThresh 
type: float
current: 3.5
help: Impact threshold for sound effects if we're rolling. Default: 3.5

variable: mfx_SerializeFGEffects 
type: int
current: 1
help: Serialize Flowgraph based effects. Default: On

variable: mfx_SoundImpactThresh 
type: float
current: 1.5
help: Impact threshold for sound effects. Default: 1.5

variable: mfx_Timeout 
type: float
current: 0.01
help: Timeout (in seconds) to avoid playing effects too often

variable: mn_allowEditableDatabasesInPureGame 
type: int
current: 0
help: Do not store editable databases

variable: mn_LogToFile 
type: int
current: 0
help: Dumps all mann event logging to the file

variable: mn_override_preview_file 
type: string
current: 
help: Default CryMannequin preview file to use. When set it overrides the corresponding sandbox setting.

variable: mn_sequence_path 
type: string
current: Animations/Mannequin/FragmentSequences/
help: Default path for CryMannequin sequence files

variable: mov_cameraPrecacheTime 
type: float
current: 1
help: 

variable: mov_NoCutscenes 
type: int
current: 0
help: Disable playing of Cut-Scenes

variable: mov_overrideCam 
type: string
current: 
help: Set the camera used for the sequence which overrides the camera track info in the sequence.
Use the Camera Name for Object Entity Cameras (Legacy) or the Entity ID for Component Entity Cameras.

variable: movie_physicalentity_animation_lerp 
type: float
current: 0.85
help: Lerp value for animation-driven physical entities

variable: net_debugVerboseLevel 
type: int
current: 0
help: 

variable: net_disconnect_on_rmi_error DUMPTODISK
type: int
current: 0
help: Disconnect remote connections on script exceptions during RMI calls

variable: net_lanbrowser 
type: int
current: 0
help: enable lan games browser

variable: net_log_remote_methods DUMPTODISK
type: int
current: 0
help: Log remote method invocations

variable: net_phys_debug 
type: int
current: 0
help: 

variable: net_phys_lagsmooth 
type: float
current: 0.1
help: 

variable: net_phys_pingsmooth 
type: float
current: 0.1
help: 

variable: net_receiveQueueSize 
type: int
current: 20971520
help: 

variable: net_sendQueueSize 
type: int
current: 5242880
help: 

variable: osm_debug 
type: int
current: 0
help: Enables/disables overload scene manager debug view

variable: osm_enabled 
type: int
current: 0
help: Enables/disables overload scene manager

variable: osm_fbMinScale 
type: float
current: 0.66
help: The minimum scale factor the overload scene manager will drop to

variable: osm_fbScaleDeltaDown 
type: float
current: 5
help: The speed multiplier for the overload scene manager frame buffer scaling down

variable: osm_fbScaleDeltaUp 
type: float
current: 1
help: The speed multiplier for the overload scene manager frame buffer scaling up

variable: osm_historyLength 
type: int
current: 5
help: Overload scene manager number of frames to record stats for

variable: osm_stress 
type: int
current: 0
help: Stresses the overload scene manager
1 = warp the FPS smoothly but randomly.
2 = warp the framebuffer scaling completely randomly

variable: osm_targetFPS 
type: float
current: 28
help: Overload scene manager target frame rate

variable: osm_targetFPSTolerance 
type: float
current: 1
help: The overload scene manager will make adjustments if fps is outside targetFPS +/- this value

variable: output_to_hmd 
type: int
current: 0
help: Enable/disable output to any connected HMD (for VR)

variable: p_accuracy_LCPCG 
type: float
current: 0.005
help: Desired accuracy of LCP CG solver (velocity-related, m/s)

variable: p_accuracy_LCPCG_no_improvement 
type: float
current: 0.05
help: Required LCP CG accuracy that allows to stop if there was no improvement after p_max_LCPCG_fruitless_iters

variable: p_accuracy_MC 
type: float
current: 0.002
help: Desired accuracy of microcontact solver (velocity-related, m/s)

variable: p_approx_caps_len 
type: float
current: 1.2
help: Breakable trees are approximated with capsules of this length (0 disables approximation)

variable: p_break_on_validation 
type: int
current: 0
help: Toggles break on validation error.
Usage: p_break_on_validation [0/1]
Default is 0 (off). Issues DebugBreak() call in case of
a physics parameter validation error.

variable: p_CharacterIK 
type: int
current: 1
help: Toggles character IK.
Usage: p_characterik [0/1]
Default is 1 (on). Set to 0 to disable inverse kinematics.

variable: p_check_out_of_bounds 
type: int
current: 3
help: Check for physics entities outside world (terrain) grid:
1 - Enable raycasts; 2 - Enable proximity checks; 3 - Both

variable: p_collision_mode 
type: int
current: 0
help: This variable is obsolete.

variable: p_cull_distance 
type: float
current: 100
help: Culling distance for physics helpers rendering

variable: p_damping_group_size 
type: int
current: 8
help: Sets contacting objects group size
before group damping is used.Usage: p_damping_group_size 3
Used for internal tweaking only.

variable: p_debug_explosions 
type: int
current: 0
help: Turns on explosions debug mode

variable: p_debug_joints 
type: int
current: 0
help: If set, breakable objects will log tensions at the weakest spots

variable: p_do_step 
type: int
current: 0
help: Steps physics system forward when in single step mode.
Usage: p_do_step 1
Default is 0 (off). Each 'p_do_step 1' instruction allows
the physics system to advance a single step.

variable: p_draw_helpers 
type: string
current: 0
help: Same as p_draw_helpers_num, but encoded in letters
Usage [Entity_Types]_[Helper_Types] - [t|s|r|R|l|i|g|a|y|e]_[g|c|b|l|t(#)]
Entity Types:
t - show terrain
s - show static entities
r - show sleeping rigid bodies
R - show active rigid bodies
l - show living entities
i - show independent entities
g - show triggers
a - show areas
y - show rays in RayWorldIntersection
e - show explosion occlusion maps
Helper Types
g - show geometry
c - show contact points
b - show bounding boxes
l - show tetrahedra lattices for breakable objects
j - show structural joints (will force translucency on the main geometry)
t(#) - show bounding volume trees up to the level #
f(#) - only show geometries with this bit flag set (multiple f's stack)
Example: p_draw_helpers larRis_g - show geometry for static, sleeping, active, independent entities and areas

variable: p_draw_helpers_num 
type: int
current: 0
help: Toggles display of various physical helpers. The value is a bitmask:
bit 0  - show contact points
bit 1  - show physical geometry
bit 8  - show helpers for static objects
bit 9  - show helpers for sleeping physicalized objects (rigid bodies, ragdolls)
bit 10 - show helpers for active physicalized objects
bit 11 - show helpers for players
bit 12 - show helpers for independent entities (alive physical skeletons,particles,ropes)
bits 16-31 - level of bounding volume trees to display (if 0, it just shows geometry)
Examples: show static objects - 258, show active rigid bodies - 1026, show players - 2050

variable: p_enforce_contacts 
type: int
current: 1
help: This variable is obsolete.

variable: p_ent_grid_use_obb 
type: int
current: 1
help: Whether to use OBBs rather than AABBs for the entity grid setup for brushes

variable: p_fixed_timestep 
type: float
current: 0
help: Toggles fixed time step mode.Usage: p_fixed_timestep [0/1]
Forces fixed time step when set to 1. When set to 0, the
time step is variable, based on the frame rate.

variable: p_fly_mode 
type: int
current: 0
help: Toggles fly mode.
Usage: p_fly_mode [0/1]

variable: p_force_sync 
type: int
current: 1
help: Forces main thread to wait on physics if not completed in time

variable: p_GEB_max_cells 
type: int
current: 1024
help: Specifies the cell number threshold after which GetEntitiesInBox issues a warning

variable: p_gravity_z 
type: float
current: -13
help: 

variable: p_group_damping 
type: float
current: 0.5
help: Toggles damping for object groups.
Usage: p_group_damping [0/1]
Default is 1 (on). Used for internal tweaking only.

variable: p_joint_damage_accum 
type: float
current: 2
help: Default fraction of damage (tension) accumulated on a breakable joint

variable: p_joint_damage_accum_threshold 
type: float
current: 0.2
help: Default damage threshold (0..1) for p_joint_damage_accum

variable: p_joint_gravity_step 
type: float
current: 1
help: Time step used for gravity in breakable joints (larger = stronger gravity effects)

variable: p_jump_to_profile_ent 
type: int
current: 0
help: Move the local player next to the corresponding entity in the p_profile_entities list

variable: p_lattice_max_iters 
type: int
current: 100000
help: Limits the number of iterations of lattice tension solver

variable: p_limit_simple_solver_energy 
type: int
current: 1
help: Specifies whether the energy added by the simple solver is limited (0 or 1)

variable: p_list_active_objects 
type: int
current: 0
help: 

variable: p_log_lattice_tension 
type: int
current: 0
help: If set, breakable objects will log tensions at the weakest spots

variable: p_max_approx_caps 
type: int
current: 7
help: Maximum number of capsule approximation levels for breakable trees

variable: p_max_bone_velocity 
type: float
current: 10
help: Clamps character bone velocities estimated from animations

variable: p_max_contact_gap 
type: float
current: 0.01
help: Sets the gap, enforced whenever possible, between
contacting physical objects.Usage: p_max_contact_gap 0.01
This variable is used for internal tweaking only.

variable: p_max_contact_gap_player 
type: float
current: 0.01
help: Sets the safe contact gap for player collisions with
the physical environment.Usage: p_max_contact_gap_player 0.01
This variable is used for internal tweaking only.

variable: p_max_contact_gap_simple 
type: float
current: 0.03
help: Specifies the maximum contact gap for objects that use the simple solver

variable: p_max_contacts 
type: int
current: 150
help: Maximum contact number, after which contact reduction mode is activated

variable: p_max_debris_mass 
type: float
current: 10
help: Broken pieces with mass<=this limit use debris collision settings

variable: p_max_entity_cells 
type: int
current: 300000
help: Limits the number of entity grid cells an entity can occupy

variable: p_max_LCPCG_contacts 
type: int
current: 100
help: Maximum number of contacts that LCPCG solver is allowed to handle

variable: p_max_LCPCG_fruitless_iters 
type: int
current: 4
help: Maximum number of LCP CG iterations w/o improvement (defined by p_min_LCPCGimprovement)

variable: p_max_LCPCG_iters 
type: int
current: 5
help: Maximum number of LCP CG iterations

variable: p_max_LCPCG_microiters 
type: int
current: 12000
help: Limits the total number of per-contact iterations during one LCP CG iteration
(number of microiters = number of subiters * number of contacts)

variable: p_max_LCPCG_microiters_final 
type: int
current: 25000
help: Same as p_max_LCPCG_microiters, but for the final LCP CG iteration

variable: p_max_LCPCG_subiters 
type: int
current: 120
help: Limits the number of LCP CG solver inner iterations (should be of the order of the number of contacts)

variable: p_max_LCPCG_subiters_final 
type: int
current: 250
help: Limits the number of LCP CG solver inner iterations during the final iteration (should be of the order of the number of contacts)

variable: p_max_MC_iters 
type: int
current: 6000
help: Specifies the maximum number of microcontact solver iterations *per contact*

variable: p_max_MC_mass_ratio 
type: float
current: 100
help: Maximum mass ratio between objects in an island that MC solver is considered safe to handle

variable: p_max_MC_vel 
type: float
current: 15
help: Maximum object velocity in an island that MC solver is considered safe to handle

variable: p_max_object_splashes 
type: int
current: 3
help: Specifies how many splash events one entity is allowed to generate

variable: p_max_plane_contacts 
type: int
current: 8
help: Maximum number of contacts lying in one plane between two rigid bodies
(the system tries to remove the least important contacts to get to this value)

variable: p_max_plane_contacts_distress 
type: int
current: 4
help: Same as p_max_plane_contacts, but is effective if total number of contacts is above p_max_contacts

variable: p_max_player_velocity 
type: float
current: 150
help: Clamps players' velocities to this value

variable: p_max_substeps 
type: int
current: 5
help: Limits the number of substeps allowed in variable time step mode.
Usage: p_max_substeps 5
Objects that are not allowed to perform time steps
beyond some value make several substeps.

variable: p_max_substeps_large_group 
type: int
current: 5
help: Limits the number of substeps large groups of objects can make

variable: p_max_unproj_vel 
type: float
current: 2.5
help: Limits the maximum unprojection velocity request

variable: p_max_velocity 
type: float
current: 100
help: Clamps physicalized objects' velocities to this value

variable: p_max_world_step 
type: float
current: 0.2
help: Specifies the maximum step physical world can make (larger steps will be truncated)

variable: p_min_LCPCG_improvement 
type: float
current: 0.05
help: Defines a required residual squared length improvement, in fractions of 1

variable: p_min_MC_iters 
type: int
current: 4
help: Specifies the minmum number of microcontact solver iterations *per contact set* (this has precedence over p_max_mc_iters)

variable: p_min_separation_speed 
type: float
current: 0.02
help: Used a threshold in some places (namely, to determine when a particle
goes to rest, and a sliding condition in microcontact solver)

variable: p_net_debugDraw 
type: int
current: 0
help: Draw some debug graphics to help diagnose issues (requires p_draw_helpers to be switch on to work, e.g. p_draw_helpers rR_b)

variable: p_net_extrapmax 
type: float
current: 0.5
help: The maximum amount of time the client is allowed to extrapolate the position based on last received packet.

variable: p_net_interp 
type: float
current: 0.1
help: The amount of time which the client will lag behind received packet updates. High values result in smoother movement but introduces additional lag as a trade-off.

variable: p_net_sequencefrequency 
type: int
current: 256
help: The frequency at which sequence numbers increase per second, higher values add accuracy but go too high and the sequence numbers will wrap round too fast

variable: p_num_bodies_large_group 
type: int
current: 100
help: Group size to be used with p_max_substeps_large_group, in bodies

variable: p_num_startup_overload_checks 
type: int
current: 20
help: For this many frames after loading a level, check if the physics gets overloaded and freezes non-player physicalized objects that are slow enough

variable: p_num_threads 
type: int
current: 2
help: The number of internal physics threads

variable: p_penalty_scale 
type: float
current: 0.3
help: Scales the penalty impulse for objects that use the simple solver

variable: p_players_can_break 
type: int
current: 0
help: Whether living entities are allowed to break static objects with breakable joints

variable: p_profile 
type: int
current: 0
help: Enables group profiling of physical entities

variable: p_profile_entities 
type: int
current: 0
help: Enables per-entity time step profiling

variable: p_profile_functions 
type: int
current: 0
help: Enables detailed profiling of physical environment-sampling functions

variable: p_prohibit_unprojection 
type: int
current: 1
help: This variable is obsolete.

variable: p_proxy_highlight_range 
type: int
current: 800
help: Physics proxies with triangle counts >= p_proxy_highlight_threshold+p_proxy_highlight_range will get the maximum highlight

variable: p_proxy_highlight_threshold 
type: int
current: 200
help: Physics proxies with triangle counts large than this will be highlighted

variable: p_ray_fadeout 
type: float
current: 0.2
help: Fade-out time for ray physics helpers

variable: p_ray_peak_time 
type: float
current: 0
help: Rays that take longer then this (in ms) will use different color

variable: p_rope_collider_size_limit 
type: int
current: 0
help: Disables rope collisions with meshes having more triangles than this (0-skip the check)

variable: p_single_step_mode 
type: int
current: 0
help: Toggles physics system 'single step' mode.Usage: p_single_step_mode [0/1]
Default is 0 (off). Set to 1 to switch physics system (except
players) to single step mode. Each step must be explicitly
requested with a 'p_do_step' instruction.

variable: p_skip_redundant_colldet 
type: int
current: 1
help: Specifies whether to skip furher collision checks between two convex objects using the simple solver
when they have enough contacts between them

variable: p_splash_dist0 
type: float
current: 7
help: Range start for splash event distance culling

variable: p_splash_dist1 
type: float
current: 30
help: Range end for splash event distance culling

variable: p_splash_force0 
type: float
current: 10
help: Minimum water hit force to generate splash events at p_splash_dist0

variable: p_splash_force1 
type: float
current: 100
help: Minimum water hit force to generate splash events at p_splash_dist1

variable: p_splash_vel0 
type: float
current: 4.5
help: Minimum water hit velocity to generate splash events at p_splash_dist0

variable: p_splash_vel1 
type: float
current: 10
help: Minimum water hit velocity to generate splash events at p_splash_dist1

variable: p_tick_breakable 
type: float
current: 0.1
help: Sets the breakable objects structure update interval

variable: p_time_granularity 
type: float
current: 0.0001
help: Sets physical time step granularity.
Usage: p_time_granularity [0..0.1]
Used for internal tweaking only.

variable: p_unproj_vel_scale 
type: float
current: 10
help: Requested unprojection velocity is set equal to penetration depth multiplied by this number

variable: p_use_distance_contacts 
type: int
current: 0
help: Allows to use distance-based contacts (is forced off in multiplayer)

variable: p_use_unproj_vel 
type: int
current: 0
help: internal solver tweak

variable: p_wireframe_distance 
type: float
current: 40
help: Maximum distance at which wireframe is drawn on physics helpers

variable: pp_LoadOnlineAttributes REQUIRE_APP_RESTART
type: int
current: 1
help: Load online attributes

variable: pp_RichSaveGames 
type: int
current: 0
help: Enable RichSaveGame Format for SaveGames

variable: pp_RSFDebugWrite 
type: int
current: 1
help: When RichSaveGames are enabled, save plain XML Data alongside for debugging

variable: pp_RSFDebugWriteOnLoad 
type: int
current: 0
help: When RichSaveGames are enabled, save plain XML Data alongside for debugging when loading a savegame

variable: profile 
type: int
current: 0
help: Allows CPU profiling
Usage: profile #
Where # sets the profiling to:
	0: Profiling off
	1: Self Time
	2: Hierarchical Time
	3: Extended Self Time
	4: Extended Hierarchical Time
	5: Peaks Time
	6: Subsystem Info
	7: Calls Numbers
	8: Standard Deviation
	9: Memory Allocation
	10: Memory Allocation (Bytes)
	11: Stalls
	-1: Profiling enabled, but not displayed
Default is 0 (off)

variable: profile_additionalsub 
type: int
current: 0
help: Enable displaying additional sub-system profiling.
Usage: profile_additionalsub #
Where where # may be:
	0: no additional subsystem information
	1: display additional subsystem information
Default is 0 (off)

variable: profile_allthreads 
type: int
current: 0
help: Enables profiling of non-main threads.


variable: profile_callstack 
type: int
current: 0
help: Logs all Call Stacks of the selected profiler function for one frame

variable: profile_disk 
type: int
current: 1
help: Enables Disk Profiler (should be deactivated for final product)
The C++ function CryThreadSetName(threadid,"Name") needs to be called on thread creation.
0=off, 1=on screen, 2=on disk
Disk profiling may not work on all combinations of OS and CPUs
Usage: profile_disk [0/1/2]

variable: profile_disk_budget 
type: int
current: -1
help: Set the budget in KB for the current time frame
The default value is -1 (disabled)
Usage: profile_disk_budget [val]

variable: profile_disk_max_draw_items 
type: int
current: 10000
help: Set maximum number of IO statistics items to visualize
The default value is 2000
Usage: profile_disk_max_draw_items [num]

variable: profile_disk_max_items 
type: int
current: 10000
help: Set maximum number of IO statistics items to collect
The default value is 10000
Usage: profile_disk_max_items [num]

variable: profile_disk_timeframe 
type: float
current: 5
help: Set maximum keeping time for collected IO statistics items in seconds
The default value is 5 sec
Usage: profile_disk_timeframe [sec]

variable: profile_disk_type_filter 
type: int
current: -1
help: Set the tasks to be filtered
Allowed values are: Textures = 1, Geometry = 2, Animation = 3, Music = 4, Sound = 5The default value is -1 (disabled)
Usage: profile_disk_timeframe [val]

variable: profile_filter 
type: string
current: 
help: Profiles a specified subsystem.
Usage: profile_filter subsystem
Where 'subsystem' may be:
Renderer
3DEngine
Animation
AI
Entity
Physics
Sound
System
Game
Editor
Script
Network

variable: profile_filter_thread 
type: string
current: 
help: Profiles a specified thread only.
Usage: profile_filter threadName
Where 'threadName' may be:
Main
Renderer
Streaming
etc...

variable: profile_graph 
type: int
current: 0
help: Enable drawing of profiling graph.

variable: profile_graphScale 
type: float
current: 100
help: Sets the scale of profiling histograms.
Usage: profileGraphScale 100

variable: profile_log 
type: int
current: 0
help: Logs profiler output

variable: profile_network 
type: int
current: 0
help: Enables network profiling

variable: profile_pagefaults 
type: int
current: 0
help: Enable drawing of page faults graph.

variable: profile_peak 
type: float
current: 10
help: Profiler Peaks Tolerance in Milliseconds

variable: profile_peak_display 
type: float
current: 8
help: hot to cold time for peak display

variable: profile_sampler 
type: float
current: 0
help: Set to 1 to start sampling profiling

variable: profile_sampler_max_samples 
type: float
current: 2000
help: Number of samples to collect for sampling profiler

variable: profile_smooth 
type: float
current: 1
help: Profiler exponential smoothing interval (seconds)

variable: profile_weighting 
type: int
current: 1
help: Profiler smoothing mode: 0 = legacy, 1 = average, 2 = peak weighted, 3 = peak hold

variable: profileStreaming 
type: int
current: 0
help: Profiles streaming of different assets.
Usage: profileStreaming [0/1/2]
	1: Graph displayed as points.	2: Graph displayed as lines.Default is 0 (off).

variable: q_Renderer 
type: int
current: 3
help: Defines the quality of Renderer
Usage: q_Renderer 0=low/1=med/2=high/3=very high (default)

variable: q_ShaderFX 
type: int
current: 3
help: Defines the shader quality of FX
Usage: q_ShaderFX 0=low/1=med/2=high/3=very high (default)

variable: q_ShaderGeneral 
type: int
current: 3
help: Defines the shader quality of General
Usage: q_ShaderGeneral 0=low/1=med/2=high/3=very high (default)

variable: q_ShaderGlass 
type: int
current: 3
help: Defines the shader quality of Glass
Usage: q_ShaderGlass 0=low/1=med/2=high/3=very high (default)

variable: q_ShaderHDR 
type: int
current: 3
help: Defines the shader quality of HDR
Usage: q_ShaderHDR 0=low/1=med/2=high/3=very high (default)

variable: q_ShaderIce 
type: int
current: 3
help: Defines the shader quality of Ice
Usage: q_ShaderIce 0=low/1=med/2=high/3=very high (default)

variable: q_ShaderMetal 
type: int
current: 3
help: Defines the shader quality of Metal
Usage: q_ShaderMetal 0=low/1=med/2=high/3=very high (default)

variable: q_ShaderPostProcess 
type: int
current: 3
help: Defines the shader quality of PostProcess
Usage: q_ShaderPostProcess 0=low/1=med/2=high/3=very high (default)

variable: q_ShaderShadow 
type: int
current: 3
help: Defines the shader quality of Shadow
Usage: q_ShaderShadow 0=low/1=med/2=high/3=very high (default)

variable: q_ShaderSky 
type: int
current: 3
help: Defines the shader quality of Sky
Usage: q_ShaderSky 0=low/1=med/2=high/3=very high (default)

variable: q_ShaderTerrain 
type: int
current: 3
help: Defines the shader quality of Terrain
Usage: q_ShaderTerrain 0=low/1=med/2=high/3=very high (default)

variable: q_ShaderVegetation 
type: int
current: 3
help: Defines the shader quality of Vegetation
Usage: q_ShaderVegetation 0=low/1=med/2=high/3=very high (default)

variable: q_ShaderWater 
type: int
current: 2
help: Defines the shader quality of Water
Usage: q_ShaderWater 0=low/1=med/2=high/3=very high (default)

variable: r_3MonHack 
type: int
current: 0
help: Enables 3 monitor hack hud in center

variable: r_3MonHackHUDFOVX 
type: float
current: 28
help: 3 monitor hack hud in center - X FOV

variable: r_3MonHackHUDFOVY 
type: float
current: 60
help: 3 monitor hack hud in center - Y FOV

variable: r_3MonHackLeftCGFOffsetX 
type: float
current: 0.93
help: 3 monitor hack hud in center - Adds position offset in X direction to all left CGF planes

variable: r_3MonHackRightCGFOffsetX 
type: float
current: -0.93
help: 3 monitor hack hud in center - Adds position offset in X direction to all right CGF planes

variable: r_AllowLiveMoCap 
type: int
current: 0
help: Offers the LiveCreate MoCap Editor on Editor Startup when 1

variable: r_AlphaBlendLayerCount 
type: int
current: 0
help: Set the number of layers to use for alpha blending to allow for order independent transparency.
0: disabled
1: Use an extra alpha depth check to over or under blend with existing alpha providing more accuracy.
2-4: Use additional layers to gaurantee correct alpha n layers deep.

variable: r_AntialiasingMode 
type: int
current: 3
help: Enables post process based anti-aliasing modes.
Usage: r_AntialiasingMode [n]
0: NO AA
1: FXAA
2: SMAA 1tx
3: TAA


variable: r_AntialiasingModeDebug 
type: int
current: 0
help: Enables AA debugging views
Usage: r_AntialiasingModeDebug [n]1: Display edge detection2: Zoom image 2x3: Zoom image 2x + display edge detection4: Zoom image 4x, etc

variable: r_AntialiasingTAAClampingFactor 
type: float
current: 1.25
help: Controls the history clamping factor for TAA. Higher values will cause more ghosting but less flickering. Acceptable values between 0.75 and 2.0


variable: r_AntialiasingTAAJitterPattern 
type: int
current: 7
help: Selects TAA sampling pattern.
  0: no subsamples
  1: 2x
  2: 3x
  3: 4x
  4: 8x
  5: sparse grid 8x8
  6: random
  7: Halton 8x
  8: Halton random

variable: r_AntialiasingTAANewFrameWeight 
type: float
current: 0.05
help: The weight controlling how much of the current frame is used when integrating with the exponential history buffer.


variable: r_AntialiasingTAASharpening 
type: float
current: 0.1
help: Enables TAA sharpening.


variable: r_AntialiasingTAAUseAntiFlickerFilter 
type: int
current: 1
help: Enables TAA anti-flicker filtering.


variable: r_AntialiasingTAAUseJitterMipBias 
type: int
current: 1
help: Allows mip map biasing on textures when jitter is enabled


variable: r_AntialiasingTAAUseVarianceClamping 
type: int
current: 0
help: Allows variance-based color clipping. Decreases ghosting but may increase flickering artifacts.


variable: r_ApplyToonShading 
type: int
current: 0
help: Disable/Enable Toon Shading render mode
  0: Off
  1: Toon Shading on


variable: r_AssetProcessorShaderCompiler 
type: int
current: 0
help: Enables using the Asset Processor as a proxy for the shader compiler if its not reachable directly.
Usage: r_AssetProcessorShaderCompiler 1
Default is 0 (disabled)

variable: r_auxGeom 
type: int
current: 1
help: 

variable: r_Batching 
type: int
current: 1
help: Enable/disable render items batching
Usage: r_Batching [0/1]


variable: r_BatchType 
type: int
current: 0
help: 0 - CPU friendly.
1 - GPU friendly.
2 - Automatic.


variable: r_Beams 
type: int
current: 1
help: Toggles volumetric light beams.
Usage: r_Beams [0/1]


variable: r_BreakOnError 
type: int
current: 0
help: calls debugbreak on illegal behaviour

variable: r_Brightness DUMPTODISK
type: float
current: 0.5
help: Sets the display brightness (fast, needs hardware support, also affects HUD and desktop)
r_NoHWGamma must be set to 0 for this to have an effect.
Usage: r_Brightness 0.5
Default is 0.5.

variable: r_buffer_banksize 
type: int
current: 4
help: the bank size in MB for buffer pooling

variable: r_buffer_enable_lockless_updates 
type: int
current: 1
help: enable/disable lockless buffer updates on platforms that support them

variable: r_buffer_pool_defrag_dynamic 
type: int
current: 0
help: enable/disable runtime defragmentation of dynamic buffers

variable: r_buffer_pool_defrag_max_moves 
type: int
current: 64
help: maximum number of moves the defragmentation system is allowed to perform per frame

variable: r_buffer_pool_defrag_static 
type: int
current: 0
help: enable/disable runtime defragmentation of static buffers

variable: r_buffer_pool_max_allocs 
type: int
current: 65520
help: the maximum number of allocations per buffer pool if defragmentation is enabled

variable: r_buffer_sli_workaround 
type: int
current: 0
help: enable SLI workaround for buffer pooling

variable: r_CBufferUseNativeDepth 
type: int
current: 1
help: 1= enable, 0 = disable
Usage: r_CBufferUseNativeDepth [0/1]

variable: r_Character_NoDeform 
type: int
current: 0
help: 

variable: r_ChromaticAberration 
type: float
current: 0
help: Chromatic aberration amount
Usage: r_ChromaticAberration [Value]

variable: r_ClearGMEMGBuffer 
type: int
current: 0
help: GMEM G-Buffer Clear
Usage: 
0 no clearing
1 full screen clear pass before Z-Pass


variable: r_CloudsDebug 
type: int
current: 0
help: Toggles debugging mode for clouds.Usage: r_CloudsDebug [0/1/2]
Usage: r_CloudsDebug = 1: render just screen imposters
Usage: r_CloudsDebug = 2: render just non-screen imposters
Default is 0 (off)

variable: r_CloudsUpdateAlways 
type: int
current: 0
help: Toggles updating of clouds each frame.
Usage: r_CloudsUpdateAlways [0/1]
Default is 0 (off)

variable: r_ColorBits DUMPTODISK
type: int
current: 32
help: Sets the color resolution, in bits per pixel. Default is 32.
Usage: r_ColorBits [32/24/16/8]

variable: r_ColorGrading 
type: int
current: 1
help: Enables color grading.
Usage: r_ColorGrading [0/1]

variable: r_ColorGradingCharts 
type: int
current: 1
help: Enables color grading via color charts.
Usage: r_ColorGradingCharts [0/1]

variable: r_ColorGradingChartsCache 
type: int
current: 0
help: Enables color grading charts update caching.
Usage: r_ColorGradingCharts [0/1/2/etc]
Default is 4 (update every 4 frames), 0 - always update, 1- update every other frame

variable: r_ColorGradingFilters 
type: int
current: 1
help: Enables color grading.
Usage: r_ColorGradingFilters [0/1]

variable: r_ColorGradingLevels 
type: int
current: 1
help: Enables color grading.
Usage: r_ColorGradingLevels [0/1]

variable: r_ColorGradingSelectiveColor 
type: int
current: 1
help: Enables color grading.
Usage: r_ColorGradingSelectiveColor [0/1]

variable: r_ColorRangeCompression 
type: int
current: 0
help: Enables color range compression to account for the limited RGB range of TVs.
  0: Disabled (full extended range)
  1: Range 16-235


variable: r_ColorSpace 
type: int
current: 0
help: Toggles Color Space conversion
Usage: r_ColorSpace
0 sRGB0 - Most accurate (default)
1 sRGB1 - Cheap approximation
2 sRGB2 - Cheapest approximation


variable: r_ConditionalRendering 
type: int
current: 0
help: Enables conditional rendering .

variable: r_ConsoleBackbufferHeight DUMPTODISK
type: int
current: 720
help: console specific backbuffer resolution - height

variable: r_ConsoleBackbufferWidth DUMPTODISK
type: int
current: 1152
help: console specific backbuffer resolution - width

variable: r_constantbuffer_banksize 
type: int
current: 4
help: the bank size in MB for constant buffers pooling

variable: r_constantbuffer_watermarm 
type: int
current: 64
help: the threshold aftyer which constants buffers will reclaim memory

variable: r_Contrast DUMPTODISK
type: float
current: 0.5
help: Sets the display contrast (fast, needs hardware support, also affects HUD and desktop)
r_NoHWGamma must be set to 0 for this to have an effect.
Usage: r_Contrast 0.5
Default is 0.5.

variable: r_CustomResHeight 
type: int
current: 0
help: Height of custom resolution rendering

variable: r_CustomResMaxSize 
type: int
current: -1
help: Maximum resolution of custom resolution rendering. A value of -1 sets the maximum to the upper limit of the device.

variable: r_CustomResPreview 
type: int
current: 1
help: Enable/disable preview of custom resolution rendering in viewport(0 - no preview, 1 - scaled to match viewport, 2 - custom resolution clipped to viewport

variable: r_CustomResWidth 
type: int
current: 0
help: Width of custom resolution rendering

variable: r_CustomVisions 
type: int
current: 3
help: Enables custom visions, like heatvision, binocular view, etc.
Usage: r_CustomVisions [0/1/2/3]
Default is 0 (disabled). 1 enables. 2 - cheaper version, no post processing. 3 - cheaper post version

variable: r_D3D12SubmissionThread 
type: int
current: 1
help: run DX12 command queue submission tasks from a dedicated thread

variable: r_DebugFontRendering 
type: int
current: 0
help: 0=off, 1=display various features of the font rendering to verify function and to document usage

variable: r_DebugGBuffer 
type: int
current: 0
help: Debug view for gbuffer attributes
  0 - Disabled
  1 - Normals
  2 - Smoothness
  3 - Reflectance
  4 - Albedo
  5 - Lighting model
  6 - Translucency
  7 - Sun self-shadowing
  8 - Subsurface scattering
  9 - Specular validation overlay


variable: r_DebugLightLayers DUMPTODISK
type: int
current: 0
help: 1 - Direct lighting, diffuse only.
2 - Add environment ambient lighting, diffuse only.
3 - Add specular term.
4 - Add AO.
5 - Add textures.
6 - Add fog.
7 - Add tone mapping / bloom / color grading.


variable: r_DebugLights 
type: int
current: 0
help: Display dynamic lights for debugging.
Usage: r_DebugLights [0/1/2/3]
Default is 0 (off). Set to 1 to display centers of light sources,
or set to 2 to display light centers and attenuation spheres, 3 to get light properties to the screen

variable: r_DebugLightVolumes 
type: int
current: 0
help: 0=Disable
1=Enable
Usage: r_DebugLightVolumes[0/1]

variable: r_DebugRefraction 
type: int
current: 0
help: Debug refraction usage. Displays red instead of refraction
Usage: r_DebugRefraction
Default is 0 (off)

variable: r_DebugRenderMode 
type: int
current: 0
help: 

variable: r_DebugUIDraw2dDefer 
type: int
current: 0
help: 0=draws 2D immediately in debug tests, 1=defers calls in debug tests

variable: r_DebugUIDraw2dFont 
type: int
current: 0
help: 0=off, 1=display various features of the UI font rendering to verify function and to document usage

variable: r_DebugUIDraw2dImage 
type: int
current: 0
help: 0=off, 1=display various features of the UI image rendering to verify function and to document usage

variable: r_DebugUIDraw2dLine 
type: int
current: 0
help: 0=off, 1=display various features of the UI line rendering to verify function and to document usage

variable: r_DeferredDecals DUMPTODISK
type: int
current: 1
help: Toggles deferred decals.
Usage: r_DeferredDecals [0/1]
Default is 1 (enabled), 0 Disabled. 

variable: r_deferredDecalsDebug DUMPTODISK
type: int
current: 0
help: Display decals debug info.
Usage: r_deferredDecalsDebug [0/1]

variable: r_deferredDecalsOnDynamicObjects DUMPTODISK
type: int
current: 0
help: Render deferred decals on dynamic objects.
Usage: r_deferredDecalsOnDynamicObjects [0/1]

variable: r_DeferredShadingAmbient DUMPTODISK
type: int
current: 1
help: Enables/Disables ambient processing.
Usage: r_DeferredShadingAmbient [0/1/2]
  0: no ambient passes (disabled)
  1: vis areas and outdoor ambient  (default)
  2: only outdoor (debug vis areas mode)


variable: r_DeferredShadingAmbientLights DUMPTODISK
type: int
current: 1
help: Enables/Disables ambient lights.
Usage: r_DeferredShadingAmbientLights [0/1]
Default is 1 (enabled)

variable: r_DeferredShadingAmbientSClear 
type: int
current: 1
help: Clear stencil buffer after ambient pass (prevents artifacts on Nvidia hw)


variable: r_DeferredShadingAreaLights DUMPTODISK
type: int
current: 1
help: Enables/Disables more complex area lights processing.
Usage: r_DeferredShadingAreaLights [0/1]
Default is 0 (disabled)

variable: r_DeferredShadingDBTstencil DUMPTODISK
type: int
current: 1
help: Toggles deferred shading combined depth bounds test + stencil test.
Usage: r_DeferredShadingDBTstencil [0/1]
Default is 1 (enabled)

variable: r_DeferredShadingDebug DUMPTODISK
type: int
current: 0
help: Toggles deferred shading debug.
Usage: r_DeferredShadingDebug [0/1]
  0 disabled (Default)
  1: Visualize g-buffer and l-buffers
  2: Debug deferred lighting fillrate (brighter colors means more expensive)


variable: r_DeferredShadingDepthBoundsTest DUMPTODISK
type: int
current: 1
help: Toggles deferred shading depth bounds test.
Usage: r_DeferredShadingDepthBoundsTest [0/1]
Default is 1 (enabled)

variable: r_DeferredShadingEnvProbes DUMPTODISK
type: int
current: 1
help: Toggles deferred environment probes rendering.
Usage: r_DeferredShadingEnvProbes [0/1]
Default is 1 (enabled)

variable: r_DeferredShadingFilterGBuffer DUMPTODISK
type: int
current: 0
help: Enables filtering of GBuffer to reduce specular aliasing.


variable: r_DeferredShadingLBuffersFmt 
type: int
current: 1
help: Toggles light buffers format.
Usage: r_DeferredShadingLBuffersFmt [0/1]
Default is 1 (R11G11B10F), 0: R16G16B16A16F

variable: r_DeferredShadingLightLodRatio DUMPTODISK
type: float
current: 1
help: Sets deferred shading light intensity threshold.
Usage: r_DeferredShadingLightLodRatio [value]
Default is 0.1

variable: r_DeferredShadingLights DUMPTODISK
type: int
current: 1
help: Enables/Disables lights processing.
Usage: r_DeferredShadingLights [0/1]
Default is 1 (enabled)

variable: r_DeferredShadingLightStencilRatio DUMPTODISK
type: float
current: 0.21
help: Sets screen ratio for deferred lights to use stencil (eg: 0.2 - 20% of screen).
Usage: r_DeferredShadingLightStencilRatio [value]
Default is 0.2

variable: r_DeferredShadingLightVolumes DUMPTODISK
type: int
current: 1
help: Toggles Light volumes for deferred shading.
Usage: r_DeferredShadingLightVolumes [0/1]
Default is 1 (enabled)

variable: r_DeferredShadingScissor DUMPTODISK
type: int
current: 1
help: Toggles deferred shading scissor test.
Usage: r_DeferredShadingScissor [0/1]
Default is 1 (enabled)

variable: r_DeferredShadingSortLights 
type: int
current: 0
help: Sorts light by influence
Usage: r_DeferredShadingSortLights [0/1]
Default is 0 (off)

variable: r_DeferredShadingSSS DUMPTODISK
type: int
current: 1
help: Toggles deferred subsurface scattering (requires full deferred shading)

variable: r_DeferredShadingStencilPrepass DUMPTODISK
type: int
current: 1
help: Toggles deferred shading stencil pre pass.
Usage: r_DeferredShadingStencilPrepass [0/1]
Default is 1 (enabled)

variable: r_DeferredShadingTiled DUMPTODISK
type: int
current: 2
help: Toggles tiled shading using a compute shader
1 - Tiled forward shading for transparent objects
2 - Tiled deferred and forward shading
3 - Tiled deferred and forward shading with debug info
4 - Light coverage visualization


variable: r_DeferredShadingTiledDebugAccumulation DUMPTODISK
type: int
current: 0
help: Toggles layered debug visualization of deferred lighting contributions
1 - Show Only Accumulated Diffuse
2 - Show Only Accumulated Specular


variable: r_DeferredShadingTiledDebugAlbedo DUMPTODISK
type: int
current: 0
help: Toggles layered debug visualization of deferred lighting contributions
1 - Force white albedo value


variable: r_DeferredShadingTiledDebugDirect DUMPTODISK
type: int
current: 0
help: 1 - Disables translucent BRDF.
2 - Disables all direct lighting.


variable: r_DeferredShadingTiledDebugIndirect DUMPTODISK
type: int
current: 0
help: Incrementally disables stages of the indirect lighting pipeline.
3 - Disables Ambient Diffuse
2 - Disables Ambient Specular
1 - Disables AO and SSR


variable: r_DeferredShadingTiledHairQuality DUMPTODISK
type: int
current: 2
help: Tiled shading hair quality
0 - Regular forward shading
1 - Tiled shading on selected assets and more accurate probe blending
2 - Full tiled shading with high quality shadow filter


variable: r_DepthBits DUMPTODISK, REQUIRE_APP_RESTART
type: int
current: 24
help: Sets the depth precision, in bits per pixel. Default is 24.
Usage: r_DepthBits [32/24]

variable: r_DepthOfField 
type: int
current: 2
help: Enables depth of field.
Usage: r_DepthOfField [0/1/2]
Default is 0 (disabled). 1 enables, 2 hdr time of day dof enabled

variable: r_DetailDistance DUMPTODISK
type: float
current: 8
help: Distance used for per-pixel detail layers blending.
Usage: r_DetailDistance (1-20)
Default is 6.

variable: r_DetailTextures DUMPTODISK
type: int
current: 1
help: Toggles detail texture overlays.
Usage: r_DetailTextures [0/1]
Default is 1 (detail textures on).

variable: r_DisplayInfo DUMPTODISK, RESTRICTEDMODE
type: int
current: 1
help: Toggles debugging information display.
Usage: r_DisplayInfo [0=off/1=show/2=enhanced/3=compact]

variable: r_dofMinZ 
type: float
current: 0
help: Set dof min z distance, anything behind this distance will get out focus. (good default value 0.4) 


variable: r_dofMinZBlendMult 
type: float
current: 1
help: Set dof min z blend multiplier (bigger value means faster blendind transition)


variable: r_dofMinZScale 
type: float
current: 0
help: Set dof min z out of focus strenght (good default value - 1.0f)


variable: r_DrawNearFarPlane 
type: float
current: 40
help: Default is 40.

variable: r_DrawNearFoV 
type: float
current: 60
help: Sets the FoV for drawing of near objects.
Usage: r_DrawNearFoV [n]
Default is 60.

variable: r_DrawNearShadows 
type: int
current: 1
help: Enable shadows for near objects.
Usage: r_DrawNearShadows [0/1]


variable: r_DrawNearZRange 
type: float
current: 0.08
help: Default is 0.1.

variable: r_Driver DUMPTODISK
type: string
current: DX11
help: Sets the renderer driver ( DX11/AUTO/NULL ).
Specify in bootstrap.cfg like this: r_Driver = "DX11"

variable: r_DynTexAtlasCloudsMaxSize 
type: int
current: 32
help: 

variable: r_DynTexMaxSize 
type: int
current: 80
help: 

variable: r_enable_full_gpu_sync 
type: int
current: 0
help: enable full gpu synchronization for debugging purposes on the every buffer I/O operation (debugging only)

variable: r_enableAltTab 
type: int
current: 1
help: Toggles alt tabbing in and out of fullscreen when the game is not in devmode.
Usage: r_enableAltTab [toggle]
Notes: Should only be added to system.cfg and requires a restart

variable: r_enableAuxGeom REQUIRE_APP_RESTART
type: int
current: 1
help: Enables aux geometry rendering.

variable: r_EnableComputeDownSampling 
type: int
current: 0
help: Metal compute down sample
Usage: 
0 Off
1 ON


variable: r_EnableDebugLayer 
type: int
current: 0
help: DX12: Enable Debug Layer

variable: r_EnableGMEMPath REQUIRE_APP_RESTART
type: int
current: 0
help: Mobile GMEM Paths
Usage: 
0 Standard Rendering
1 256bpp GMEM Path
2 128bpp GMEM Path


variable: r_EnableGMEMPostProcCS REQUIRE_APP_RESTART
type: int
current: 0
help: GMEM Compute Postprocess Pipeline
Usage: 
0 Compute disabled with postprocessing on GMEM path
1 Compute enabled with postprocessing on GMEM path


variable: r_EnvCMResolution DUMPTODISK
type: int
current: 2
help: Sets resolution for target environment cubemap, in pixels.
Usage: r_EnvCMResolution #
where # represents:
	0: 64
	1: 128
	2: 256
Default is 2 (256 by 256 pixels).

variable: r_EnvCMupdateInterval DUMPTODISK
type: float
current: 0.04
help: Sets the interval between environmental cube map texture updates.
Usage: r_EnvCMupdateInterval #
Default is 0.1.

variable: r_EnvTexResolution DUMPTODISK
type: int
current: 3
help: Sets resolution for 2d target environment texture, in pixels.
Usage: r_EnvTexResolution #
where # represents:
	0: 64
	1: 128
	2: 256
	3: 512
Default is 3 (512 by 512 pixels).

variable: r_EnvTexUpdateInterval DUMPTODISK
type: float
current: 0.05
help: Sets the interval between environmental 2d texture updates.
Usage: r_EnvTexUpdateInterval 0.001
Default is 0.001.

variable: r_ExcludeMesh 
type: string
current: 
help: Exclude or ShowOnly the named mesh from the render list.
Usage: r_ExcludeShader Name
Usage: r_ExcludeShader !Name
Sometimes this is useful when debugging.

variable: r_ExcludeShader 
type: string
current: 0
help: Exclude the named shader from the render list.
Usage: r_ExcludeShader ShaderName
Sometimes this is useful when debugging.

variable: r_FlareHqShafts DUMPTODISK
type: int
current: 1
help: Toggles high quality mode for point light shafts.
Usage: r_FlareHqShafts [0/1]
Default is 1 (on).

variable: r_Flares DUMPTODISK
type: int
current: 1
help: Toggles lens flare effect.
Usage: r_Flares [0/1]
Default is 1 (on).

variable: r_FlaresChromaShift 
type: float
current: 6
help: Set flares chroma shift amount.
Usage: r_FlaresChromaShift [n]
Default is 6
0 Disables

variable: r_FlaresIrisShaftMaxPolyNum 
type: int
current: 200
help: Set the maximum number of polygon of IrisShaft.
Usage : r_FlaresIrisShaftMaxPolyNum [n]
Default is 200
0 Infinite

variable: r_FlaresTessellationRatio 
type: float
current: 1
help: Set the tessellation rate of flares. 1 is the original mesh.
Usage : r_FlaresTessellationRatio 0.5
Default is 1.0
Range is from 0 to 1

variable: r_Flush 
type: int
current: 0
help: 

variable: r_FogDepthTest 
type: float
current: -0.0005
help: Enables per-pixel culling for deferred volumetric fog pass.
Fog computations for all pixels closer than a given depth value will be skipped.
Usage: r_FogDepthTest z with...
  z = 0, culling disabled
  z > 0, fixed linear world space culling depth
  z < 0, optimal culling depth will be computed automatically based on camera direction and fog settings

variable: r_FogShadows 
type: int
current: 1
help: Enables deferred volumetric fog shadows
Usage: r_FogShadows [0/1/2]
  0: off
  1: standard resolution
  2: reduced resolution


variable: r_FogShadowsMode 
type: int
current: 0
help: Ray-casting mode for shadowed fog
Usage: r_FogShadowsMode [0/1]
  0: brute force shadowmap sampling
  1: optimized shadowmap sampling


variable: r_FogShadowsWater 
type: int
current: 1
help: Enables volumetric fog shadows for watervolumes

variable: r_ForceFixedPointRenderTargets 
type: int
current: 0
help: Forces the engine to use fixed point render targets instead of floating point ones.
This variable is respected on Android OpenGL ES only
0 Off
1 ON


variable: r_Fullscreen DUMPTODISK
type: int
current: 0
help: Toggles fullscreen mode. Default is 1 in normal game and 0 in DevMode.
Usage: r_Fullscreen [0=window/1=fullscreen]

variable: r_FullscreenNativeRes DUMPTODISK
type: int
current: 0
help: 

variable: r_FullscreenPreemption 
type: int
current: 1
help: While in fullscreen activities like notification pop ups of other applications won't cause a mode switch back into windowed mode.

variable: r_FullscreenWindow DUMPTODISK
type: int
current: 0
help: Toggles fullscreen-as-window mode. Fills screen but allows seamless switching. Default is 0.
Usage: r_FullscreenWindow [0=locked fullscreen/1=fullscreen as window]

variable: r_Fur 
type: int
current: 1
help: Specifies how fur is rendered:
0: Fur is disabled - objects using Fur shader appear similar to Illum
1: Alpha blended transparent passes
2: Alpha tested opaque passes

variable: r_FurDebug 
type: int
current: 0
help: Debug visualizers for fur.
0: off
1: base/tip sample validity (red = base valid; green = tip valid; yellow = both valid)
2: base/tip selection (red = base chosen; green = tip chosen)
3: show offscreen UVs for base deferred sample (gray = onscreen)
4: show offscreen UVs for tip deferred sample (gray = onscreen)
5: show final lighting with all base lighting selected
6: show final lighting with all tip lighting selected
7: visualize fur length scaling
8: visualize fur animation bending velocity

variable: r_FurDebugOneShell 
type: int
current: 0
help: Debug cvar to draw only the specified shell number for fur. 0 = disabled.

variable: r_FurFinPass 
type: int
current: 0
help: Toggles view orthogonal fin pass for fur. 0 = disabled.

variable: r_FurFinShadowPass 
type: int
current: 1
help: Toggles view orthogonal fin pass for fur in shadow passes. 0 = disabled.

variable: r_FurMaxViewDist 
type: float
current: 32
help: Maximum view distance for fur shell passes.

variable: r_FurMovementBendingBias 
type: float
current: 0.1
help: Bias for fur bending from animation & movement. Closer to 1 causes fur to bend back faster.

variable: r_FurShellPassCount 
type: int
current: 64
help: Number of passes to perform for rendering fur shells

variable: r_FurShowBending 
type: int
current: 0
help: Toggles visibility of fur bending vectors.

variable: r_Gamma DUMPTODISK
type: float
current: 1
help: Adjusts the graphics card gamma correction (fast, needs hardware support, also affects HUD and desktop)
r_NoHWGamma must be set to 0 for this to have an effect.
Usage: r_Gamma 1.0
1 off (default)

variable: r_GeomCacheInstanceThreshold 
type: int
current: 10
help: Threshold after which instancing is used to draw geometry cache pieces

variable: r_GeomInstancing 
type: int
current: 1
help: Toggles HW geometry instancing.
Usage: r_GeomInstancing [0/1]
Default is 1 (on). Set to 0 to disable geom. instancing.

variable: r_GeomInstancingDebug 
type: int
current: 0
help: Toggles HW geometry instancing debug display.
Usage: r_GeomInstancingDebug [0/1/2]
Default is 0 (off). Set to 1 to add GPU markers around instanced objects. 2 will visually highlight them as well.

variable: r_GeomInstancingThreshold 
type: int
current: -1
help: If the instance count gets bigger than the specified value the instancing feature is used.
Usage: r_GeomInstancingThreshold [Num]
Default is -1 (automatic depending on hardware, used value can be found in the log)

variable: r_GetScreenShot 
type: int
current: 0
help: To capture one screenshot (variable is set to 0 after capturing)
0=do not take a screenshot (default), 1=save a screenshot (together with .HDR if enabled), 2=save a screenshot

variable: r_GMEM_DOF_Gather1_Quality REQUIRE_APP_RESTART
type: int
current: 3
help: Value represents # of taps squared for 1st gather pass.
Usage: 
Clamped between 1 & 7 (default is 3)


variable: r_GMEM_DOF_Gather2_Quality REQUIRE_APP_RESTART
type: int
current: 2
help: Value represents # of taps squared for second gather pass.
Usage: 
Clamped between 1 & 7 (default is 2)


variable: r_GMEM_LDR_ForceResolvePostComposition 
type: int
current: 0
help: Mobile LDR GMEM Path
Usage: 
0 disable
1 Resolves floating point buffer into RGBA8 back-buffer after deferred composition


variable: r_GMEMVisAreasBlendWeight 
type: float
current: 1
help: Global VisArea/Portal Blend Weight for GMEM Render Path
GMEM render path doesn't support per-portal blend weight.
0.f to 1.f weight


variable: r_GPUParticleDepthCubemapResolution 
type: int
current: 256
help: The resolution for the cubemaps used by the cubemap depth collision feature for GPU particles

variable: r_GraphicsPipeline 
type: int
current: 0
help: Toggles new optimized graphics pipeline
  0: Off
  1: Just fullscreen passes
  2: Just scene passes
  3: All passes


variable: r_GraphicsQuality 
type: int
current: 4
help: Specifies the system cfg spec. 1=low, 2=med, 3=high, 4=very high)

variable: r_GraphStyle 
type: int
current: 0
help: 

variable: r_HDRBloom 
type: int
current: 1
help: Enables bloom/glare.
Usage: r_HDRBloom [0/1]


variable: r_HDRBloomQuality 
type: int
current: 2
help: Set bloom quality (0: low, 1: medium, 2: high)


variable: r_HDRDebug 
type: int
current: 0
help: Toggles HDR debugging info (to debug HDR/eye adaptation)
Usage: r_HDRDebug
0 off (default)
1 show gamma-corrected scene target without HDR processing
2 identify illegal colors (grey=normal, red=NotANumber, green=negative)
3 display internal HDR textures
4 display HDR range adaptation
5 debug merged posts composition mask


variable: r_HDRDolby DUMPTODISK
type: int
current: 0
help: HDR dolby output mode
Usage: r_HDRDolby [Value]
0: Off (default)
1: Dolby maui output
2: Dolby vision output


variable: r_HDRDolbyDynamicMetadata DUMPTODISK
type: int
current: 1
help: Enable Dolby Dynamic Metadata (provides Dolby Vision screen with min/max/mid of the current image, in order to improve image quality)

variable: r_HDRDolbyScurve DUMPTODISK
type: int
current: 1
help: Enable Dolby S-Curve (transformation from source intensity range to cd/m^2).

variable: r_HDRDolbyScurveRGBPQTargetMax DUMPTODISK
type: float
current: 2000
help: Set Dolby S-Curve RGBPQ (e.g. Maui) Target midpoint (average) intensity (in cd/m^2).

variable: r_HDRDolbyScurveRGBPQTargetMid DUMPTODISK
type: float
current: 50
help: Set Dolby S-Curve RGBPQ (e.g. Maui) Target midpoint intensity (in cd/m^2).

variable: r_HDRDolbyScurveRGBPQTargetMin DUMPTODISK
type: float
current: 0.001
help: Set Dolby S-Curve RGBPQ (e.g. Maui) Target minimum intensity (in cd/m^2).

variable: r_HDRDolbyScurveScale DUMPTODISK
type: float
current: 1
help: Set Dolby S-Curve Multiplier (similar to brightness).

variable: r_HDRDolbyScurveSlope DUMPTODISK
type: float
current: 1
help: Set Dolby S-Curve Slope (similar to gamma).

variable: r_HDRDolbyScurveSourceMax DUMPTODISK
type: float
current: 10000
help: Set Dolby S-Curve Source maximum intensity (in source units).

variable: r_HDRDolbyScurveSourceMid DUMPTODISK
type: float
current: 0.4
help: Set Dolby S-Curve Source midpoint intensity (in source units).

variable: r_HDRDolbyScurveSourceMin DUMPTODISK
type: float
current: 0.001
help: Set Dolby S-Curve Source minimum intensity (in source units).

variable: r_HDRDolbyScurveVisionTargetMax DUMPTODISK
type: float
current: 800
help: Set Dolby S-Curve Vision (e.g. Vizio) Target maximum intensity (in cd/m^2).

variable: r_HDRDolbyScurveVisionTargetMid DUMPTODISK
type: float
current: 50
help: Set Dolby S-Curve Vision (e.g. Vizio) Target midpoint intensity (in cd/m^2).

variable: r_HDRDolbyScurveVisionTargetMin DUMPTODISK
type: float
current: 0.001
help: Set Dolby S-Curve Vision (e.g. Vizio) Target minimum intensity (in cd/m^2).

variable: r_HDREyeAdaptationMode DUMPTODISK
type: int
current: 2
help: Set the eye adaptation (auto exposure) mode.
  1: Standard auto exposure (using EV values)
  2: Legacy auto exposure for backwards compatibility (CE 3.6 to 3.8.1)

variable: r_HDREyeAdaptationSpeed 
type: float
current: 1
help: HDR rendering eye adaptation speed
Usage: r_EyeAdaptationSpeed [Value]

variable: r_HDRGrainAmount 
type: float
current: 0
help: HDR camera grain amount
Usage: r_HDRGrainAmount [Value]

variable: r_HDRTexFormat DUMPTODISK
type: int
current: 0
help: HDR texture format. 
Usage: r_HDRTexFormat [Value] 0:(low precision - cheaper/faster), 1:(high precision)
Default is 0

variable: r_HDRVignetting DUMPTODISK
type: int
current: 1
help: HDR viggneting
Usage: r_HDRVignetting [Value]
Default is 1 (enabled)

variable: r_Height DUMPTODISK
type: int
current: 720
help: Sets the display height, in pixels. Default is 720.
Usage: r_Height [600/768/..]

variable: r_HeightMapAO 
type: int
current: 1
help: Large Scale Ambient Occlusion based on height map approximation of the scene
0=off, 1=quarter resolution, 2=half resolution, 3=full resolution

variable: r_HeightMapAOAmount 
type: float
current: 1
help: Height Map Ambient Occlusion Amount

variable: r_HeightMapAORange 
type: float
current: 1000
help: Range of height map AO around viewer in meters

variable: r_HeightMapAOResolution 
type: float
current: 2048
help: Texture resolution of the height map used for HeightMapAO

variable: r_HideSunInCubemaps 
type: int
current: 1
help: Stops the sun being drawn during cubemap generation.


variable: r_ImposterRatio 
type: float
current: 1
help: Allows to scale the texture resolution of imposters (clouds)
Usage: r_ImposterRatio [1..]
Default is 1 (1:1 normal). Bigger values can help to save texture space
(e.g. value 2 results in 1/4 texture memory usage)

variable: r_ImpostersDraw 
type: int
current: 1
help: Toggles imposters drawing.
Usage: r_ImpostersDraw [0/1]
Default is 1 (on). Set to 0 to disable imposters.

variable: r_ImpostersUpdatePerFrame 
type: int
current: 6000
help: How many kilobytes to update per-frame.
Usage: r_ImpostersUpdatePerFrame [1000-30000]
Default is 6000 (6 megabytes)

variable: r_LightsSinglePass 
type: int
current: 1
help: 

variable: r_Log 
type: int
current: 0
help: Logs rendering information to Direct3DLog.txt.
Use negative values to log a single frame.
Usage: r_Log +/-[0/1/2/3/4]
	1: Logs a list of all shaders without profile info.
	2: Log contains a list of all shaders with profile info.
	3: Logs all API function calls.
	4: Highly detailed pipeline log, including all passes,
			states, lights and pixel/vertex shaders.
Default is 0 (off). Use this function carefully, because
log files grow very quickly.

variable: r_LogShaders 
type: int
current: 0
help: Logs shaders info to Direct3DLogShaders.txt
0: off
1: normal
2: extended

variable: r_LogTexStreaming 
type: int
current: 0
help: Logs streaming info to Direct3DLogStreaming.txt
0: off
1: normal
2: extended

variable: r_LogVBuffers 
type: int
current: 0
help: Logs vertex buffers in memory to 'LogVBuffers.txt'.
Usage: r_LogVBuffers [0/1]
Default is 0 (off).

variable: r_LogVidMem 
type: int
current: 0
help: Logs vid mem information to VidMemLog.txt.

variable: r_MaterialsBatching 
type: int
current: 1
help: Toggles materials batching.
Usage: r_MaterialsBatching [0/1]
Default is 1 (on). Set to 0 to disable.

variable: r_MaxHeight DUMPTODISK
type: int
current: 0
help: (iOS/Android only) Sets the maximum display height while maintaining the device aspect ratio.
Usage: r_MaxHeight [768/1080/..] (0 for no max), combined with r_WidthAndHeightAsFractionOfScreenSize [0.1 - 1.0]

variable: r_MaxWidth DUMPTODISK
type: int
current: 0
help: (iOS/Android only) Sets the maximum display width while maintaining the device aspect ratio.
Usage: r_MaxWidth [1024/1920/..] (0 for no max), combined with r_WidthAndHeightAsFractionOfScreenSize [0.1 - 1.0]

variable: r_MeasureOverdraw 
type: int
current: 0
help: Activate a special rendering mode that visualize the rendering cost of each pixel by color.
0=off,
1=pixel shader instructions,
2=pass count,
3=vertex shader instructions,
4=overdraw estimation with 360 Hi-Z,
Usage: r_MeasureOverdraw [0/1/2/3/4]

variable: r_MeasureOverdrawScale 
type: float
current: 1.5
help: 

variable: r_MergeRenderChunks 
type: int
current: 1
help: 

variable: r_MergeShadowDrawcalls 
type: int
current: 1
help: Enabled Merging of RenderChunks for ShadowRendering
Default is 1 (enabled). 0 disabled

variable: r_MeshInstancePoolSize 
type: int
current: 0
help: The size of the pool for volatile render data in kilobytes. Disabled by default on PC (mesh data allocated on heap).Enabled by default on consoles. Requires app restart to change.

variable: r_MeshPoolSize 
type: int
current: 0
help: The size of the pool for render data in kilobytes. Disabled by default on PC (mesh data allocated on heap).Enabled by default on consoles. Requires app restart to change.

variable: r_MeshPrecache 
type: int
current: 1
help: 

variable: r_minimizeLatency REQUIRE_APP_RESTART
type: int
current: 0
help: Initializes and drives renderer to minimize display latency as much as possible.
As such only a double buffer swap chain will be created.
Maximum frame latency will be set to 1 on DXGI-supporting platforms
as well as frames flushed after Present() if r_Flush is enabled.

variable: r_MotionBlur 
type: int
current: 2
help: Enables per object and camera motion blur.
Usage: r_MotionBlur [0/1/2/3]
Default is 1 (camera motion blur on).
1: camera motion blur
2: camera and object motion blur
3: debug mode


variable: r_MotionBlurCameraMotionScale 
type: float
current: 0.2
help: Reduces motion blur for camera movements to account for a fixed focus point of the viewer.
Default: 0.2

variable: r_MotionBlurGBufferVelocity 
type: int
current: 1
help: Pack velocity output in g-buffer.
Usage: r_MotionBlurGBufferVelocity [0/1]
Default is 1 (enabled). 0 - disabled


variable: r_MotionBlurMaxViewDist 
type: float
current: 100000
help: Sets motion blur max view distance for objects.
Usage: r_MotionBlurMaxViewDist [0...1]
Default is 16 meters

variable: r_MotionBlurQuality 
type: int
current: 2
help: Set motion blur sample count.
Usage: r_MotionBlurQuality [0/1]
0 - low quality, 1 - medium quality, 2 - high quality


variable: r_MotionBlurScreenShot 
type: int
current: 0
help: Enables motion blur during high res screen capturesUsage: r_MotionBlur [0/1]
0: motion blur disabled for screen shot (default)
1: motion blur enabled for screen shot


variable: r_MotionBlurShutterSpeed 
type: float
current: 125
help: Sets camera exposure time for motion blur as 1/x seconds.
Default: 250 (1/250 of a second)

variable: r_MotionBlurThreshold 
type: float
current: 0.0001
help: Object motion blur velocity threshold.
Usage: r_MotionBlurThreshold (val)
Default is 0.0001.  0 - disabled


variable: r_MotionVectors 
type: int
current: 1
help: Enables generation of motion vectors for dynamic objects


variable: r_MotionVectorsDebug 
type: int
current: 0
help: Enables motion vector debug visualization.


variable: r_MotionVectorsTransparency 
type: int
current: 1
help: Enables generation of motion vectors for transparent objects


variable: r_MotionVectorsTransparencyAlphaThreshold 
type: float
current: 0.25
help: Transparent object alpha threshold. If the alpha is above this threshold the object will generate motion vectors.
Usage: r_MotionVectorsTransparencyAlphaThreshold (val)
Default is 0.25.  0 - disabled


variable: r_MSAA 
type: int
current: 0
help: Enables hw multisampling antialiasing.
Usage: r_MSAA [0/1]
Default: 0 (off).
1: enabled + default reference quality mode


variable: r_MSAA_debug 
type: int
current: 0
help: Enable debugging mode for msaa.
Usage: r_MSAA_debug N (where N is debug mode > 0)
Default: 0. disabled. Note debug modes share target with post processing, disable post processing for correct visualization. 
1 disable sample frequency pass
2 visualize sample frequency mask


variable: r_MSAA_quality 
type: int
current: 0
help: Quality level used when multisampled antialiasing is enabled.
Usage: r_MSAA_quality N (where N is a number >= 0). Attention, N must be supported by given video hardware!
Default: 0. Please note that various hardware implements special MSAA modes via certain combinations of
r_MSAA_quality and r_MSAA_samples.

variable: r_MSAA_samples 
type: int
current: 0
help: Number of subsamples used when hw multisampled antialiasing is enabled.
Usage: r_MSAA_samples N (where N is a number >= 0). Attention, N must be supported by given video hardware!
Default: 0. Please note that various hardware implements special MSAA modes via certain combinations of
r_MSAA_quality and r_MSAA_samples.

variable: r_MSAA_threshold_depth 
type: float
current: 0.1
help: Set depth threshold to be used for custom resolve sub-samples masking


variable: r_MSAA_threshold_normal 
type: float
current: 0.9
help: Set normals threshold to be used for custom resolve sub-samples masking


variable: r_MultiGPU 
type: int
current: 1
help: Toggles MGPU support. Should usually be set before startup.
  0: force off
  1: automatic detection (reliable with SLI, does not respect driver app profiles with Crossfire)


variable: r_MultiThreaded 
type: int
current: 1
help: 0=disabled, 1=enabling rendering in separate thread,
2(default)=automatic detection
should be activated before rendering

variable: r_MultiThreadedDrawing 
type: int
current: 0
help:   0=disabled,
  N=number of concurrent draw recording jobs,
 -1=Number is as large as the number of available worker threads

variable: r_MultiThreadedDrawingActiveThreshold 
type: int
current: 0
help:   0=disabled,
  N=minimum number of draws per job,
If there are not enough draws for all jobs it will dial down the number of jobs.

variable: r_NoDraw 
type: int
current: 0
help: Disable submitting of certain draw operations: 1-(Do not process render objects at all), 2-(Do not submit individual render objects), 3-(No DrawIndexed)

variable: r_NoDrawNear 
type: int
current: 0
help: Disable drawing of near objects.
Usage: r_NoDrawNear [0/1]
Default is 0 (near objects are drawn).

variable: r_NoDrawShaders 
type: int
current: 0
help: Disable entire render pipeline.
Usage: r_NoDrawShaders [0/1]
Default is 0 (render pipeline enabled). Used for debugging and profiling.

variable: r_NoHWGamma DUMPTODISK
type: int
current: 2
help: Sets renderer to ignore hardware gamma correction.
Usage: r_NoHWGamma [0/1/2]
0 - allow hardware gamma correction
1 - disable hardware gamma correction
2 - disable hardware gamma correction in Editor


variable: r_NormalsLength 
type: float
current: 0.2
help: Sets the length of displayed vectors.
r_NormalsLength 0.2
Default is 0.2 (meters). Used with r_ShowTangents and r_ShowNormals.

variable: r_OldBackendSkip DUMPTODISK, RESTRICTEDMODE
type: int
current: 0
help: Ignores old backend processing.
0: Old backend is on
1: Old backend is skipped
2: Old backend shadows are skipped


variable: r_OutputShaderSourceFiles 
type: int
current: 0
help: If true, HLSL and GLSL files will be saved in the USER\Shader\* folders during shader compilation.  Does not work on console or mobile targets.

variable: r_overrideDXGIAdapter REQUIRE_APP_RESTART
type: int
current: -1
help: Specifies index of the preferred video adapter to be used for rendering (-1=off, loops until first suitable adapter is found).
Use this to resolve which video card to use if more than one DX11 capable GPU is available in the system.

variable: r_overrideDXGIOutput REQUIRE_APP_RESTART
type: int
current: 0
help: Specifies index of display to use for output (0=primary display).

variable: r_overrideDXGIOutputFS 
type: int
current: 0
help: Specifies index of display to use for full screen output (0=primary display).

variable: r_overrideRefreshRate DUMPTODISK, RESTRICTEDMODE
type: float
current: 0
help: Enforces specified refresh rate when running in fullscreen (0=off).

variable: r_overrideScanlineOrder DUMPTODISK, RESTRICTEDMODE
type: int
current: 0
help: Enforces specified scanline order when running in fullscreen.
0=off,
1=progressive,
2=interlaced (upper field first),
3=interlaced (lower field first)
Usage: r_overrideScanlineOrder [0/1/2/3]

variable: r_OverscanBorderScaleX 
type: float
current: 0
help: Sets the overscan border width scale
Usage: r_OverscanBorderScaleX [0.0->0.25]

variable: r_OverscanBorderScaleY 
type: float
current: 0
help: Sets the overscan border height scale
Usage: r_OverscanBorderScaleY [0.0->0.25]

variable: r_OverscanBordersDrawDebugView DUMPTODISK, RESTRICTEDMODE
type: int
current: 0
help: Toggles drawing overscan borders.
Usage: r_OverscanBordersDrawDebugView [0=off/1=show]

variable: r_ParticlesAmountGI 
type: float
current: 0.15
help: Global illumination amount for particles without material.
Usage: r_ParticlesAmountGI [n]

variable: r_ParticlesDebug 
type: int
current: 0
help: Particles debugging
Usage: 
0 disabled
1 particles screen coverage (red = bad, blue = good)
2 particles overdraw (white = really bad, red = bad, blue = good)

variable: r_ParticlesHalfRes 
type: int
current: 0
help: Enables (1) or forces (2) rendering of particles in a half-resolution buffer.
Usage: r_ParticlesHalfRes [0/1/2]

variable: r_ParticlesHalfResAmount 
type: int
current: 0
help: Sets particle half-res buffer to half (0) or quarter (1) screen size.
Usage: r_ParticlesHalfResForce [0/1]

variable: r_ParticlesHalfResBlendMode 
type: int
current: 0
help: Specifies which particles can be rendered in half resolution.
Usage: r_ParticlesHalfResBlendMode [0=alpha / 1=additive]

variable: r_ParticlesInstanceVertices 
type: int
current: 1
help: Enable instanced-vertex rendering.
Usage: r_ParticlesInstanceVertices [0/1]

variable: r_ParticlesRefraction 
type: int
current: 1
help: Enables refractive particles.
Usage: r_ParticlesRefraction [0/1]

variable: r_ParticlesSoftIsec 
type: int
current: 1
help: Enables particles soft intersections.
Usage: r_ParticlesSoftIsec [0/1]

variable: r_ParticlesTessellation 
type: int
current: 1
help: Enables particle tessellation for higher quality lighting. (DX11 only)

variable: r_ParticlesTessellationTriSize 
type: int
current: 16
help: Sets particles tessellation triangle screen space size in pixels (DX11 only)

variable: r_ParticleVerticePoolSize REQUIRE_APP_RESTART
type: int
current: 15360
help: Max Number of Particle Vertices to support

variable: r_PostProcessEffects 
type: int
current: 1
help: Enables post processing special effects.
Usage: r_PostProcessEffects [0/1/2]
Default is 1 (enabled). 2 enables and displays active effects

variable: r_PostProcessFilters 
type: int
current: 1
help: Enables post processing special effects filters.
Usage: r_PostProcessEffectsFilters [0/1]
Default is 1 (enabled). 0 disabled

variable: r_PostProcessGameFx 
type: int
current: 1
help: Enables post processing special effects game fx.
Usage: r_PostProcessEffectsGameFx [0/1]
Default is 1 (enabled). 0 disabled

variable: r_PostProcessReset 
type: int
current: 0
help: Enables post processing special effects reset.
Usage: r_PostProcessEffectsReset [0/1]
Default is 0 (disabled). 1 enabled

variable: r_PredicatedTiling REQUIRE_APP_RESTART
type: int
current: 0
help: Toggles predicated tiling mode (X360 only)
Usage: r_PredicatedTiling [0/1]

variable: r_PrintMemoryLeaks 
type: int
current: 0
help: 

variable: r_profiler 
type: int
current: 0
help: Display render pipeline profiler.
  0: Disabled
  1: Basic overview
  2: Detailed pass stats


variable: r_profilerTargetFPS 
type: float
current: 30
help: Target framerate for application.

variable: r_ProfileShaders 
type: int
current: 0
help: Enables display of render profiling information.
Usage: r_ProfileShaders [0/1]
Default is 0 (off). Set to 1 to display profiling
of rendered shaders.

variable: r_ProfileShadersGroupByName 
type: int
current: 1
help: Group items by name ignoring RT flags.
Usage: r_ProfileShaders [0/1]

variable: r_ProfileShadersSmooth 
type: int
current: 4
help: Smooth time information.
Usage: r_ProfileShadersSmooth [0-10]

variable: r_Rain 
type: int
current: 2
help: Enables rain rendering
Usage: r_Rain [0/1/2]
0 - disabled1 - enabled2 - enabled with rain occlusion

variable: r_RainAmount 
type: float
current: 1
help: Sets rain amount
Usage: r_RainAmount

variable: r_RainDistMultiplier 
type: float
current: 2
help: Rain layer distance from camera multiplier

variable: r_RainDropsEffect 
type: int
current: 1
help: Enable RainDrops effect.
Usage: r_RainDropEffect [0/1/2]
0: force off
1: on (default)
2: on (forced)

variable: r_RainIgnoreNearest 
type: int
current: 1
help: Disables rain wet/reflection layer for nearest objects
Usage: r_RainIgnoreNearest [0/1]


variable: r_RainMaxViewDist 
type: float
current: 32
help: Sets rain max view distance
Usage: r_RainMaxViewDist

variable: r_RainMaxViewDist_Deferred 
type: float
current: 150
help: Sets maximum view distance (in meters) for deferred rain reflection layer
Usage: r_RainMaxViewDist_Deferred [n]

variable: r_RainOccluderSizeTreshold 
type: float
current: 25
help: Only objects bigger than this size will occlude rain

variable: r_RainUseStencilMasking REQUIRE_APP_RESTART
type: int
current: 0
help: GMEM Deferred Rain enable stencil masking
Usage: 
0 Use single pass rain on GMEM path
1 Generate stencil mask for rain on GMEM path


variable: r_RC_AutoInvoke 
type: int
current: 1
help: Enable calling the resource compiler (rc.exe) to compile assets at run-time if the date check
shows that the destination is older or does not exist.
Usage: r_RC_AutoInvoke 0 (default is 1)

variable: r_Reflections DUMPTODISK
type: int
current: 1
help: Toggles reflections.
Usage: r_Reflections [0/1]
Default is 1 (reflects).

variable: r_ReflectionsOffset 
type: float
current: 0
help: 

variable: r_ReflectionsQuality DUMPTODISK
type: int
current: 3
help: Toggles reflections quality.
Usage: r_ReflectionsQuality [0/1/2/3]
Default is 0 (terrain only), 1 (terrain + particles), 2 (terrain + particles + brushes), 3 (everything)

variable: r_ReflectTextureSlots 
type: int
current: 1
help: Reflect texture slot information from shader

variable: r_Refraction 
type: int
current: 1
help: Enables refraction.
Usage: r_Refraction [0/1]
Default is 1 (on). Set to 0 to disable.

variable: r_RefractionPartialResolves 
type: int
current: 2
help: Do a partial screen resolve before refraction
Usage: r_RefractionPartialResolves [0/1]
0: disable 
1: enable conservatively (non-optimal)
2: enable (default)

variable: r_RefractionPartialResolvesDebug 
type: int
current: 0
help: Toggle refraction partial resolves debug display
Usage: r_RefractionPartialResolvesDebug [0/1]
0: disable 
1: Additive 2d area 
2: Bounding boxes 
3: Alpha overlay with varying colours 


variable: r_ReleaseAllResourcesOnExit 
type: int
current: 1
help: 

variable: r_ReloadShaders 
type: int
current: 0
help: Reloads shaders.
Usage: r_ReloadShaders [0/1]
Default is 0. Set to 1 to reload shaders.

variable: r_RenderMeshHashGridUnitSize 
type: float
current: 0.5
help: Controls density of render mesh triangle indexing structures

variable: r_RenderTargetPoolSize 
type: int
current: 0
help: Size of pool for render targets in MB.
Default is 50(MB).

variable: r_ReprojectOnlyStaticObjects 
type: int
current: 1
help: Forces a split in the zpass, to prevent moving object from beeing reprojected

variable: r_ResolutionScale 
type: float
current: 1
help: Scales the resolution for better performance. A value of 1 indicates no scaling.
Minimum value 0.25: Scale resolution by 25% in width and height (retains the aspect ratio).
Maximum value 4: Scale resolution by 400%


variable: r_ReverseDepth 
type: int
current: 1
help: Use 1-z depth rendering for increased depth precision

variable: r_Scissor 
type: int
current: 1
help: Enables scissor test

variable: r_ShaderCompilerDontCache 
type: int
current: 0
help: Disables caching on server side.
Usage: r_ShaderCompilerDontCache 0 #
Default is 0

variable: r_ShaderCompilerFolderSuffix 
type: string
current: 
help: Usage: r_ShaderCompilerFolderSuffix suffix 
Default is empty. Set to some other value to append this suffix to the sys_game_folder when compiling shaders

variable: r_ShaderCompilerPort 
type: int
current: 61453
help: set user defined port of the shader compile server.
Usage: r_ShaderCompilerPort 61453 #
Default is 61453

variable: r_ShaderCompilerServer 
type: string
current: 127.0.0.1
help: Usage: r_ShaderCompilerServer 127.0.0.1 
Default is 127.0.0.1 

variable: r_ShaderEmailCCs 
type: string
current: 
help: Adds optional CC addresses to shader error emails
Usage: r_ShaderEmailCCs "email1@your_domain.com;email2@your_domain.com" 
Default is empty 

variable: r_ShaderEmailTags 
type: string
current: Build Version: 1.13.0.0
help: Adds optional tags to shader error emails e.g. own name or build run
Usage: r_ShaderEmailTags "some set of tags or text" 
Default is build version 

variable: r_ShadersAllowCompilation 
type: int
current: 1
help: 

variable: r_ShadersAsyncActivation 
type: int
current: 0
help: Enable asynchronous shader activation
Usage: r_ShadersAsyncActivation [0/1]
 0 = off, (stalling) synchronous shaders activation
 1 = on, shaders are activated/streamed asynchronously


variable: r_ShadersAsyncCompiling 
type: int
current: 3
help: Enable asynchronous shader compiling
Usage: r_ShadersAsyncCompiling [0/1/2/3]
 0 = off, (stalling) shaders compiling
 1 = on, shaders are compiled in parallel, missing shaders are rendered in yellow
 2 = on, shaders are compiled in parallel, missing shaders are not rendered
 3 = on, shaders are compiled in parallel in precache mode

variable: r_ShadersAsyncMaxThreads DUMPTODISK
type: int
current: 16
help: 

variable: r_ShadersCacheDeterministic 
type: int
current: 1
help: Ensures that 2 shaderCaches built from the same source are binary equal

variable: r_ShadersCacheUnavailableShaders 
type: int
current: 0
help: 0 off (default), 1 cache unavailable shaders to avoid requesting their compilation in future executions.

variable: r_ShadersCompileAutoActivate 
type: int
current: 0
help: Automatically reenable shader compilation if outdated shader is detected

variable: r_ShadersDebug DUMPTODISK
type: int
current: 0
help: Enable special logging when shaders become compiled
Usage: r_ShadersDebug [0/1/2/3/4]
 1 = assembly into directory Main/{Game}/shaders/cache/d3d9
 2 = compiler input into directory Main/{Game}/testcg
 3 = compiler input with debug information (useful for PIX etc./{Game}/testcg_1pass
 4 = compiler input with debug information, but optimized shaders
Default is 0 (off)

variable: r_ShadersDurango 
type: int
current: 1
help: 

variable: r_ShadersDX11 
type: int
current: 1
help: 

variable: r_ShadersEditing 
type: int
current: 0
help: Force all cvars to settings, which allow shader editing

variable: r_ShadersExport 
type: int
current: 1
help: 0 off, 1 allow shader export during shader cache generation - Currently 360 only.

variable: r_ShadersGL4 
type: int
current: 1
help: 

variable: r_ShadersGLES3 
type: int
current: 1
help: 

variable: r_ShadersIgnoreIncludesChanging 
type: int
current: 0
help: 

variable: r_ShadersImport 
type: int
current: 0
help: 0 off, 1 import and allow fallback to getBinShader, 2 import, no fallback if import fails (optimal).

variable: r_ShadersLazyUnload 
type: int
current: 0
help: 

variable: r_ShadersLogCacheMisses 
type: int
current: 2
help: Log all shader caches misses on HD (both level and global shader cache misses).
0 = No logging to disk or TTY
1 = Logging to disk only
2 = Logging to disk and TTY (default)

variable: r_ShadersMETAL 
type: int
current: 1
help: 

variable: r_ShadersOrbis 
type: int
current: 0
help: 

variable: r_ShadersPreactivate DUMPTODISK
type: int
current: 3
help: 

variable: r_ShadersPrecacheAllLights 
type: int
current: 1
help: 

variable: r_ShadersRemoteCompiler DUMPTODISK
type: int
current: 0
help: Enables remote shader compilation on dedicated machine

variable: r_ShadersSubmitRequestline 
type: int
current: 1
help: 

variable: r_ShadersUseInstanceLookUpTable 
type: int
current: 0
help: Use lookup table to search for shader instances. Speeds up the process, but uses more memory. Handy for shader generation.

variable: r_ShadowCastingLightsMaxCount REQUIRE_APP_RESTART
type: int
current: 32
help: Maximum number of simultaneously visible shadow casting lights

variable: r_ShadowGen 
type: int
current: 1
help: 0=disable shadow map updates, 1=enable shadow map updates

variable: r_ShadowGenMode 
type: int
current: 1
help: 0=Use Frustums Mask
1=Regenerate all sides
Usage: r_ShadowGenMode [0/1]

variable: r_ShadowJittering 
type: float
current: 2.5
help: Shadow map jittering radius.
In PC the only use of this cvar is to instantly see the effects of diferent jittering values,
because any value set here will be overwritten by ToD animation (only in PC) as soon as ToD changes.
Usage: r_ShadowJittering [0=off]

variable: r_ShadowPass 
type: int
current: 1
help: Process shadow pass

variable: r_ShadowPoolMaxFrames 
type: int
current: 0
help: Maximum number of frames a shadow can exist in the pool

variable: r_ShadowPoolMaxTimeslicedUpdatesPerFrame 
type: int
current: 100
help: Max number of time sliced shadow pool updates allowed per frame

variable: r_ShadowsAdaptionMin DUMPTODISK
type: float
current: 0.35
help: starting kernel size, to avoid blocky shadows.
Usage: r_ShadowsAdaptionMin [0.0 for blocky - 1.0 for blury], 0.35 is default

variable: r_ShadowsAdaptionRangeClamp DUMPTODISK
type: float
current: 0.02
help: maximum range between caster and reciever to take into account.
Usage: r_ShadowsAdaptionRangeClamp [0.0 - 1.0], default 0.01

variable: r_ShadowsAdaptionSize DUMPTODISK
type: float
current: 0.3
help: Select shadow map blurriness if r_ShadowsBias is activated.
Usage: r_ShadowsAdaptoinSize [0 for none - 10 for rapidly changing]

variable: r_ShadowsBias DUMPTODISK
type: float
current: 8e-05
help: Select shadow map blurriness if r_ShadowsBias is activated.
Usage: r_ShadowsBias [0.1 - 16]

variable: r_ShadowsCache 
type: int
current: 5
help: Replace all sun cascades above cvar value with cached (static) shadow map: 0=no cached shadows, 1=replace first cascade and up, 2=replace second cascade and up,...

variable: r_ShadowsCacheFormat 
type: int
current: 1
help: 0=use D32 texture format for shadow cache
1=use D16 texture format for shadow cache


variable: r_ShadowsCacheResolutions 
type: string
current: 4214
help: Shadow cache resolution per cascade. 

variable: r_ShadowsDepthBoundNV 
type: int
current: 0
help: 1=use NV Depth Bound extension
Usage: r_ShadowsDepthBoundNV [0/1]

variable: r_ShadowsGridAligned DUMPTODISK
type: int
current: 1
help: Selects algorithm to use for shadow mask generation:
0 - Disable shadows snapping
1 - Enable shadows snapping

variable: r_ShadowsMaskDownScale 
type: int
current: 0
help: Saves video memory by using lower resolution for shadow masks except first one
0=per pixel shadow mask
1=half resolution shadow mask
Usage: r_ShadowsMaskDownScale [0/1]

variable: r_ShadowsMaskResolution 
type: int
current: 0
help: 0=per pixel shadow mask
1=horizontal half resolution shadow mask
2=horizontal and vertical half resolution shadow mask
Usage: r_ShadowsMaskResolution [0/1/2]

variable: r_ShadowsNearestMapResolution REQUIRE_APP_RESTART
type: int
current: 4096
help: Nearest shadow map resolution. Default: 4096

variable: r_ShadowsParticleAnimJitterAmount DUMPTODISK
type: float
current: 1
help: Amount of animated jittering for particles shadows.
Usage: r_ShadowsParticleJitterAmount [x], 1. is default

variable: r_ShadowsParticleJitterAmount DUMPTODISK
type: float
current: 0.5
help: Amount of jittering for particles shadows.
Usage: r_ShadowsParticleJitterAmount [x], 0.5 is default

variable: r_ShadowsParticleKernelSize DUMPTODISK
type: float
current: 1
help: Blur kernel size for particles shadows.
Usage: r_ShadowsParticleKernelSize [0.0 hard edge - x for blur], 1. is default

variable: r_ShadowsParticleNormalEffect DUMPTODISK
type: float
current: 1
help: Shadow taps on particles affected by normal and intensity (breaks lines and uniformity of shadows).
Usage: r_ShadowsParticleNormalEffect [x], 1. is default

variable: r_ShadowsPCFiltering 
type: int
current: 1
help: 1=use PCF for shadows
Usage: r_ShadowsPCFiltering [0/1]

variable: r_ShadowsScreenSpace 
type: int
current: 0
help: Include screen space tracing into shadow computations
Helps reducing artifacts caused by limited shadow map resolution and biasing
Applied only in the near range and supposed to be used mostly in the cutscenes for better shadows on character faces

variable: r_ShadowsStencilPrePass 
type: int
current: 1
help: 1=Use Stencil pre-pass for shadows
Usage: r_ShadowsStencilPrePass [0/1]

variable: r_ShadowsUseClipVolume DUMPTODISK
type: int
current: 1
help: .
Usage: r_ShadowsUseClipVolume [0=Disable/1=Enable

variable: r_ShadowTexFormat 
type: int
current: 0
help: 0=use D32 texture format for depth map
1=use D16 texture format for depth map
2=use D24S8 texture format for depth map
Usage: r_ShadowTexFormat [0-2]

variable: r_Sharpening 
type: float
current: 0
help: Image sharpening amount
Usage: r_Sharpening [Value]

variable: r_ShowBufferUsage 
type: int
current: 0
help: Shows usage of statically allocated buffers.
Usage: r_ShowBufferUSage [0/1]
Default is 0 (off).

variable: r_ShowDynTextures 
type: int
current: 0
help: Display a dyn. textures, filtered by r_ShowDynTexturesFilter
Usage: r_ShowDynTextures 0/1/2
Default is 0. Set to 1 to show all dynamic textures or 2 to display only the ones used in this frame
Textures are sorted by memory usage

variable: r_ShowDynTexturesFilter 
type: string
current: *
help: Usage: r_ShowDynTexturesFilter *end
Usage: r_ShowDynTexturesFilter *mid*
Usage: r_ShowDynTexturesFilter start*
Default is *. Set to 'pattern' to show only specific textures (activate r_ShowDynTextures)

variable: r_ShowDynTexturesMaxCount 
type: int
current: 36
help: Allows to adjust number of textures shown on the screen
Usage: r_ShowDynTexturesMaxCount [1...36]
Default is 36

variable: r_ShowLightBounds 
type: int
current: 0
help: Display light bounds - for debug purpose
Usage: r_ShowLightBounds [0=off/1=on]

variable: r_ShowLines 
type: int
current: 0
help: Toggles visibility of wireframe overlay.
Usage: r_ShowLines [0/1]
Default is 0 (off).

variable: r_ShowNormals 
type: int
current: 0
help: Toggles visibility of normal vectors.
Usage: r_ShowNormals [0/1]Default is 0 (off).

variable: r_ShowTangents 
type: int
current: 0
help: Toggles visibility of three tangent space vectors.
Usage: r_ShowTangents [0/1]
Default is 0 (off).

variable: r_ShowTexture 
type: string
current: 
help: Displays loaded texture - for debug purpose


variable: r_ShowTimeGraph 
type: int
current: 0
help: Configures graphic display of frame-times.
Usage: r_ShowTimeGraph [0/1/2]
	1: Graph displayed as points.	2: Graph displayed as lines.Default is 0 (off).

variable: r_ShowVideoMemoryStats 
type: int
current: 0
help: 

variable: r_SilhouettePOM 
type: int
current: 1
help: Enables use of silhouette parallax occlusion mapping.
Usage: r_SilhouettePOM [0/1]

variable: r_Snow 
type: int
current: 2
help: Enables snow rendering
Usage: r_Snow [0/1/2]
0 - disabled
1 - enabled
2 - enabled with snow occlusion

variable: r_SnowDisplacement 
type: int
current: 0
help: Enables displacement for snow accumulation
Usage: r_SnowDisplacement [0/1]
0 - disabled
1 - enabled

variable: r_SnowFlakeClusters 
type: int
current: 100
help: Number of snow flake clusters.
Usage: r_SnowFlakeClusters [n]

variable: r_SnowHalfRes 
type: int
current: 0
help: When enabled, snow renders at half resolution to conserve fill rate.
Usage: r_SnowHalfRes [0/1]
0 - disabled
1 - enabled


variable: r_SoftAlphaTest 
type: int
current: 1
help: Toggles post processed soft alpha test for shaders supporting this
Usage: r_SoftAlphaTest [0/1]
Default is 1 (enabled)


variable: r_ssdo 
type: int
current: 1
help: Screen Space Directional Occlusion [0/1]


variable: r_ssdoAmountAmbient 
type: float
current: 1
help: Strength of occlusion applied to probe irradiance

variable: r_ssdoAmountDirect 
type: float
current: 2
help: Strength of occlusion applied to light sources

variable: r_ssdoAmountReflection 
type: float
current: 1.5
help: Strength of occlusion applied to probe specular

variable: r_ssdoColorBleeding 
type: int
current: 1
help: Enables AO color bleeding to avoid overly dark occlusion on bright surfaces (requires tiled deferred shading)
Usage: r_ssdoColorBleeding [0/1]


variable: r_ssdoHalfRes 
type: int
current: 2
help: Apply SSDO bandwidth optimizations
0 - Full resolution (not recommended)
1 - Use lower resolution depth
2 - Low res depth except for small camera FOVs to avoid artifacts
3 - Half resolution output

variable: r_ssdoRadius 
type: float
current: 1.2
help: SSDO radius

variable: r_ssdoRadiusMax 
type: float
current: 0.2
help: Max clamped SSDO radius

variable: r_ssdoRadiusMin 
type: float
current: 0.04
help: Min clamped SSDO radius

variable: r_SSReflections 
type: int
current: 1
help: Glossy screen space reflections [0/1]


variable: r_SSReflHalfRes 
type: int
current: 0
help: Toggles rendering reflections in half resolution


variable: r_Stats 
type: int
current: 0
help: Toggles render statistics.
0=disabled,
1=global render stats,
2=print shaders for selected object,
3=CPU times of render passes and video memory usage,
4=CPU times of render passes,
5=Occlusion query calls (calls to mfDraw/mfReadResult_Now/mfReadResult_Try),
6=display per-instance drawcall count,
8=Info about instanced DIPs,
13=print info about cleared RT's,
Usage: r_Stats [0/1/n]

variable: r_statsMinDrawCalls 
type: int
current: 0
help: Minimum drawcall amount to display for use with r_Stats 6

variable: r_StencilBits DUMPTODISK
type: int
current: 8
help: Sets the stencil precision, in bits per pixel. Default is 8.


variable: r_StereoDevice DUMPTODISK, REQUIRE_APP_RESTART
type: int
current: 0
help: Sets stereo device (only possible before app start)
Usage: r_StereoDevice [0/1/2/3/4]
0: No stereo support (default)
1: Frame compatible formats (side-by-side, interlaced, anaglyph)
2: HDMI 1.4
3: Stereo driver (PC only, NVidia or AMD)
4: Dualhead (PC only, two projectors or iZ3D screen)
100: Auto-detect device for platform

variable: r_StereoEyeDist DUMPTODISK
type: float
current: 0.02
help: [For 3D TV] Maximum separation between stereo images in percentage of the screen.

variable: r_StereoFlipEyes DUMPTODISK
type: int
current: 0
help: Flip eyes in stereo mode.
Usage: r_StereoFlipEyes [0=off/1=on]
0: don't flip
1: flip


variable: r_StereoGammaAdjustment DUMPTODISK
type: float
current: 0.12
help: Additional adjustment to the graphics card gamma correction when Stereo is enabled.
Usage: r_StereoGammaAdjustment [offset]0: off

variable: r_StereoHudScreenDist DUMPTODISK
type: float
current: 0.5
help: Distance to plane where hud stereo parallax converges to zero.
If not zero, HUD needs to be rendered two times.

variable: r_StereoMode DUMPTODISK
type: int
current: 0
help: Sets stereo rendering mode.
Usage: r_StereoMode [0=off/1]
1: Dual rendering


variable: r_StereoNearGeoScale DUMPTODISK
type: float
current: 0.65
help: Scale for near geometry (weapon) that gets pushed into the screen

variable: r_StereoOutput DUMPTODISK
type: int
current: 0
help: Sets stereo output. Output depends on the stereo monitor
Usage: r_StereoOutput [0=off/1/2/3/4/5/6/...]
0: Standard
1: IZ3D
2: Checkerboard (not supported on X360)
3: Above and Below (not supported)
4: Side by Side
5: Line by Line (Interlaced)
6: Anaglyph
7: VR Device (Oculus/Vive)


variable: r_StereoScreenDist DUMPTODISK
type: float
current: 0.25
help: Distance to plane where stereo parallax converges to zero.

variable: r_StereoStrength DUMPTODISK
type: float
current: 1
help: Multiplier which influences the strength of the stereo effect.

variable: r_sunshafts 
type: int
current: 2
help: Enables sun shafts.
Usage: r_sunshafts [0/1]
Default is 1 (on). Set to 0 to disable.

variable: r_Supersampling 
type: int
current: 1
help: Use supersampled antialiasing(1 - 1x1 no SSAA, 2 - 2x2, 3 - 3x3 ...)

variable: r_SupersamplingFilter 
type: int
current: 0
help: Filter method to use when resolving supersampled output
0 - Box filter
1 - Tent filter
2 - Gaussian filter
3 - Lanczos filter

variable: r_TerrainAO 
type: int
current: 7
help: 7=Activate terrain AO deferred passes

variable: r_TerrainAO_FadeDist 
type: int
current: 8
help: Controls sky light fading in tree canopy in Z direction

variable: r_TessellationDebug 
type: int
current: 0
help: 1 - Factor visualizing.
Default is 0

variable: r_TessellationTriangleSize 
type: float
current: 8
help: Desired triangle size for screen-space tessellation.
Default is 10.

variable: r_TexAtlasSize 
type: int
current: 2048
help: 

variable: r_TexBindMode 
type: int
current: 0
help: Enable texture overrides.
Usage: r_TexBindMode [0/1/2/4/5/6/7/8/9/10/11]
	1 - Force gray non-font maps
	5 - Force flat normal maps
	6 - Force white diffuse maps
	7 - Force diffuse maps to use mipmapdebug texture
	8 - Colour code diffuse maps to show minimum uploaded mip [0:green,1:cyan,2:blue,3:purple,4:magenta,5:yellow,6:orange,7:red,higher:white]
	9 - Colour code diffuse maps to show textures streaming in in green and out in red
	10 - Colour code diffuse maps that have requested a lower mip than the lowest available [-3: red, -2: yellow, -1: green]
	11 - Force white diffuse map and flat normal map
	12 - Visualise textures that have more or less mips in memory than needed
Default is 0 (disabled).

variable: r_TexBlockOnLoad 
type: int
current: 0
help: When loading a texture, block until resource compiler has finished compiling it.
Usage:	r_TexBlockOnLoad [0/1]
When 1 renderer will block and wait on the resource compiler.

variable: r_TexelsPerMeter 
type: float
current: 0
help: Enables visualization of the color coded "texels per meter" ratio for objects in view.
The checkerboard pattern displayed represents the mapping of the assigned diffuse
texture onto the object's uv space. One block in the pattern represents 8x8 texels.
Usage: r_TexelsPerMeter [n] (where n is the desired number of texels per meter; 0 = off)

variable: r_TexLog 
type: int
current: 0
help: Configures texture information logging.
Usage:	r_TexLog #
where # represents:
	0: Texture logging off
	1: Texture information logged to screen
	2: All loaded textures logged to 'UsedTextures.txt'
	3: Missing textures logged to 'MissingTextures.txt

variable: r_TexMaxAnisotropy REQUIRE_LEVEL_RELOAD
type: int
current: 16
help: Specifies the maximum level allowed for anisotropic texture filtering.

variable: r_TexMinAnisotropy REQUIRE_LEVEL_RELOAD
type: int
current: 16
help: Specifies the minimum level allowed for anisotropic texture filtering.
0(default) means abiding by the filtering setting in each material, except possibly being capped by r_TexMaxAnisotropy.

variable: r_TexNoAnisoAlphaTest DUMPTODISK
type: int
current: 0
help: Disables anisotropic filtering on alpha-tested geometry like vegetation.


variable: r_TexNoLoad 
type: int
current: 0
help: Disables loading of textures.
Usage:	r_TexNoLoad [0/1]
When 1 texture loading is disabled.

variable: r_TexPostponeLoading 
type: int
current: 1
help: 

variable: r_TexPreallocateAtlases 
type: int
current: 0
help: 

variable: r_TextureCompiling 
type: int
current: 1
help: Enables Run-time compilation and subsequent injection of changed textures from disk during editing.
Usage: r_TextureCompiling [0/1]
Default is 1 (on). Changes are tracked and passed through to the rendering.
Compilation can also be muted by the r_RC_AutoInvoke config.

variable: r_TextureCompilingIndicator 
type: int
current: 0
help: Replaces the textures which are currently compiled by a violet indicator-texture.
Usage: r_TextureCompilingIndicator [-1/0/1]
Default is 0 (off). Textures are silently replaced by their updated versions without any indication.
Negative values will also stop show indicators for compilation errors.
Positive values will show indicators whenever a texture is subject to imminent changes.


variable: r_TextureCompressor DUMPTODISK
type: int
current: 1
help: Defines which texture compressor is used (fallback is DirectX)
Usage: r_TextureCompressor [0/1]
0 uses DirectX, 1 uses squish if possible

variable: r_TextureLodDistanceRatio 
type: float
current: -1
help: Controls dynamic LOD system for textures used in materials.
Usage: r_TextureLodDistanceRatio [-1, 0 and bigger]
Default is -1 (completely off). Value 0 will set full LOD to all textures used in frame.
Values bigger than 0 will activate texture LOD selection depending on distance to the objects.

variable: r_TexturesDebugBandwidth 
type: int
current: 0
help: Replaces all material textures with a small white texture to debug texture bandwidth utilization


variable: r_texturesskiplowermips 
type: int
current: 0
help: Enabled skipping lower mips for X360.


variable: r_TexturesStreaming REQUIRE_APP_RESTART
type: int
current: 1
help: Enables direct streaming of textures from disk during game.
Usage: r_TexturesStreaming [0/1/2]
Default is 0 (off). All textures save in native format with mips in a
cache file. Textures are then loaded into texture memory from the cache.

variable: r_TexturesStreamingDebug 
type: int
current: 0
help: Enables textures streaming debug mode. (Log uploads and remove unnecessary mip levels)
Usage: r_TexturesStreamingDebug [0/1/2]
Default is 0 (off).1 - texture streaming log.2 - Show textures hit-parade based on streaming priorities3 - Show textures hit-parade based on the memory consumed

variable: r_TexturesStreamingDebugDumpIntoLog 
type: int
current: 0
help: Dump content of current texture streaming debug screen into log

variable: r_TexturesStreamingDebugFilter 
type: string
current: 
help: Filters displayed textures by name in texture streaming debug mode


variable: r_TexturesStreamingDebugMinMip 
type: int
current: 100
help: Filters displayed textures by loaded mip in texture streaming debug mode

variable: r_TexturesStreamingDebugMinSize 
type: int
current: 100
help: Filters displayed textures by size in texture streaming debug mode

variable: r_texturesstreamingDeferred 
type: int
current: 1
help: When enabled textures will be uploaded through a deferred context.


variable: r_TexturesStreamingDisableNoStreamDuringLoad 
type: int
current: 0
help: Load time optimisation. When enabled, textures flagged as non-streaming will still be streamed during level load, but will have a high priority stream request added in RT_Precache. Once streamed in, the texture will remain resident


variable: r_texturesstreamingJobUpdate 
type: int
current: 1
help: Enable texture streaming update job

variable: r_TexturesStreamingMaxRequestedJobs 
type: int
current: 32
help: Maximum number of tasks submitted to streaming system.
Usage: r_TexturesStreamingMaxRequestedJobs [jobs number]
Default is 32 jobs

variable: r_TexturesStreamingMaxRequestedMB 
type: float
current: 2
help: Maximum amount of texture data requested from streaming system in MB.
Usage: r_TexturesStreamingMaxRequestedMB [size]
Default is 2.0(MB)

variable: r_TexturesStreamingMinReadSizeKB 
type: int
current: 64
help: Minimal read portion in KB.
Usage: r_TexturesStreamingMinReadSizeKB [size]
Default is 32(KB)

variable: r_texturesstreamingMinUsableMips 
type: int
current: 8
help: Minimum number of mips a texture should be able to use after applying r_texturesstreamingSkipMips.


variable: r_TexturesStreamingMipBias 
type: float
current: 0
help: Controls how texture LOD depends from distance to the objects.
Increasing this value will reduce amount of memory required for textures.
Usage: r_TexturesStreamingMipBias [-4..0..4]
Default is 0.

variable: r_TexturesStreamingMipClampDVD 
type: int
current: 1
help: Clamp the texture mip level to certain value when streaming from DVD. 1 will never allow highest mips to be loaded for example.
Usage: r_TexturesStreamingMipClampDVD [0..4]
Default is 1.

variable: r_TexturesStreamingMipFading 
type: int
current: 1
help: Controls how the new texture MIP appears after being streamed in.
This variable influences only a visual quality of appearing texture details.
Usage: r_TexturesStreamingMipFading [0/1]
Default is 1 (enabled).

variable: r_TexturesStreamingNoUpload 
type: int
current: 0
help: Disable uploading data into texture from system memory. Useful for debug purposes.
Usage: r_TexturesStreamingNoUpload [0/1]
Default is 0 (off).

variable: r_TexturesStreamingOnlyVideo 
type: int
current: 0
help: Don't store system memory copy of texture. Applicable only for PC.
Usage: r_TexturesStreamingOnlyVideo [0/1]
Default is 0 (off).

variable: r_TexturesStreamingPostponeMips 
type: int
current: 0
help: Postpone loading of high res mipmaps to improve resolution ballance of texture streaming.
Usage: r_TexturesStreamingPostponeMips [0/1]
Default is 1 (on).

variable: r_TexturesStreamingPostponeThresholdKB 
type: int
current: 1024
help: Threshold used to postpone high resolution mipmap loads in KB.
Usage: r_TexturesStreamingPostponeThresholdKB [size]
Default is 1024(KB)

variable: r_texturesstreamingPostponeThresholdMip 
type: int
current: 1
help: Threshold used to postpone high resolution mipmaps.
Usage: r_texturesstreamingPostponeThresholdMip [count]
Default is 1

variable: r_TexturesStreamingPrecacheRounds 
type: int
current: 1
help: Number of precache rounds to include in active streamed texture lists.
Default is 1

variable: r_TexturesStreamingResidencyEnabled 
type: int
current: 1
help: Toggle for resident textures streaming support.
Usage: r_TexturesStreamingResidencyEnabled [toggle]Default is 0, 1 for enabled

variable: r_TexturesStreamingResidencyThrottle 
type: float
current: 0.5
help: Ratio for textures to become resident.
Usage: r_TexturesStreamingResidencyThrottle [ratio]Default is 0.5Max is 1.0 means textures will become resident sooner, Min 0.0 means textures will not become resident

variable: r_TexturesStreamingResidencyTime 
type: float
current: 10
help: Time to keep textures resident for before allowing them to be removed from memory.
Usage: r_TexturesStreamingResidencyTime [Time]
Default is 10 seconds

variable: r_TexturesStreamingResidencyTimeTestLimit 
type: float
current: 5
help: Time limit to use for mip thrashing calculation in seconds.
Usage: r_TexturesStreamingResidencyTimeTestLimit [time]Default is 5 seconds

variable: r_texturesstreamingSkipMips 
type: int
current: 0
help: Number of top mips to ignore when streaming.


variable: r_TexturesStreamingSuppress 
type: int
current: 0
help: Force unloading of all textures and suppress new stream tasks.
Default is 0

variable: r_TexturesStreamingSync 
type: int
current: 0
help: Force only synchronous texture streaming.
All textures will be streamed in the main thread. Useful for debug purposes.
Usage: r_TexturesStreamingSync [0/1]
Default is 0 (off).

variable: r_TexturesStreamingUpdateType 
type: int
current: 1
help: Texture streaming update type.
Default is 0

variable: r_texturesstreampooldefragmentation 
type: int
current: 0
help: Enabled CPU (1), GPU(2) and disable (0) textures stream pool defragmentation.


variable: r_texturesstreampooldefragmentationmaxamount 
type: int
current: 524288
help: Specify the limit (in bytes) that defrag update will stop

variable: r_texturesstreampooldefragmentationmaxmoves 
type: int
current: 8
help: Specify the maximum number of blocks to move per defragmentation update

variable: r_TexturesStreamPoolSecondarySize 
type: int
current: 0
help: Size of secondary pool for textures in MB.

variable: r_TexturesStreamPoolSize 
type: int
current: 1536
help: Size of texture streaming pool in MB.


variable: r_ToneMapExposureType 
type: int
current: 0
help: Set the type of exposure to be used by tonemap operators
Usage: r_ToneMapExposureType
Default is 0
0 Auto exposure
1 Manual exposure


variable: r_ToneMapManualExposureValue 
type: float
current: 1
help: Set the manual exposure value for cheaper tonemap techniques
Usage: r_ToneMapManualExposureValue
Default is 1.0


variable: r_ToneMapTechnique 
type: int
current: 0
help: Toggles Tonemapping technique
Usage: r_ToneMapTechnique
0 Uncharted 2 Filmic curve by J Hable (default)
1 Linear operator
2 Exponential operator
3 Reinhard operator
4 Cheap ALU based filmic curve from John Hable


variable: r_transient_pool_size 
type: int
current: 4
help: the bank size in MB for the transient pool

variable: r_TransparentPasses 
type: int
current: 1
help: Toggles rendering of transparent/alpha blended objects.


variable: r_TranspDepthFixup 
type: int
current: 1
help: Write approximate depth for certain transparent objects before post effects
Usage: r_TranspDepthFixup [0/1]
Default is 1 (enabled)


variable: r_Unlit 
type: int
current: 0
help: Render just diffuse texture with no lighting (for most materials).

variable: r_UpscalingQuality 
type: int
current: 0
help: iOS Metal Upscaling Quality
Usage: 
0 Point
1 Bilinear
2 Bicubic
3 Lanczos


variable: r_UseDisplacementFactor 
type: float
current: 0.2
help: Global displacement amount.
Default is 0.4f.

variable: r_UseHWSkinning 
type: int
current: 1
help: Toggles HW skinning.
Usage: r_UseHWSkinning [0/1]
Default is 1 (on). Set to 0 to disable HW-skinning.

variable: r_UseMaterialLayers 
type: int
current: 2
help: Enables material layers rendering.
Usage: r_UseMaterialLayers [0/1/2]
Default is 2 (optimized). Set to 1 for enabling but with optimization disabled (for debug).

variable: r_UsePersistentRTForModelHUD 
type: int
current: 0
help: Uses a seperate RT to render models for the ModelHud Renderer

variable: r_UseShadowsPool 
type: int
current: 1
help: 0=Disable
1=Enable
Usage: r_UseShadowsPool[0/1]

variable: r_UseSpecularAntialiasing 
type: int
current: 1
help: Enable specular antialiasing.
Usage: r_UseSpecularAntialiasing [0/1]

variable: r_UseZPass 
type: int
current: 2
help: Toggles g-buffer pass.
Usage: r_UseZPass [0/1/2]
0: Disable Z-pass (not recommended, this disables any g-buffer rendering)
1: Enable Z-pass (g-buffer only)
2: Enable Z-pass (g-buffer and additional Z-prepass)

variable: r_VisAreaClipLightsPerPixel 
type: int
current: 1
help: Per pixel light/cubemap culling for vis areas: 0=off, 1=on

variable: r_VolumetricFogDownscaledSunShadow 
type: int
current: 1
help: Enable replacing sun shadow maps with downscaled shadow maps or static shadow map if possible.
0: disabled
1: replace first and second cascades with downscaled shadow maps. the others are replaced with static shadow map if possible.
2: replace first, second, and third cascades with downscaled shadow maps. the others are replaced with static shadow map if possible.


variable: r_VolumetricFogDownscaledSunShadowRatio 
type: int
current: 1
help: Set downscale ratio for sun shadow maps
0: 1/4 downscaled sun shadow maps
1: 1/8 downscaled sun shadow maps
2: 1/16 downscaled sun shadow maps


variable: r_VolumetricFogMinimumLightBulbSize 
type: float
current: 0.4
help: Adjust the minimum size threshold for light attenuation bulb size. Small bulb size causes the light flicker.

variable: r_VolumetricFogReprojectionBlendFactor 
type: float
current: 0.9
help: Adjust the blend factor of temporal reprojection.
Acceptable value is between 0 and 1.
0 means temporal reprojecton is off.


variable: r_VolumetricFogReprojectionMode 
type: int
current: 1
help: Set the mode of ghost reduction for temporal reprojection.
0: conservative
1: advanced

variable: r_VolumetricFogSample 
type: int
current: 0
help: Adjust number of sample points.
0: 1 sample point in a voxel
1: 2 sample points in a voxel
2: 4 sample points in a voxel


variable: r_VolumetricFogShadow 
type: int
current: 1
help: Adjust shadow sample count per sample point.
0: 1 shadow sample per sample point
1: 2 shadow samples per sample point 
2: 3 shadow samples per sample point
3: 4 shadow samples per sample point


variable: r_VolumetricFogTexDepth 
type: int
current: 32
help: Depth resolution of volume texture.
Huge value runs out of performance and video memory.


variable: r_VolumetricFogTexScale 
type: int
current: 10
help: Width and height scale factor (divided by screen resolution) for volume texture.
Acceptable value is more than equal 2.


variable: r_VSync DUMPTODISK, RESTRICTEDMODE
type: int
current: 1
help: Toggles vertical sync.
0: Disabled
1: Enabled
2: Enabled, use asynchronous swaps on X360

variable: r_WaterCaustics 
type: int
current: 1
help: Toggles under water caustics.
Usage: r_WaterCaustics [0/1]
Default is 1 (enabled).

variable: r_WaterCausticsDistance 
type: float
current: 100
help: Toggles under water caustics max distance.
Usage: r_WaterCausticsDistance
Default is 100.0 meters

variable: r_WaterGodRays 
type: int
current: 1
help: Enables under water god rays.
Usage: r_WaterGodRays [0/1]
Default is 1 (enabled).

variable: r_WaterGodRaysDistortion 
type: float
current: 1
help: Set the amount of distortion when underwater.
Usage: r_WaterGodRaysDistortion [n]
Default is 1.

variable: r_WaterReflections DUMPTODISK
type: int
current: 1
help: Toggles water reflections.
Usage: r_WaterReflections [0/1]
Default is 1 (water reflects).

variable: r_WaterReflectionsMinVisiblePixelsUpdate DUMPTODISK
type: float
current: 0.05
help: Activates water reflections if visible pixels above a certain threshold.

variable: r_WaterReflectionsMinVisUpdateDistanceMul DUMPTODISK
type: float
current: 10
help: Activates update distance multiplier when water mostly occluded.

variable: r_WaterReflectionsMinVisUpdateFactorMul DUMPTODISK
type: float
current: 20
help: Activates update factor multiplier when water mostly occluded.

variable: r_WaterReflectionsQuality DUMPTODISK
type: int
current: 4
help: Activates water reflections quality setting.
Usage: r_WaterReflectionsQuality [0/1/2/3]
Default is 0 (terrain only), 1 (terrain + particles), 2 (terrain + particles + brushes), 3 (everything)

variable: r_WaterTessellationHW 
type: int
current: 1
help: Enables hw water tessellation.
Usage: r_WaterTessellationHW [0/1]

variable: r_WaterUpdateDistance 
type: float
current: 0.2
help: 

variable: r_WaterUpdateFactor DUMPTODISK
type: float
current: 0
help: Distance factor for water reflected texture updating.
Usage: r_WaterUpdateFactor 0.01
Default is 0.01. 0 means update every frame

variable: r_WaterVolumeCaustics 
type: int
current: 1
help: Toggles advanced water caustics for watervolumes.
Usage: r_WaterVolumeCaustics [0/1]
Default is 0 (disabled). 1 - enables.

variable: r_WaterVolumeCausticsDensity 
type: int
current: 256
help: Density/resolution of watervolume caustic grid.
Usage: r_WaterVolumeCausticsDensity [16/256]
Default is 256

variable: r_WaterVolumeCausticsMaxDist 
type: float
current: 35
help: Maximum distance in which caustics are visible.
Usage: r_WaterVolumeCausticsMaxDist [n]
Default is 35

variable: r_WaterVolumeCausticsRes 
type: int
current: 1024
help: Resolution of watervoluem caustics texture.
Usage: r_WaterVolumeCausticsRes [n]
Default is 1024

variable: r_WaterVolumeCausticsSnapFactor 
type: float
current: 1
help: Distance in which to snap the vertex grid/projection (to avoid aliasing).
Usage: r_WaterVolumeCausticsSnapFactor [n]
Default is 1.0

variable: r_Width DUMPTODISK
type: int
current: 1280
help: Sets the display width, in pixels. Default is 1280.
Usage: r_Width [800/1024/..]

variable: r_WidthAndHeightAsFractionOfScreenSize DUMPTODISK
type: float
current: 1
help: (iOS/Android only) Sets the display width and height as a fraction of the physical screen size. Default is 1.0.
Usage: rWidthAndHeightAsFractionOfScreenSize [0.1 - 1.0]

variable: r_wireframe 
type: int
current: 0
help: Toggles wireframe rendering mode

variable: r_ZFightingDepthScale 
type: float
current: 0.995
help: Controls anti z-fighting measures in shaders (scaling homogeneous z).

variable: r_ZFightingExtrude 
type: float
current: 0.001
help: Controls anti z-fighting measures in shaders (extrusion along normal in world units).

variable: r_ZPassDepthSorting 
type: int
current: 1
help: Toggles Z pass depth sorting.
Usage: r_ZPassDepthSorting [0/1/2]
0: No depth sorting
1: Sort by depth layers (default)
2: Sort by distance


variable: r_ZPrepassMaxDist 
type: float
current: 16
help: Set ZPrepass max dist.
Usage: r_ZPrepassMaxDist (16.0f default) [distance in meters]


variable: rc_debugVerboseLevel 
type: int
current: 0
help: 

variable: rcon_password 
type: string
current: 
help: Sets password for the RCON system

variable: s_ATLPoolSize REQUIRE_APP_RESTART
type: int
current: 8192
help: Specifies the size (in KiB) of the memory pool to be used by the ATL.
Usage: s_ATLPoolSize [0/...]
Default Windows: 8192 (8 MiB), Xbox One: 8192 (8 MiB), PS4: 8192 (8 MiB), Mac: 8192 (8 MiB), Linux: 8192 (8 MiB), iOS: 8192 (8 MiB), Android: 4096 (4 MiB)


variable: s_AudioEventPoolSize REQUIRE_APP_RESTART
type: int
current: 512
help: Sets the number of preallocated audio events.
Usage: s_AudioEventPoolSize [0/...]
Default Windows: 512, Xbox One: 256, PS4: 256, Mac: 256, Linux: 256, iOS: 64, Android: 128


variable: s_AudioListenerTranslationPercentage 
type: float
current: 0
help: Use this to specify a percentage of translation of the audio listener between two points
(usually these are the camera's location and player's location).
Usage: s_AudioListenerTranslationPercentage [0.0..1.0]
Default: 0.0


variable: s_AudioListenerTranslationZOffset 
type: float
current: 0
help: Use this to specify a Z-Offset ("Up") for the audio listener's position.
Usage: s_AudioListenerTranslationZOffset 1.3
Default: 0.0


variable: s_AudioLoggingOptions 
type: int
current: 192
help: Toggles the logging of audio related messages.
Usage: s_AudioLoggingOptions [ab...] (flags can be combined)
Default: ab (Errors & Warnings)
a: Errors
b: Warnings
c: Comments


variable: s_AudioObjectPoolSize REQUIRE_APP_RESTART
type: int
current: 1024
help: Sets the number of preallocated audio objects and corresponding audio proxies.
Usage: s_AudioObjectPoolSize [0/...]
Default Windows: 1024, Xbox One: 512, PS4: 512, Mac: 512, Linux: 512, iOS: 128, Android: 256


variable: s_AudioObjectsDebugFilter 
type: string
current: 
help: Allows for filtered display of audio objects by a search string.
Usage: s_AudioObjectsDebugFilter spaceship.
Default: " " (all)


variable: s_AudioProxiesInitType 
type: int
current: 0
help: Can override AudioProxies' init type on a global scale.
If set it determines whether AudioProxies initialize synchronously or asynchronously.
This is a performance type cvar as asynchronously initializing AudioProxies
will have a greatly reduced impact on the calling thread.
Be aware though that when set to initialize asynchronously that audio will play back delayed.
By how much will greatly depend on the audio thread's work load.
0: AudioProxy specific initialization.
1: All AudioProxies initialize synchronously.
2: All AudioProxies initialize asynchronously.
Usage: s_AudioProxiesInitType [0/1/2]
Default Windows: 0, Xbox One: 0, PS4: 0, Mac: 0, Linux: 0, iOS: 0, Android: 0


variable: s_AudioSystemImplementationName 
type: string
current: CryAudioImplWwise
help: Holds the name of the AudioSystemImplementation library to be used.
Usage: s_AudioSystemImplementationName <name of the library without extension>
Default: CryAudioImplWwise


variable: s_AudioTriggersDebugFilter 
type: string
current: 
help: Allows for filtered display of audio triggers by a search string.
Usage: s_AudioTriggersDebugFilter laser
Default: " " (all)


variable: s_DrawAudioDebug 
type: int
current: 0
help: Draws AudioTranslationLayer related debug data to the screen.
Usage: s_DrawAudioDebug [0ab...] (flags can be combined)
0: No audio debug info on the screen.
a: Draw spheres around active audio objects.
b: Show text labels for active audio objects.
c: Show trigger names for active audio objects.
d: Show current states for active audio objects.
e: Show RTPC values for active audio objects.
f: Show Environment amounts for active audio objects.
g: Draw occlusion rays.
h: Show occlusion ray labels.
i: Draw sphere around active audio listener.
v: List active Events.
w: List active Audio Objects.
x: Show FileCache Manager debug info.


variable: s_FileCacheManagerDebugFilter 
type: int
current: 0
help: Allows for filtered display of the different AFCM entries such as Globals, Level Specifics, Game Hints and so on.
Usage: s_FileCacheManagerDebugFilter [0ab...] (flags can be combined)
Default: 0 (all)
a: Globals
b: Level Specifics
c: Game Hints


variable: s_FileCacheManagerSize REQUIRE_APP_RESTART
type: int
current: 393216
help: Sets the size in KiB the AFCM will allocate on the heap.
Usage: s_FileCacheManagerSize [0/...]
Default Windows: 393216 (384 MiB), Xbox One: 393216 (384 MiB), PS4: 393216 (384 MiB), Mac: 393216 (384 MiB), Linux: 393216 (384 MiB), iOS: 2048 (2 MiB), Android: 73728 (72 MiB)


variable: s_FullObstructionMaxDistance 
type: float
current: 5
help: For the sounds whose distance to the listener is greater than this value, the obstruction value gets attenuated with distance.
Usage: s_FullObstructionMaxDistance [0/...]
Default: 5 m


variable: s_IgnoreWindowFocus 
type: int
current: 0
help: If set to 1, the sound system will continue playing when the Editor or Game window loses focus.
Usage: s_IgnoreWindowFocus [0/1]
Default: 0 (off)


variable: s_OcclusionMaxDistance 
type: float
current: 500
help: Obstruction/Occlusion is not calculated for the sounds whose distance to the listener is greater than this value.
Setting this value to 0 disables obstruction/occlusion calculations.
Usage: s_OcclusionMaxDistance [0/...]
Default: 500 m


variable: s_OcclusionMaxSyncDistance 
type: float
current: 10
help: Physics rays are processed synchronously for the sounds that are closer to the listener than this value, and asynchronously
for the rest (possible performance optimization).
Usage: s_OcclusionMaxSyncDistance [0/...]
Default: 10 m


variable: s_PositionUpdateThreshold 
type: float
current: 0.1
help: An audio object has to move by at least this amount to issue a position update request to the audio system.
This kind of optimization should ideally be done by the parent system so this is here for convenience.
Usage: s_PositionUpdateThreshold [0/...]
Default: 0.1 (10 cm)


variable: s_ShowActiveAudioObjectsOnly 
type: int
current: 1
help: When drawing audio object names on the screen this cvar can be used to choose between all registered audio objects or only those that reference active audio triggers.
Usage: s_ShowActiveAudioObjectsOnly [0/1]
Default: 1 (active only)


variable: s_VelocityTrackingThreshold 
type: float
current: 0.1
help: An audio object has to change its velocity by at least this amount to issue an "object_speed" RTPC update request to the audio system.
Usage: s_VelocityTrackingThreshold [0/...]
Default: 0.1 (10 cm/s)


variable: s_WwiseCommandQueueMemoryPoolSize REQUIRE_APP_RESTART
type: int
current: 256
help: Specifies the size (in KiB) of the Wwise command queue memory pool.
Usage: s_WwiseCommandQueueMemoryPoolSize [0/...]
Default Windows: 256, Xbox One: 256, PS4: 256, Mac: 256, Linux: 256, iOS: 256, Android: 256


variable: s_WwiseEnableCommSystem REQUIRE_APP_RESTART
type: int
current: 0
help: Specifies whether Wwise should initialize using its Comm system or not.
This cvar is only available in non-release builds.
Usage: s_WwiseEnableCommSystem [0/1]
Default: 0 (off)


variable: s_WwiseEnableOutputCapture REQUIRE_APP_RESTART
type: int
current: 0
help: Allows for capturing the output audio to a wav file.
This cvar is only available in non-release builds.
Usage: s_WwiseEnableOutputCapture [0/1]
Default: 0 (off)


variable: s_WwiseLowerEngineDefaultPoolSize REQUIRE_APP_RESTART
type: int
current: 16384
help: Specifies the size (in KiB) of the Wwise lower engine memory pool.
Usage: s_WwiseLowerEngineDefaultPoolSize [0/...]
Default Windows: 16384 (16 MiB), Xbox One: 16384 (16 MiB), PS4: 16384 (16 MiB), Mac: 16384 (16 MiB), Linux: 16384 (16 MiB), iOS: 16384 (16 MiB), Android: 16384 (16 MiB)


variable: s_WwiseMonitorMemoryPoolSize REQUIRE_APP_RESTART
type: int
current: 256
help: Specifies the size (in KiB) of the Wwise monitor memory pool.
Usage: s_WwiseMonitorMemoryPoolSize [0/...]
Default Windows: 256, Xbox One: 256, PS4: 256, Mac: 256, Linux: 256, iOS: 256, Android: 256


variable: s_WwiseMonitorQueueMemoryPoolSize REQUIRE_APP_RESTART
type: int
current: 64
help: Specifies the size (in KiB) of the Wwise monitor queue memory pool.
Usage: s_WwiseMonitorQueueMemoryPoolSize [0/...]
Default Windows: 64, Xbox One: 64, PS4: 64, Mac: 64, Linux: 64, iOS: 64, Android: 64


variable: s_WwisePrepareEventMemoryPoolSize REQUIRE_APP_RESTART
type: int
current: 2048
help: Specifies the size (in KiB) of the Wwise prepare event memory pool.
Usage: s_WwisePrepareEventMemoryPoolSize [0/...]
Default Windows: 2048 (2 MiB), Xbox One: 2048 (2 MiB), PS4: 2048 (2 MiB), Mac: 2048 (2 MiB), Linux: 2048 (2 MiB), iOS: 2048 (2 MiB), Android: 2048 (2 MiB)


variable: s_WwisePrimaryPoolSize REQUIRE_APP_RESTART
type: int
current: 131072
help: Specifies the size (in KiB) of the memory pool to be used by the Wwise audio system implementation.
Usage: s_WwisePrimaryPoolSize [0/...]
Default Windows: 131072 (128 MiB), Xbox One: 131072 (128 MiB), PS4: 131072 (128 MiB), Mac: 131072 (128 MiB), Linux: 131072 (128 MiB), iOS: 8192 (8 MiB), Android: 32768 (32 MiB)


variable: s_WwiseSecondaryPoolSize REQUIRE_APP_RESTART
type: int
current: 0
help: Specifies the size (in KiB) of the memory pool to be used by the Wwise audio system implementation.
Usage: s_WwiseSecondaryPoolSize [0/...]
Default Windows: 0, Xbox One: 32768 (32 MiB), PS4: 0, Mac: 0, Linux: 0, iOS: 0, Android: 0


variable: s_WwiseSoundEngineDefaultMemoryPoolSize REQUIRE_APP_RESTART
type: int
current: 8192
help: Specifies the size (in KiB) of the Wwise sound engine default memory pool.
Usage: s_WwiseSoundEngineDefaultMemoryPoolSize [0/...]
Default Windows: 8192 (8 MiB), Xbox One: 8192 (8 MiB), PS4: 8192 (8 MiB), Mac: 8192 (8 MiB), Linux: 8192 (8 MiB), iOS: 8192 (8 MiB), Android: 8192 (8 MiB)


variable: s_WwiseStreamDeviceMemoryPoolSize REQUIRE_APP_RESTART
type: int
current: 2048
help: Specifies the size (in KiB) of the Wwise stream device memory pool.
Usage: s_WwiseStreamDeviceMemoryPoolSize [0/...]
Default Windows: 2048 (2 MiB), Xbox One: 2048 (2 MiB), PS4: 2048 (2 MiB), Mac: 2048 (2 MiB), Linux: 2048 (2 MiB), iOS: 2048 (2 MiB), Android: 2048 (2 MiB)


variable: s_WwiseStreamManagerMemoryPoolSize REQUIRE_APP_RESTART
type: int
current: 64
help: Specifies the size (in KiB) of the Wwise stream manager memory pool.
Usage: s_WwiseStreamManagerMemoryPoolSize [0/...]
Default Windows: 64, Xbox One: 64, PS4: 64, Mac: 64, Linux: 64, iOS: 64, Android: 64


variable: sc_autoupdate 
type: int
current: 5
help: Set the auto-update poll period for new SoftCode modules. Set to zero to disable

variable: STAP_DEBUG 
type: int
current: 0
help: Enable STAP Debug Rendering

variable: STAP_DISABLE 
type: int
current: 0
help: Disable torso orientation

variable: STAP_LOCK_EFFECTOR 
type: int
current: 0
help: Lock the STAP Effector Joint

variable: STAP_OVERRIDE_TRACK_FACTOR 
type: float
current: -1
help: Override the base anim tracking factor

variable: STAP_TRANSLATION_FEATHER 
type: int
current: 1
help: Enable STAP Translation Feathering

variable: STAP_TRANSLATION_FUDGE 
type: int
current: 1
help: Enable STAP Translation Fudge

variable: stats_FpsBuckets 
type: int
current: 0
help: 

variable: stats_PakFile 
type: int
current: 0
help: 

variable: stats_Particles 
type: int
current: 0
help: 

variable: stats_RenderBatchStats 
type: int
current: 0
help: 

variable: stats_RenderSummary 
type: int
current: 0
help: 

variable: stats_Warnings 
type: int
current: 0
help: 

variable: sv_AISystem REQUIRE_APP_RESTART
type: int
current: 1
help: Load and use the AI system on the server

variable: sv_bandwidth 
type: int
current: 50000
help: Bit rate on server

variable: sv_bind REQUIRE_LEVEL_RELOAD
type: string
current: 0.0.0.0
help: Bind the server to a specific IP address

variable: sv_DedicatedCPUPercent 
type: float
current: 0
help: Sets the target CPU usage when running as a dedicated server, or disable this feature if it's zero.
Usage: sv_DedicatedCPUPercent [0..100]
Default is 0 (disabled).

variable: sv_DedicatedCPUVariance 
type: float
current: 10
help: Sets how much the CPU can vary from sv_DedicateCPU (up or down) without adjusting the framerate.
Usage: sv_DedicatedCPUVariance [5..50]
Default is 10.

variable: sv_DedicatedMaxRate 
type: float
current: 30
help: Sets the maximum update rate when running as a dedicated server.
Usage: sv_DedicatedMaxRate [5..500]
Default is 30.

variable: sv_dumpstats 
type: int
current: 1
help: Enables/disables dumping of level and player statistics, positions, etc. to files

variable: sv_dumpstatsperiod 
type: int
current: 1000
help: Time period of statistics dumping in milliseconds

variable: sv_gamerules 
type: string
current: DummyRules
help: The game rules that the server should use

variable: sv_gamerulesdefault 
type: string
current: DummyRules
help: The game rules that the server default to when disconnecting

variable: sv_lanonly DUMPTODISK
type: int
current: 0
help: Set for LAN games

variable: sv_levelrotation 
type: string
current: levelrotation
help: Sequence of levels to load after each game ends

variable: sv_LoadAllLayersForResList 
type: int
current: 0
help: Bypasses game object layer filtering to load all layers of objects for a multiplayer level

variable: sv_map 
type: string
current: Simple
help: The map the server should load

variable: sv_maxplayers DUMPTODISK
type: int
current: 32
help: Maximum number of players allowed to join server.

variable: sv_maxspectators DUMPTODISK
type: int
current: 32
help: Maximum number of players allowed to be spectators during the game.

variable: sv_packetRate 
type: int
current: 30
help: Packet rate on server

variable: sv_password DUMPTODISK
type: string
current: 
help: Server password

variable: sv_port DUMPTODISK
type: int
current: 30090
help: Server address

variable: sv_requireinputdevice DUMPTODISK, REQUIRE_LEVEL_RELOAD
type: string
current: dontcare
help: Which input devices to require at connection (dontcare, none, gamepad, keyboard)

variable: sv_servername DUMPTODISK
type: string
current: 
help: Server name will be displayed in server list. If empty, machine name will be used.

variable: sv_timeofdayenable DUMPTODISK
type: int
current: 0
help: Enables time of day simulation.

variable: sv_timeofdaylength DUMPTODISK
type: float
current: 1
help: Sets time of day changing speed.

variable: sv_timeofdaystart DUMPTODISK
type: float
current: 12
help: Sets time of day start time.

variable: sv_timeout_disconnect 
type: int
current: 0
help: Timeout for fully disconnecting timeout connections

variable: sys_affinity 
type: int
current: 0
help: 

variable: sys_AI 
type: int
current: 1
help: Enables AI Update

variable: sys_asserts 
type: int
current: 1
help: 0 = Disable Asserts
1 = Enable Asserts
2 = Fatal Error on Assert


variable: sys_audio_disable REQUIRE_APP_RESTART
type: int
current: 0
help: Specifies whether to use the NULLAudioSystem in place of the regular AudioSystem
Usage: sys_audio_disable [0/1]
0: use regular AudioSystem.
1: use NullAudioSystem (disable all audio functionality).
Default: 0 (enable audio functionality)

variable: sys_bp_frames 
type: int
current: 0
help: Starts frame profiling for specified number of frames using BootProfiler

variable: sys_bp_time_threshold 
type: float
current: 0.1
help: If greater than 0 don't write blocks that took less time (default 0.1 ms)

variable: sys_budget_frametime DUMPTODISK
type: float
current: 50
help: Sets the upper limit for frame time (in ms) when monitoring budget.

variable: sys_budget_numdrawcalls DUMPTODISK
type: int
current: 2000
help: Sets the upper limit for number of draw calls per frame.

variable: sys_budget_numpolys DUMPTODISK
type: int
current: 500000
help: Sets the upper limit for number of polygons per frame.

variable: sys_budget_soundchannels DUMPTODISK
type: int
current: 32
help: Sets the upper limit for sound channels playing when monitoring budget.

variable: sys_budget_soundCPU DUMPTODISK
type: int
current: 15
help: Sets the upper limit for sound CPU (in Percent) when monitoring budget.

variable: sys_budget_soundmem DUMPTODISK
type: int
current: 32
help: Sets the upper limit for sound memory (in MB) when monitoring budget.

variable: sys_budget_streamingthroughput DUMPTODISK
type: float
current: 1024
help: Sets the upper limit for streaming throughput(KB/s).

variable: sys_budget_sysmem DUMPTODISK
type: int
current: 512
help: Sets the upper limit for system memory (in MB) when monitoring budget.

variable: sys_budget_videomem DUMPTODISK
type: int
current: 90
help: Sets the upper limit for video memory (in MB) when monitoring budget.

variable: sys_DeactivateConsole 
type: int
current: 0
help: 0: normal console behavior
1: hide the console

variable: sys_deferAudioUpdateOptim 
type: int
current: 1
help: 0 - disable optimisation
1 - enable optimisation
Default is 1

variable: sys_display_threads 
type: int
current: 0
help: Displays Thread info

variable: sys_dll_ai 
type: string
current: CryAISystem
help: Specifies the DLL to load for the AI system

variable: sys_dll_game READONLY
type: string
current: MyGame
help: Specifies the game DLL to load (without the .dll extension)

variable: sys_dll_response_system 
type: string
current: 
help: Specifies the DLL to load for the dynamic response system

variable: sys_dump_aux_threads 
type: int
current: 1
help: Dumps callstacks of other threads in case of a crash

variable: sys_dump_type 
type: int
current: 2
help: Specifies type of crash dump to create - see MINIDUMP_TYPE in dbghelp.h for full list of values
0: Do not create a minidump
1: Create a small minidump (stacktrace)
2: Create a medium minidump (+ some variables)
3: Create a full minidump (+ all memory)


variable: sys_enable_budgetmonitoring 
type: int
current: 0
help: Enables budget monitoring. Use #System.SetBudget( sysMemLimitInMB, videoMemLimitInMB,
frameTimeLimitInMS, soundChannelsPlaying ) or sys_budget_sysmem, sys_budget_videomem
or sys_budget_fps to set budget limits.

variable: sys_enableCanvasEditor 
type: int
current: 1
help: Enables the UI Canvas Editor

variable: sys_entities 
type: int
current: 1
help: Enables Entities Update

variable: sys_error_debugbreak 
type: int
current: 0
help: __debugbreak() if a VALIDATOR_ERROR_DBGBREAK message is hit

variable: sys_FilesystemCaseSensitivity 
type: int
current: 0
help: 0 = Ignore letter casing mismatches, 1 = Show warning on mismatch, 2 = Show error on mismatch

variable: sys_firstlaunch 
type: int
current: 0
help: Indicates that the game was run for the first time.

variable: sys_float_exceptions 
type: int
current: 0
help: Use or not use floating point exceptions.

variable: sys_force_installtohdd_mode 
type: int
current: 0
help: Forces install to HDD mode even when doing DVD emulation

variable: sys_game_folder READONLY
type: string
current: MyGame
help: Specifies the game folder to read all data from. Can be fully pathed for external folders or relative path for folders inside the root.

variable: sys_game_name DUMPTODISK
type: string
current: MyGame
help: Specifies the name to be displayed in the Launcher window title bar

variable: sys_initpreloadpacks 
type: string
current: 
help: Specifies the paks for an engine initialization

variable: sys_job_system_enable 
type: int
current: 1
help: Enable the JobSystem.
Usage: sys_job_system_enable 0/1
0: The Jobsystem is disabled, each job is executed in its invoking thread.
1: The JobSystem is enabled, each job is invoked in one of the worker threads.

variable: sys_job_system_filter 
type: string
current: 
help: Filters a Job.
Usage: sys_job_system_filter name1,name2,..
Where 'name' refers to the exact name of the job, 0 disables it
More than one job can be specified by using a comma separated list

variable: sys_job_system_max_worker 
type: int
current: 8
help: Sets the number of threads to use for the job systemDefaults to 4 on consoles and 8 threads an PCSet to 0 to create as many threads as cores are available

variable: sys_job_system_profiler 
type: int
current: 0
help: Enable the job system profiler.
Usage: sys_job_system_profiler <value>
0: Disable the profiler
1: Show the full profiler
2: Show only the execution graph


variable: sys_keyboard 
type: int
current: 1
help: Enables keyboard.
Usage: sys_keyboard [0/1]
Default is 1 (on).

variable: sys_limit_phys_thread_count 
type: int
current: 1
help: Limits p_num_threads to physical CPU count - 1

variable: sys_LoadFrontendShaderCache 
type: int
current: 0
help: Load frontend shader cache (on/off)

variable: sys_localization_debug 
type: int
current: 0
help: Toggles debugging of the Localization Manager.
Usage: sys_localization_debug [0..3]
1: outputs warnings
2: outputs extended information and warnings
3: outputs CRC32 hashes and strings to help detect clashes
Default is 0 (off).

variable: sys_localization_encode REQUIRE_APP_RESTART
type: int
current: 1
help: Toggles encoding of translated text to save memory. REQUIRES RESTART.
Usage: sys_localization_encode [0..1]
0: No encoding, store as wide strings
1: Huffman encode translated text, saves approx 30% with a small runtime performance cost
Default is 1.

variable: sys_localization_folder 
type: string
current: Localization
help: Sets the folder where to look for localized data.
This cvar allows for backwards compatibility so localized data under the game folder can still be found.
Usage: sys_localization_folder <folder name>
Default: Localization


variable: sys_LocalMemoryDiagramAlpha 
type: int
current: 255
help: LocalMemoryUsage tool: Color alpha of the diagrams

variable: sys_LocalMemoryDiagramDistance 
type: float
current: -5.5
help: LocalMemoryUsage tool: Distance of the diagram from the main debug object

variable: sys_LocalMemoryDiagramRadius 
type: float
current: 2.5
help: LocalMemoryUsage tool: Radius of the diagram

variable: sys_LocalMemoryDiagramStreamingSpeedDistance 
type: float
current: 2.2
help: LocalMemoryUsage tool: Distance of the streaming speed diagram from the streaming speed debug line

variable: sys_LocalMemoryDiagramStreamingSpeedRadius 
type: float
current: 1
help: LocalMemoryUsage tool: Radius of the streaming speed diagram

variable: sys_LocalMemoryDiagramWidth 
type: float
current: 0.5
help: LocalMemoryUsage tool: Width of the diagrams OBSOLATE

variable: sys_LocalMemoryDrawText 
type: int
current: 0
help: LocalMemoryUsage tool: If != 0, it will draw the numeric values

variable: sys_LocalMemoryGeometryLimit 
type: int
current: 32
help: LocalMemoryUsage tool: Set the statobj geometry memory limit to check streaming (Mb/sec)

variable: sys_LocalMemoryGeometryStreamingSpeedLimit 
type: int
current: 10
help: LocalMemoryUsage tool: Stat object geometry streaming speed limit (approx, Mb/sec)

variable: sys_LocalMemoryInnerViewDistance 
type: float
current: 100
help: LocalMemoryUsage tool: View distance for detailed debug draw

variable: sys_LocalMemoryLogText 
type: int
current: 0
help: LocalMemoryUsage tool: If != 0, it will log the numeric values

variable: sys_LocalMemoryMaxMSecBetweenCalls 
type: int
current: 1000
help: LocalMemoryUsage tool: Maximal time difference (MSec) between calls

variable: sys_LocalMemoryObjectAlpha 
type: int
current: 128
help: LocalMemoryUsage tool: Color alpha of the debug objects

variable: sys_LocalMemoryObjectHeight 
type: float
current: 2
help: LocalMemoryUsage tool: Height of the streaming buffer debug object

variable: sys_LocalMemoryObjectWidth 
type: float
current: 6
help: LocalMemoryUsage tool: Width of the streaming buffer debug object

variable: sys_LocalMemoryOptimalMSecPerSec 
type: int
current: 100
help: LocalMemoryUsage tool: Optimal calculation time (MSec) per secundum

variable: sys_LocalMemoryOuterViewDistance 
type: float
current: 500
help: LocalMemoryUsage tool: View distance for debug draw

variable: sys_LocalMemoryStreamingSpeedObjectLength 
type: float
current: 10
help: LocalMemoryUsage tool: Length of the streaming speed debug object

variable: sys_LocalMemoryStreamingSpeedObjectWidth 
type: float
current: 1.5
help: LocalMemoryUsage tool: Width of the streaming speed debug object

variable: sys_LocalMemoryTextureLimit 
type: int
current: 64
help: LocalMemoryUsage tool: Set the texture memory limit to check streaming (Mb/sec)

variable: sys_LocalMemoryTextureStreamingSpeedLimit 
type: int
current: 10
help: LocalMemoryUsage tool: Texture streaming speed limit (approx, Mb/sec)

variable: sys_LocalMemoryWarningRatio 
type: float
current: 0.8
help: LocalMemoryUsage tool: Warning ratio for streaming

variable: sys_logallocations DUMPTODISK
type: int
current: 0
help: Save allocation call stack

variable: sys_main_CPU 
type: int
current: 0
help: Specifies the physical CPU index main will run on

variable: sys_max_step 
type: float
current: 0.05
help: Specifies the maximum physics step in a separate thread

variable: sys_MaxFPS 
type: int
current: -1
help: Limits the frame rate to specified number n (if n>0 and if vsync is disabled).
 0 = on PC if vsync is off auto throttles fps while in menu or game is paused (default)
-1 = off

variable: sys_maxTimeStepForMovieSystem 
type: float
current: 0.1
help: Caps the time step for the movie system so that a cut-scene won't be jumped in the case of an extreme stall.

variable: sys_memory_debug 
type: int
current: 0
help: Enables to activate low memory situation is specific places in the code (argument defines which place), 0=off

variable: sys_MemoryDeadListSize REQUIRE_APP_RESTART
type: int
current: 0
help: Keep upto size bytes in a "deadlist" of allocations to assist in capturing tramples

variable: sys_menupreloadpacks 
type: string
current: 
help: Specifies the paks for a main menu loading

variable: sys_min_step 
type: float
current: 0.01
help: Specifies the minimum physics step in a separate thread

variable: sys_no_crash_dialog 
type: int
current: 0
help: 

variable: sys_noupdate 
type: int
current: 0
help: Toggles updating of system with sys_script_debugger.
Usage: sys_noupdate [0/1]
Default is 0 (system updates during debug).

variable: sys_PakDisableNonLevelRelatedPaks 
type: int
current: 1
help: Disables all paks that are not required by specific level; This is used with per level splitted assets.

variable: sys_PakInMemorySizeLimit 
type: int
current: 6
help: Individual pak size limit for being loaded into memory (MB)

variable: sys_PakLoadCache 
type: int
current: 0
help: Load in memory paks from _LoadCache folder

variable: sys_PakLoadModePaks 
type: int
current: 0
help: Load mode switching paks from modes folder

variable: sys_PakLogAllFileAccess 
type: int
current: 0
help: Log all file access allowing you to easily see whether a file has been loaded directly, or which pak file.

variable: sys_PakLogInvalidFileAccess 
type: int
current: 0
help: Log synchronous file access when in game

variable: sys_PakLogMissingFiles 
type: int
current: 0
help: If non-0, missing file names go to mastercd/MissingFilesX.log.
1) only resulting report
2) run-time report is ON, one entry per file
3) full run-time report

variable: sys_PakMessageInvalidFileAccess 
type: int
current: 0
help: Message Box synchronous file access when in game

variable: sys_PakPriority READONLY
type: int
current: 0
help: If set to 1, tells CryPak to try to open the file in pak first, then go to file system

variable: sys_PakReadSlice 
type: int
current: 0
help: If non-0, means number of kilobytes to use to read files in portions. Should only be used on Win9x kernels

variable: sys_PakSaveFastLoadResourceList 
type: int
current: 0
help: Save resource list during initial loading

variable: sys_PakSaveLevelResourceList 
type: int
current: 0
help: Save resource list when loading level

variable: sys_PakSaveMenuCommonResourceList 
type: int
current: 0
help: Save resource list during front end menu flow

variable: sys_PakSaveTotalResourceList 
type: int
current: 0
help: Save resource list

variable: sys_PakStreamCache 
type: int
current: 0
help: Load in memory paks for faster streaming (cgf_cache.pak,dds_cache.pak)

variable: sys_PakTotalInMemorySizeLimit 
type: int
current: 30
help: Total limit (in MB) for all in memory paks

variable: sys_PakValidateFileHash 
type: int
current: 1
help: Validate file hashes in pak files for collisions

variable: sys_PakWarnOnPakAccessFailures 
type: int
current: 1
help: If 1, access failure for Paks is treated as a warning, if zero it is only a log message.

variable: sys_perfhud 
type: int
current: 0
help: PerfHUD 0:off, 1:In focus, 2:Out of focus

variable: sys_perfhud_fpsBucketsExclusive 
type: int
current: 0
help: Toggle FPS Buckets exclusive / inclusive

variable: sys_perfhud_pause 
type: int
current: 0
help: Toggle FPS Buckets exclusive / inclusive

variable: sys_physics 
type: int
current: 1
help: Enables Physics Update

variable: sys_physics_CPU 
type: int
current: 1
help: Specifies the physical CPU index physics will run on

variable: sys_preload 
type: int
current: 0
help: Preload Game Resources

variable: sys_ProfileLevelLoading 
type: int
current: 0
help: Output level loading stats into log
0 = Off
1 = Output basic info about loading time per function
2 = Output full statistics including loading time and memory allocations with call stack info

variable: sys_ProfileLevelLoadingDump 
type: int
current: 0
help: Output level loading dump stats into log


variable: sys_rendersplashscreen 
type: int
current: 1
help: Render the splash screen during game initialization

variable: sys_resource_cache_folder 
type: string
current: Editor\ResourceCache
help: Folder for resource compiled locally. Managed by Sandbox.

variable: sys_scale3DMouseTranslation 
type: float
current: 0.2
help: Scales translation speed of supported 3DMouse devices.

variable: sys_Scale3DMouseYPR 
type: float
current: 0.05
help: Scales rotation speed of supported 3DMouse devices.

variable: sys_screensaver_allowed 
type: int
current: 0
help: Specifies if screen saver is allowed to start up while the game is running.

variable: sys_simple_http_base_port REQUIRE_APP_RESTART
type: int
current: 1880
help: sets the base port for the simple http server to run on, defaults to 1880

variable: sys_SimulateTask 
type: int
current: 0
help: Simulate a task in System:Update which takes X ms

variable: sys_skip_input 
type: int
current: 0
help: Skip input initialization

variable: sys_spec_full 
type: int
current: 8
help: Console variable group to apply settings to multiple variables

sys_spec_full [1/2/3/4/5/6/7/8/default] [current]:
 ... sys_spec_GameEffects = 1/2/3/4/5/6/7/8/7 [8]
 ... sys_spec_ObjectDetail = 1/2/3/4/5/6/7/8/7 [8]
 ... sys_spec_Particles = 1/2/3/4/5/6/7/8/7 [8]
 ... sys_spec_Physics = 1/2/3/4/5/6/7/8/7 [8]
 ... sys_spec_PostProcessing = 1/2/3/4/5/6/7/8/7 [8]
 ... sys_spec_Shading = 1/2/3/4/5/6/7/8/7 [8]
 ... sys_spec_Shadows = 1/2/3/4/5/6/7/8/7 [8]
 ... sys_spec_Sound = 1/2/3/4/5/6/7/8/7 [8]
 ... sys_spec_Texture = 1/2/3/4/5/6/7/8/7 [8]
 ... sys_spec_VolumetricEffects = 1/2/3/4/5/6/7/8/7 [8]
 ... sys_spec_Water = 1/2/3/4/5/6/7/8/7 [8]
 ... sys_spec_light = 1/2/3/4/5/6/7/8/7 [8]


variable: sys_spec_gameeffects 
type: int
current: 8
help: Console variable group to apply settings to multiple variables

sys_spec_gameeffects [7/default] [current]:
 ... mfx_Timeout = 0.01/0.01 [0.01]


variable: sys_spec_light 
type: int
current: 8
help: Console variable group to apply settings to multiple variables

sys_spec_light [7/default] [current]:


variable: sys_spec_objectdetail 
type: int
current: 8
help: Console variable group to apply settings to multiple variables

sys_spec_objectdetail [1/2/3/4/5/6/7/8/default] [current]:
 ... ca_AttachmentCullingRation = 145/145/145/145/145/300/360/400/360 [400]
 ... e_CoverageBufferReproj = 6/6/6/6/6/6/6/6/6 [6]
 ... e_DecalsAllowGameDecals = 1/1/1/1/1/1/1/1/1 [1]
 ... e_DecalsLifeTimeScale = 1/1/1/1/1/2/2/2/2 [2]
 ... e_DecalsOverlapping = 1/1/1/1/1/1/1/1/1 [1]
 ... e_Dissolve = 0/0/0/0/2/2/2/2/2 [2]
 ... e_LodMin = 0/0/0/0/0/0/0/0/0 [0]
 ... e_LodRatio = 10/10/10/10/10/15/20/40/20 [40]
 ... e_MaxViewDistSpecLerp = 0.5/0.5/0.5/0.5/0.5/1/1/1/1 [1]
 ... e_MergedMeshesInstanceDist = 1.0/1.0/1.0/1.0/1.0/1.0/1.0/2.0/1.0 [2]
 ... e_MergedMeshesPool = 8192/8192/8192/8192/8192/8192/8192/16384/8192 [16384]
 ... e_ObjQuality = 1/1/1/1/1/2/3/4/3 [4]
 ... e_OcclusionCullingViewDistRatio = 1/1/1/1/1/1/1/1/1 [1]
 ... e_ProcVegetation = 0/1/1/1/1/1/1/1/1 [1]
 ... e_StatObjBufferRenderTasks = 1/1/1/1/1/1/1/1/1 [1]
 ... e_StreamCgf = 0/0/0/0/0/0/0/0/0 [0]
 ... e_TerrainLodRatio = 1/1/1/1/1/1/1/0.5/1 [0.5]
 ... e_TerrainOcclusionCullingMaxDist = 130/130/130/130/130/200/200/200/200 [200]
 ... e_Tessellation = 0/0/0/0/0/0/0/1/0 [1]
 ... e_VegetationMinSize = 0.5/0.5/0.5/0.5/0.5/0/0/0/0 [0]
 ... e_ViewDistMin = 10/10/10/10/10/10/10/10/10 [10]
 ... e_ViewDistRatio = 50/50/75/75/50/75/100/125/100 [125]
 ... e_ViewDistRatioCustom = 60/60/60/60/60/100/100/125/100 [125]
 ... e_ViewDistRatioDetail = 25/25/25/25/25/35/100/125/100 [125]
 ... e_ViewDistRatioLights = 25/25/25/25/25/50/50/75/50 [75]
 ... e_ViewDistRatioVegetation = 21/50/50/50/50/75/100/125/100 [125]
 ... es_DebrisLifetimeScale = 0.6/0.6/0.6/0.6/0.6/0.8/1/1/1 [1]
 ... r_DrawNearZRange = 0.12/0.12/0.12/0.12/0.12/0.12/0.12/0.08/0.12 [0.08]
 ... r_FlaresTessellationRatio = 0.25/0.25/0.25/0.25/0.25/1/1/1/1 [1]
 ... r_SilhouettePOM = 0/0/0/0/0/0/0/1/0 [1]
 ... r_usezpass = 1/1/1/1/2/2/2/2/2 [2]


variable: sys_spec_particles 
type: int
current: 8
help: Console variable group to apply settings to multiple variables

sys_spec_particles [1/2/3/4/5/6/7/8/default] [current]:
 ... e_ParticlesGI = 0/0/0/0/1/1/1/1/1 [1]
 ... e_ParticlesMaxScreenFill = 16/16/16/16/32/64/128/160/128 [160]
 ... e_ParticlesMinDrawPixels = 2/2/2/2/1.5/1/1/1/1 [1]
 ... e_ParticlesMotionBlur = 0/0/0/0/0/0/0/1/0 [1]
 ... e_ParticlesObjectCollisions = 1/1/1/1/1/1/2/2/2 [2]
 ... e_ParticlesPoolSize = 4096/4096/4096/4096/16384/16384/16384/16384/16384 [16384]
 ... e_ParticlesPreload = 1/1/1/1/0/0/0/0/0 [0]
 ... e_ParticlesQuality = 2/2/2/2/1/2/3/4/3 [4]
 ... e_ParticlesSortQuality = 0/0/0/0/0/0/0/0/0 [0]
 ... r_ParticlesHalfRes = 1/1/1/1/1/0/0/0/0 [0]
 ... r_ParticlesInstanceVertices = 0/0/0/0/1/1/1/1/1 [1]
 ... r_ParticlesTessellation = 0/0/0/0/0/1/1/1/1 [1]


variable: sys_spec_physics 
type: int
current: 8
help: Console variable group to apply settings to multiple variables

sys_spec_physics [1/2/3/4/5/7/default] [current]:
 ... e_CullVegActivation = 30/30/30/30/30/50/50 [50]
 ... e_FoliageWindActivationDist = 10/10/10/10/10/25/25 [25]
 ... e_PhysMinCellSize = 16/16/16/16/4/4/4 [4]
 ... e_PhysOceanCell = 1/1/1/1/1/0.5/0.5 [0.5]
 ... e_PhysProxyTriLimit = 10000/10000/10000/10000/10000/10000/10000 [10000]
 ... es_MaxPhysDist = 100/100/100/100/50/100/100 [100]
 ... es_MaxPhysDistInvisible = 15/15/15/15/15/25/25 [25]
 ... g_breakage_mem_limit = 2000/2000/2000/2000/0/0/0 [0]
 ... g_breakage_particles_limit = 40/40/40/40/80/160/160 [160]
 ... g_no_secondary_breaking = 1/1/1/1/0/0/0 [0]
 ... g_tree_cut_reuse_dist = 1/1/1/1/0.35/0/0 [0]
 ... p_gravity_z = -13/-13/-13/-13/-13/-13/-13 [-13]
 ... p_max_MC_iters = 2000/2000/2000/2000/4000/6000/6000 [6000]
 ... p_max_entity_cells = 75000/75000/75000/75000/300000/300000/300000 [300000]
 ... p_max_object_splashes = 3/3/3/3/3/3/3 [3]
 ... p_max_substeps = 2/2/2/2/2/5/5 [5]
 ... p_max_substeps_large_group = 5/5/5/5/5/5/5 [5]
 ... p_num_bodies_large_group = 100/100/100/100/100/100/100 [100]
 ... p_splash_dist0 = 7/7/7/7/7/7/7 [7]
 ... p_splash_dist1 = 30/30/30/30/30/30/30 [30]
 ... p_splash_force0 = 10/10/10/10/10/10/10 [10]
 ... p_splash_force1 = 100/100/100/100/100/100/100 [100]
 ... p_splash_vel0 = 4.5/4.5/4.5/4.5/4.5/4.5/4.5 [4.5]
 ... p_splash_vel1 = 10/10/10/10/10/10/10 [10]
 ... v_vehicle_quality = 4/4/4/4/4/4/4 [4]


variable: sys_spec_postprocessing 
type: int
current: 8
help: Console variable group to apply settings to multiple variables

sys_spec_postprocessing [1/2/3/4/5/6/7/8/default] [current]:
 ... q_ShaderHDR = 1/1/1/1/1/1/2/3/2 [3]
 ... q_ShaderPostProcess = 1/1/2/2/1/1/2/3/2 [3]
 ... r_ChromaticAberration = 0/0/0/0/0/0/0/0/0 [0]
 ... r_ColorGrading = 0/1/1/1/1/1/1/1/1 [1]
 ... r_ColorGradingChartsCache = 0/4/4/4/4/0/0/0/0 [0]
 ... r_ColorSpace = 2/0/0/0/0/0/0/0/0 [0]
 ... r_DepthOfField = 0/1/1/1/2/2/2/2/2 [2]
 ... r_Flares = 0/0/0/0/1/1/1/1/1 [1]
 ... r_HDRBloom = 0/1/1/1/1/1/1/1/1 [1]
 ... r_HDRBloomQuality = 0/0/1/1/2/2/2/2/2 [2]
 ... r_MotionBlur = 0/0/0/0/2/2/2/2/2 [2]
 ... r_MotionBlurMaxViewDist = 16/16/16/16/16/100000/100000/100000/100000 [100000]
 ... r_MotionBlurQuality = 0/0/0/0/0/1/1/2/1 [2]
 ... r_MotionBlurShutterSpeed = 125/125/125/125/125/125/125/125/125 [125]
 ... r_PostProcessEffects = 1/1/1/1/1/1/1/1/1 [1]
 ... r_Rain = 1/1/1/1/2/2/2/2/2 [2]
 ... r_RainMaxViewDist_Deferred = 40/40/40/40/40/100/150/150/150 [150]
 ... r_Sharpening = 0/0/0/0/0/0/0/0/0 [0]
 ... r_Snow = 1/1/1/1/2/2/2/2/2 [2]
 ... r_SunShafts = 0/1/1/1/2/2/2/2/2 [2]
 ... r_ToneMapExposureType = 1/0/0/0/0/0/0/0/0 [0]
 ... r_ToneMapTechnique = 3/0/0/0/0/0/0/0/0 [0]
 ... r_TranspDepthFixup = 0/0/0/0/0/1/1/1/1 [1]


variable: sys_spec_quality 
type: int
current: 8
help: Console variable group to apply settings to multiple variables

sys_spec_quality [1/2/3/4/5/6/7/8/default] [current]:
 ... q_Renderer = 1/1/2/2/1/1/2/3/2 [3]
 ... q_ShaderFX = 1/1/1/1/1/1/2/3/2 [3]
 ... q_ShaderGeneral = 1/1/1/1/1/1/2/3/2 [3]
 ... q_ShaderGlass = 1/1/1/1/1/1/2/3/2 [3]
 ... q_ShaderIce = 1/1/1/1/1/1/2/3/2 [3]
 ... q_ShaderMetal = 1/1/1/1/1/1/2/3/2 [3]
 ... q_ShaderShadow = 1/1/1/1/1/1/2/3/2 [3]
 ... q_ShaderSky = 1/1/1/1/1/1/2/3/2 [3]
 ... q_ShaderTerrain = 1/1/1/1/1/1/2/3/2 [3]
 ... q_ShaderVegetation = 1/1/1/1/1/1/2/3/2 [3]


variable: sys_spec_shading 
type: int
current: 8
help: Console variable group to apply settings to multiple variables

sys_spec_shading [1/2/3/4/5/6/7/8/default] [current]:
 ... e_CacheNearestCubePicking = 1/1/1/1/1/1/1/1/1 [1]
 ... e_DynamicLightsMaxEntityLights = 2/2/2/2/7/11/16/16/16 [16]
 ... e_GI = 0/0/0/0/0/1/1/1/1 [1]
 ... e_LightVolumes = 2/2/2/2/1/1/1/1/1 [1]
 ... e_SkyUpdateRate = 0.5/0.5/0.5/0.5/0.5/1/1/1/1 [1]
 ... e_TerrainAo = 0/0/0/0/0/0/0/0/0 [0]
 ... e_VegetationUseTerrainColor = 0/0/0/0/1/1/1/1/1 [1]
 ... r_AntialiasingMode = 0/0/0/0/3/3/3/3/3 [3]
 ... r_DeferredShadingDepthBoundsTest = 1/1/1/1/1/1/1/1/1 [1]
 ... r_DeferredShadingSSS = 0/0/0/0/0/1/1/1/1 [1]
 ... r_DeferredShadingTiled = 0/0/0/0/2/2/2/2/2 [2]
 ... r_DeferredShadingTiledHairQuality = 0/0/0/0/0/1/1/2/1 [2]
 ... r_DetailDistance = 4/4/4/4/4/8/8/8/8 [8]
 ... r_EnvTexUpdateInterval = 0.075/0.075/0.075/0.075/0.075/0.05/0.05/0.05/0.05 [0.05]
 ... r_Refraction = 0/1/1/1/1/1/1/1/1 [1]
 ... r_RefractionPartialResolves = 0/0/0/0/2/2/2/2/2 [2]
 ... r_SSReflHalfRes = 1/1/1/1/1/1/1/0/1 [0]
 ... r_SSReflections = 0/0/0/0/0/1/1/1/1 [1]
 ... r_VisAreaClipLightsPerPixel = 1/1/1/1/1/1/1/1/1 [1]
 ... r_deferredShadingFilterGBuffer = 0/0/0/0/0/0/0/0/0 [0]
 ... r_ssdo = 0/0/0/1/1/1/1/1/1 [1]
 ... r_ssdoColorBleeding = 0/0/0/0/1/1/1/1/1 [1]
 ... r_ssdoHalfRes = 1/1/2/1/2/2/2/2/2 [2]
 ... sys_spec_Quality = 1/2/3/4/5/6/7/8/7 [8]


variable: sys_spec_shadows 
type: int
current: 8
help: Console variable group to apply settings to multiple variables

sys_spec_shadows [1/2/3/4/5/6/7/8/default] [current]:
 ... e_GsmLodsNum = 3/4/4/4/4/5/5/5/5 [5]
 ... e_GsmRange = 3/3/3/3/3/3/3/3/3 [3]
 ... e_ObjShadowCastSpec = 1/1/1/1/1/2/3/4/3 [4]
 ... e_ParticlesShadows = 0/0/0/0/0/1/1/1/1 [1]
 ... e_Shadows = 1/1/1/1/1/1/1/1/1 [1]
 ... e_ShadowsBlendCascades = 0/0/0/0/0/1/1/1/1 [1]
 ... e_ShadowsCastViewDistRatio = 0.8/0.8/0.8/0.8/0.8/1/1/1/1 [1]
 ... e_ShadowsClouds = 1/1/1/1/1/1/1/1/1 [1]
 ... e_ShadowsLodBiasFixed = 1/1/1/1/1/0/0/0/0 [0]
 ... e_ShadowsMaxTexRes = 512/512/512/512/512/1024/1024/1024/1024 [1024]
 ... e_ShadowsOnAlphaBlend = 0/0/0/0/0/0/0/0/0 [0]
 ... e_ShadowsPoolSize = 1024/1024/1024/1024/4096/4096/4096/4096/4096 [4096]
 ... e_ShadowsResScale = 4/4/4/4/4/4/4/4/4 [4]
 ... e_ShadowsTessellateCascades = 1/1/1/1/1/1/1/1/1 [1]
 ... e_ShadowsTessellateDLights = 0/0/0/0/0/0/0/0/0 [0]
 ... e_ShadowsUpdateViewDistRatio = 256/256/256/256/256/256/256/256/256 [256]
 ... r_DrawNearShadows = 0/0/0/0/1/1/1/1/1 [1]
 ... r_FogShadows = 0/0/0/0/0/2/2/1/2 [1]
 ... r_FogShadowsWater = 0/0/0/0/0/0/0/1/0 [1]
 ... r_ShadowJittering = 0/0/0/0/1/1/2.5/2.5/2.5 [2.5]
 ... r_ShadowPoolMaxFrames = 30/30/30/30/30/30/30/0/30 [0]
 ... r_ShadowPoolMaxTimeslicedUpdatesPerFrame = 100/100/100/100/100/100/100/100/100 [100]
 ... r_ShadowsCache = 4/4/4/4/4/4/4/5/4 [5]
 ... r_ShadowsCacheFormat = 0/0/0/0/1/1/1/1/1 [1]
 ... r_ShadowsCacheResolutions = 3162,2107/3162,2107/3162,2107/3162,2107/3162,2107/6324,4214/6324,4214/4214/6324,4214 [4214]
 ... r_ShadowsPCFiltering = 1/1/1/1/1/1/1/1/1 [1]
 ... r_ShadowsUseClipVolume = 1/1/1/1/1/1/1/1/1 [1]


variable: sys_spec_sound 
type: int
current: 8
help: Console variable group to apply settings to multiple variables

sys_spec_sound [7/default] [current]:


variable: sys_spec_texture 
type: int
current: 8
help: Console variable group to apply settings to multiple variables

sys_spec_texture [1/2/3/4/5/6/7/8/default] [current]:
 ... e_TerrainTextureStreamingPoolItemsNum = 16/16/16/16/64/64/64/64/64 [64]
 ... r_DynTexAtlasCloudsMaxSize = 8/8/8/8/24/24/32/32/32 [32]
 ... r_DynTexAtlasSpritesMaxSize = 8/8/8/8/16/16/32/32/32
 ... r_DynTexMaxSize = 20/20/20/20/50/60/80/80/80 [80]
 ... r_EnvCMResolution = 0/0/0/0/0/1/2/2/2 [2]
 ... r_EnvTexResolution = 1/1/1/1/1/2/3/3/3 [3]
 ... r_ImposterRatio = 2/2/2/2/2/1.5/1/1/1 [1]
 ... r_TexAtlasSize = 512/512/512/512/512/2048/2048/2048/2048 [2048]
 ... r_TexMaxAnisotropy = 2/2/2/2/2/8/4/16/4 [16]
 ... r_TexMinAnisotropy = 2/2/2/2/2/8/4/16/4 [16]
 ... r_TexNoAnisoAlphaTest = 1/1/1/1/1/1/0/0/0 [0]


variable: sys_spec_textureresolution 
type: int
current: 8
help: Console variable group to apply settings to multiple variables

sys_spec_textureresolution [0/1/2/3/4/6/7/8/default] [current]:
 ... r_TexturesStreamPoolSize = 256/384/384/384/384/512/640/1536/256 [1536]
 ... r_TexturesStreaming = 1/0/0/0/0/1/1/1/1 [1]
 ... r_TexturesStreamingMipBias = 0/0/0/0/0/0/0/0/0 [0]
 ... r_TexturesStreamingSkipMips = 2/0/0/0/0/1/0/0/2 [0]
 ... r_TexturesstreamingMinUsableMips = 8/8/8/8/8/8/8/8/8 [8]


variable: sys_spec_volumetriceffects 
type: int
current: 8
help: Console variable group to apply settings to multiple variables

sys_spec_volumetriceffects [1/2/3/4/5/6/7/default] [current]:
 ... e_Clouds = 1/1/1/1/1/1/1/1 [1]
 ... r_Beams = 0/0/0/0/0/0/1/1 [1]


variable: sys_spec_water 
type: int
current: 8
help: Console variable group to apply settings to multiple variables

sys_spec_water [1/2/3/4/5/6/7/8/default] [current]:
 ... e_WaterOceanFFT = 1/1/1/1/1/1/1/1/1 [1]
 ... e_WaterTessellationAmount = 20/20/20/20/20/10/10/85/10 [85]
 ... e_WaterTessellationSwathWidth = 10/10/10/10/10/10/10/10/10 [10]
 ... q_ShaderWater = 1/1/1/1/1/2/2/2/2 [2]
 ... r_WaterCaustics = 1/1/1/1/1/1/1/1/1 [1]
 ... r_WaterReflections = 1/1/1/1/1/1/1/1/1 [1]
 ... r_WaterReflectionsMinVisiblePixelsUpdate = 0.05/0.05/0.05/0.05/0.05/0.05/0.05/0.05/0.05 [0.05]
 ... r_WaterReflectionsQuality = 0/0/0/4/4/4/4/4/4 [4]
 ... r_WaterTessellationHW = 0/0/0/0/0/0/0/1/0 [1]
 ... r_WaterUpdateDistance = 1/1/1/1/1/1/0.2/0.2/0.2 [0.2]
 ... r_WaterUpdateFactor = 0.1/0.1/0.05/0.01/0.1/0.05/0.0/0.0/0.0 [0]
 ... r_WaterVolumeCaustics = 0/0/0/0/0/0/0/1/0 [1]
 ... r_WaterVolumeCausticsDensity = 64/64/64/64/64/128/256/256/256 [256]
 ... r_WaterVolumeCausticsMaxDist = 20/20/20/20/20/25/35/35/35 [35]
 ... r_WaterVolumeCausticsRes = 384/384/384/384/384/512/1024/1024/1024 [1024]
 ... r_WaterVolumeCausticsSnapFactor = 1/1/1/1/1/1/1/1/1 [1]


variable: sys_splashscreen 
type: string
current: EngineAssets/Textures/startscreen.tif
help: The splash screen to render during game initialization

variable: sys_splashscreenscalemode 
type: int
current: 1
help: 0 - scale to fit (letterbox)
1 - scale to fill (cropped)
Default is 1

variable: sys_SSInfo 
type: int
current: 0
help: Show SourceSafe information (Name,Comment,Date) for file errors.Usage: sys_SSInfo [0/1]
Default is 0 (off)

variable: sys_streaming_CPU 
type: int
current: 1
help: Specifies the physical CPU file IO thread run on

variable: sys_streaming_CPU_worker 
type: int
current: 5
help: Specifies the physical CPU file IO worker thread/s run on

variable: sys_streaming_debug 
type: int
current: 0
help: Enable streaming debug information
0=off
1=Streaming Stats
2=File IO
3=Request Order
4=Write to Log
5=Stats per extension


variable: sys_streaming_debug_filter 
type: int
current: 0
help: Set streaming debug information filter.
0=all
1=Texture
2=Geometry
3=Terrain
4=Animation
5=Music
6=Sound
7=Shader


variable: sys_streaming_debug_filter_file_name 
type: string
current: 
help: Set streaming debug information filter

variable: sys_streaming_debug_filter_min_time 
type: float
current: 0
help: Show only slow items.

variable: sys_streaming_in_blocks 
type: int
current: 1
help: Streaming of large files happens in blocks

variable: sys_streaming_max_bandwidth 
type: float
current: 0
help: Enables capping of max streaming bandwidth in MB/s

variable: sys_streaming_max_finalize_per_frame 
type: int
current: 0
help: Maximum stream finalizing calls per frame to reduce the CPU impact on main thread (0 to disable)

variable: sys_streaming_memory_budget 
type: int
current: 10240
help: Temp memory streaming system can use in KB

variable: sys_streaming_requests_grouping_time_period 
type: int
current: 2
help: Streaming requests are grouped by request time and then sorted by disk offset

variable: sys_streaming_resetstats 
type: int
current: 0
help: Reset all the streaming stats

variable: sys_streaming_use_optical_drive_thread 
type: int
current: 1
help: Allow usage of an extra optical drive thread for faster streaming from 2 medias

variable: sys_TaskThread0_CPU 
type: int
current: 3
help: Specifies the physical CPU index taskthread0 will run on

variable: sys_TaskThread1_CPU 
type: int
current: 5
help: Specifies the physical CPU index taskthread1 will run on

variable: sys_TaskThread2_CPU 
type: int
current: 4
help: Specifies the physical CPU index taskthread2 will run on

variable: sys_TaskThread3_CPU 
type: int
current: 3
help: Specifies the physical CPU index taskthread3 will run on

variable: sys_TaskThread4_CPU 
type: int
current: 2
help: Specifies the physical CPU index taskthread4 will run on

variable: sys_TaskThread5_CPU 
type: int
current: 1
help: Specifies the physical CPU index taskthread5 will run on

variable: sys_telemetry_keep_alive 
type: float
current: 5
help: Telemetry stream keep-alive time

variable: sys_telemetry_stream_file 
type: string
current: 
help: Telemetry stream file name

variable: sys_telemetry_stream_ip 
type: string
current: 
help: Telemetry stream ip address

variable: sys_trackview 
type: int
current: 1
help: Enables TrackView Update

variable: sys_UncachedStreamReads 
type: int
current: 1
help: Enable stream reads via an uncached file handle

variable: sys_update_profile_time 
type: float
current: 1
help: Time to keep updates timings history for.

variable: sys_usePlatformSavingAPI 
type: int
current: 0
help: Use the platform APIs for saving and loading (complies with TRCs, but allocates lots of memory)

variable: sys_usePlatformSavingAPIEncryption 
type: int
current: 0
help: Use encryption cipher when using the platform APIs for saving and loading

variable: sys_version 
type: string
current: 
help: Override system file/product version

variable: sys_vtune 
type: int
current: 0
help: 

variable: sys_warnings 
type: int
current: 0
help: Toggles printing system warnings.
Usage: sys_warnings [0/1]
Default is 0 (off).

variable: sys_WER 
type: int
current: 0
help: Enables Windows Error Reporting

variable: t_Debug 
type: int
current: 0
help: Timer debug: 0 = off, 1 = events, 2 = verbose

variable: t_FixedStep 
type: float
current: 0
help: Game updated with this fixed frame time
0=off, number specifies the frame time in seconds
e.g. 0.033333(30 fps), 0.1(10 fps), 0.01(100 fps)

variable: t_MaxStep 
type: float
current: 0.25
help: Game systems clamped to this frame time

variable: t_Scale 
type: float
current: 1
help: Game time scaled by this - for variable slow motion

variable: t_Smoothing 
type: int
current: 1
help: time smoothing
0=off, 1=on

variable: ui_DisplayElemBounds 
type: int
current: 0
help: 0=off, 1=display the UI element bounding boxes

variable: v_autoDisable 
type: int
current: 1
help: Enables/disables vehicle autodisabling

variable: v_clientPredict 
type: int
current: 1
help: Enable client-side prediction on vehicle movement

variable: v_clientPredictAdditionalTime 
type: float
current: 0.033
help: Additional time offset to calibrate client prediction, will be added to ping and p_net_interp cvar

variable: v_clientPredictMaxTime 
type: float
current: 0.5
help: The maximum time the client can predict ahead of the server position (should be roughly equal to the maximum ping we expect in the real world)

variable: v_clientPredictSmoothing 
type: int
current: 1
help: Enable client-side prediction smoothing on vehicle movement

variable: v_clientPredictSmoothingConst 
type: float
current: 8
help: The amount of smoothing to use, lower values result in smoothing looking movement but more lag behind the true position

variable: v_debug_flip_over 
type: int
current: 0
help: flip over the current vehicle that the player is driving

variable: v_debug_mem 
type: int
current: 0
help: display memory statistic for vehicles

variable: v_debug_reorient 
type: int
current: 0
help: reset the orientation of the vehicle that the player is driving so that it is upright again

variable: v_debugCollisionDamage 
type: int
current: 0
help: Enable debug output for vehicle collisions

variable: v_debugdraw DUMPTODISK
type: int
current: 0
help: Displays vehicle status info on HUD
Values:
1:  common stuff
2:  vehicle particles
3:  parts
4:  views
6:  parts + partIds
7:  parts + transformations and bboxes
8:  component damage
10: vehicle editor

variable: v_debugSuspensionIK 
type: int
current: 0
help: Debug draw the suspension ik

variable: v_debugVehicle 
type: string
current: 
help: Vehicle entity name to use for debugging output

variable: v_debugView DUMPTODISK
type: int
current: 0
help: Activate a 360 degree rotating third person camera instead of the camera usually available on the vehicle class

variable: v_debugViewAbove DUMPTODISK
type: int
current: 0
help: Debug camera, looking down on vehicle

variable: v_debugViewAboveH DUMPTODISK
type: float
current: 10
help: Debug camera, looking down on vehicle, height 

variable: v_debugViewDetach DUMPTODISK
type: int
current: 0
help: Freeze vehicle camera position, (1) fixed rotation, (2) track the vehicle

variable: v_disable_hull 
type: int
current: 0
help: Disable hull proxies

variable: v_disableEntry 
type: int
current: 0
help: Don't allow players to enter vehicles

variable: v_draw_components DUMPTODISK
type: int
current: 0
help: Enables/disables display of components and their damage count

variable: v_draw_helpers 
type: int
current: 0
help: Enables/disables display of vehicle helpers

variable: v_draw_passengers 
type: int
current: 0
help: draw passenger TMs set by VehicleSeat

variable: v_draw_seats 
type: int
current: 0
help: Enables/disables display of seat positions

variable: v_draw_tm 
type: int
current: 0
help: Enables/disables drawing of local part matrices

variable: v_driverControlledMountedGuns 
type: int
current: 1
help: Specifies if the driver can control the vehicles mounted gun when driving without gunner.

variable: v_enableMannequin 
type: int
current: 1
help: Enables enter/exit transition animations for vehicles

variable: v_FlippedExplosionPlayerMinDistance 
type: float
current: 25
help: If a player is within this distance then don't explode yet

variable: v_FlippedExplosionRetryTimeMS 
type: int
current: 10000
help: If a nearby player blocked explosion then try again after this time period

variable: v_FlippedExplosionTimeToExplode 
type: float
current: 20
help: The number of seconds to wait after a vehicle is flipped to attempt exploding

variable: v_goliathMode 
type: int
current: 0
help: Makes all vehicles invincible

variable: v_independentMountedGuns 
type: int
current: 1
help: Whether mounted gunners operate their turret independently from the parent vehicle

variable: v_lights 
type: int
current: 2
help: Controls vehicle lights.
0: disable all lights
1: enable lights only for local player
2: enable all lights

variable: v_lights_enable_always 
type: int
current: 0
help: Vehicle lights are always on (debugging)

variable: v_playerTransitions 
type: int
current: 1
help: Enables enter/exit transition animations for vehicles

variable: v_ragdollPassengers 
type: int
current: 0
help: Forces vehicle passenger to detach and ragdoll when they die inside of a vehicle

variable: v_serverControlled REQUIRE_LEVEL_RELOAD
type: int
current: 1
help: Makes the vehicles server authoritative, clients only send inputs to the server who then drives the vehicles

variable: v_set_passenger_tm 
type: int
current: 1
help: enable/disable passenger entity tm update

variable: v_show_all 
type: int
current: 0
help: 

variable: v_slipFrictionModFront 
type: float
current: 0
help: if non-zero, used as slip friction modifier (front wheels)

variable: v_slipFrictionModRear 
type: float
current: 0
help: if non-zero, used as slip friction modifier (rear wheels)

variable: v_slipSlopeFront 
type: float
current: 0
help: coefficient for slip friction slope calculation (front wheels)

variable: v_slipSlopeRear 
type: float
current: 0
help: coefficient for slip friction slope calculation (rear wheels)

variable: v_testClientPredict 
type: int
current: 0
help: Test client-side prediction on a listen server with no clients, the value represents the number of frames to rewind and replay

variable: v_transitionAnimations 
type: int
current: 1
help: Enables enter/exit transition animations for vehicles

variable: v_treadUpdateTime 
type: float
current: 0
help: delta time for tread UV update, 0 means always update

variable: v_vehicle_quality 
type: int
current: 4
help: Geometry/Physics quality (1-lowspec, 4-highspec)

variable: VisualConsole 
type: int
current: 0
help: writes console to screen

variable: VisualConsoleSubStr 
type: string
current: 
help: writes console to screen if it matches substr

